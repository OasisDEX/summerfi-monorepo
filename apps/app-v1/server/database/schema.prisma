generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model migrations {
  executed_at DateTime? @default(now())
  hash        String
  id          Int       @id
  name        String    @unique
}

model MoonpayWebhookRequestLog {
  created                  DateTime @default(now())
  id                       Int      @id @default(autoincrement())
  moonpay_base_currency_id String?
  moonpay_card_id          String?
  moonpay_currency_id      String?
  moonpay_customer_id      String?
  moonpay_environment      String?
  moonpay_failed_reason    String?
  moonpay_order_id         String
  moonpay_order_status     String?
  moonpay_type             String?
  updated                  DateTime @default(now())

  @@index([moonpay_environment], name: "moonpay_webhook_request_log_moonpay_environment_idx")
  @@index([moonpay_order_id], name: "moonpay_webhook_request_log_moonpay_order_id_idx")
  @@index([moonpay_order_status], name: "moonpay_webhook_request_log_moonpay_order_status_idx")
  @@map("moonpay_webhook_request_log")
}

model OnrampOrder {
  account_ref        String
  created            DateTime          @default(now())
  dest_amount        Float?
  dest_currency      String?
  id                 Int               @id @default(autoincrement())
  network            String?
  onramp_provider_id Int
  order_message      String?
  order_ref          String            @unique
  order_status       OrderStatus?
  recipient          String?
  source_amount      Float?
  source_currency    String?
  updated            DateTime?
  onramp_provider    OnrampProvider    @relation(fields: [onramp_provider_id], references: [id])
  wyre_reservation   WyreReservation[]

  @@index([created], name: "onramp_order_created_idx")
  @@index([dest_amount], name: "onramp_order_dest_amount_idx")
  @@index([network], name: "onramp_order_network_idx")
  @@index([order_status], name: "onramp_order_order_status_idx")
  @@index([recipient], name: "onramp_order_recipient_idx")
  @@index([source_amount], name: "onramp_order_source_amount_idx")
  @@map("onramp_order")
}

model OnrampProvider {
  id            Int           @id @default(autoincrement())
  name          String
  provider_type String
  onramp_order  OnrampOrder[]

  @@index([provider_type], name: "onramp_provider_provider_type_idx")
  @@map("onramp_provider")
}

model WyreReservation {
  amount               Float
  created              DateTime     @default(now())
  dest_currency        String
  failure_redirect_url String?
  id                   Int          @id @default(autoincrement())
  network              String?
  onramp_order_id      Int?
  pay_url              String
  recipient            String
  redirect_url         String?
  reservation          String       @unique
  source_currency      String
  wyre_account         String
  onramp_order         OnrampOrder? @relation(fields: [onramp_order_id], references: [id])

  @@index([created], name: "wyre_reservation_created_idx")
  @@map("wyre_reservation")
}

model WyreWebhookRequestLog {
  created            DateTime @default(now())
  id                 Int      @id @default(autoincrement())
  wyre_account_id    String
  wyre_environment   String?
  wyre_failed_reason String?
  wyre_order_id      String
  wyre_order_status  String?
  wyre_reference_id  String?
  wyre_reservation   String?
  wyre_transfer_id   String?

  @@index([wyre_environment], name: "wyre_webhook_request_log_wyre_environment_idx")
  @@index([wyre_order_id], name: "wyre_webhook_request_log_wyre_order_id_idx")
  @@index([wyre_order_status], name: "wyre_webhook_request_log_wyre_order_status_idx")
  @@index([wyre_reference_id], name: "wyre_webhook_request_log_wyre_reference_id_idx")
  @@index([wyre_transfer_id], name: "wyre_webhook_request_log_wyre_transfer_id_idx")
  @@map("wyre_webhook_request_log")
}

model LatamexUser {
  created DateTime @default(now())
  email   String
  country String
  uuid    String   @id

  @@index([email], name: "latamex_email_idx")
  @@index([uuid], name: "latamex_uuid_idx")
  @@map("latamex_user")
}

enum OrderStatus {
  complete
  expired
  failed
  initialised
  pending
  rejected
  incomplete
  accepted
  @@map("order_status")
}

model UserEmail {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  tos_approval TosApproval[]

  @@unique([email], name: "user_email_unique_email")
  @@map("user_email")
}

model TosApproval {
  id          Int        @id @default(autoincrement())
  address     String
  email_id    Int?
  email       UserEmail? @relation(fields: [email_id], references: [id])
  doc_version String
  sign_date   DateTime

  @@unique([address, doc_version], name: "tos_approval_unique_signature")
  @@index([email_id], name: "tos_approval_email__id_idx")
  @@map(name: "tos_approval")
}
