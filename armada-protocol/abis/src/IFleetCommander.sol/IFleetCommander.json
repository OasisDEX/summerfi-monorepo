{"abi":[{"type":"function","name":"addArk","inputs":[{"name":"ark","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addArks","inputs":[{"name":"arks","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"adjustBuffer","inputs":[{"name":"data","type":"tuple[]","internalType":"struct RebalanceData[]","components":[{"name":"fromArk","type":"address","internalType":"address"},{"name":"toArk","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"boardData","type":"bytes","internalType":"bytes"},{"name":"disembarkData","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"allowance","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"approve","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"arks","inputs":[{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"asset","inputs":[],"outputs":[{"name":"assetTokenAddress","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"balanceOf","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"bufferArk","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"convertToAssets","inputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"assets","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"convertToShares","inputs":[{"name":"assets","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"deposit","inputs":[{"name":"assets","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"}],"outputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"deposit","inputs":[{"name":"assets","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"},{"name":"referralCode","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"forceRebalance","inputs":[{"name":"data","type":"tuple[]","internalType":"struct RebalanceData[]","components":[{"name":"fromArk","type":"address","internalType":"address"},{"name":"toArk","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"boardData","type":"bytes","internalType":"bytes"},{"name":"disembarkData","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getArks","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"getConfig","inputs":[],"outputs":[{"name":"","type":"tuple","internalType":"struct FleetConfig","components":[{"name":"bufferArk","type":"address","internalType":"contract IArk"},{"name":"minimumBufferBalance","type":"uint256","internalType":"uint256"},{"name":"depositCap","type":"uint256","internalType":"uint256"},{"name":"maxRebalanceOperations","type":"uint256","internalType":"uint256"},{"name":"stakingRewardsManager","type":"address","internalType":"address"}]}],"stateMutability":"view"},{"type":"function","name":"isArkActive","inputs":[{"name":"ark","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"maxBufferRedeem","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"maxBufferWithdraw","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"maxDeposit","inputs":[{"name":"receiver","type":"address","internalType":"address"}],"outputs":[{"name":"maxAssets","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"maxMint","inputs":[{"name":"receiver","type":"address","internalType":"address"}],"outputs":[{"name":"maxShares","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"maxRedeem","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"maxShares","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"maxWithdraw","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"maxAssets","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"mint","inputs":[{"name":"shares","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"}],"outputs":[{"name":"assets","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"pause","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"previewDeposit","inputs":[{"name":"assets","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"previewMint","inputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"assets","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"previewRedeem","inputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"assets","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"previewWithdraw","inputs":[{"name":"assets","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"rebalance","inputs":[{"name":"data","type":"tuple[]","internalType":"struct RebalanceData[]","components":[{"name":"fromArk","type":"address","internalType":"address"},{"name":"toArk","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"boardData","type":"bytes","internalType":"bytes"},{"name":"disembarkData","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"redeem","inputs":[{"name":"shares","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"assets","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"redeemFromArks","inputs":[{"name":"shares","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"assets","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"redeemFromBuffer","inputs":[{"name":"shares","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"assets","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeArk","inputs":[{"name":"ark","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setArkDepositCap","inputs":[{"name":"ark","type":"address","internalType":"address"},{"name":"newDepositCap","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setArkMaxDepositPercentageOfTVL","inputs":[{"name":"ark","type":"address","internalType":"address"},{"name":"newMaxDepositPercentageOfTVL","type":"uint256","internalType":"Percentage"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setArkMaxRebalanceInflow","inputs":[{"name":"ark","type":"address","internalType":"address"},{"name":"newMaxRebalanceInflow","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setArkMaxRebalanceOutflow","inputs":[{"name":"ark","type":"address","internalType":"address"},{"name":"newMaxRebalanceOutflow","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setFleetDepositCap","inputs":[{"name":"newDepositCap","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setMaxRebalanceOperations","inputs":[{"name":"newMaxRebalanceOperations","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setMinimumBufferBalance","inputs":[{"name":"newMinimumBalance","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setMinimumPauseTime","inputs":[{"name":"newMinimumPauseTime","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setStakingRewardsManager","inputs":[{"name":"newStakingRewardsManager","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setTipRate","inputs":[{"name":"newTipRate","type":"uint256","internalType":"Percentage"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"tip","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"totalAssets","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transfer","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"unpause","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateRebalanceCooldown","inputs":[{"name":"newCooldown","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdraw","inputs":[{"name":"assets","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawFromArks","inputs":[{"name":"assets","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawFromBuffer","inputs":[{"name":"assets","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawableTotalAssets","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"spender","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ArkAdded","inputs":[{"name":"ark","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ArkRemoved","inputs":[{"name":"ark","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Deposit","inputs":[{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"assets","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"shares","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"FeeAddressUpdated","inputs":[{"name":"newAddress","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"FleetCommanderBufferAdjusted","inputs":[{"name":"keeper","type":"address","indexed":true,"internalType":"address"},{"name":"totalMoved","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"FleetCommanderDepositCapUpdated","inputs":[{"name":"newCap","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"FleetCommanderMaxRebalanceOperationsUpdated","inputs":[{"name":"newMaxRebalanceOperations","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"FleetCommanderRedeemedFromArks","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"receiver","type":"address","indexed":false,"internalType":"address"},{"name":"totalRedeemed","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"FleetCommanderReferral","inputs":[{"name":"referee","type":"address","indexed":true,"internalType":"address"},{"name":"referralCode","type":"bytes","indexed":true,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"FleetCommanderStakingRewardsUpdated","inputs":[{"name":"newStakingRewards","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"FleetCommanderWithdrawnFromArks","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"receiver","type":"address","indexed":false,"internalType":"address"},{"name":"totalWithdrawn","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"FleetCommanderminimumBufferBalanceUpdated","inputs":[{"name":"newBalance","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"FundsBufferBalanceUpdated","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"prevBalance","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newBalance","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"FundsQueueRefilled","inputs":[{"name":"keeper","type":"address","indexed":true,"internalType":"address"},{"name":"prevBalance","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newBalance","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"MinFundsQueueBalanceUpdated","inputs":[{"name":"keeper","type":"address","indexed":true,"internalType":"address"},{"name":"newBalance","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"QueuedFundsCommitted","inputs":[{"name":"keeper","type":"address","indexed":true,"internalType":"address"},{"name":"prevBalance","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newBalance","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Rebalanced","inputs":[{"name":"keeper","type":"address","indexed":true,"internalType":"address"},{"name":"rebalances","type":"tuple[]","indexed":false,"internalType":"struct RebalanceData[]","components":[{"name":"fromArk","type":"address","internalType":"address"},{"name":"toArk","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"boardData","type":"bytes","internalType":"bytes"},{"name":"disembarkData","type":"bytes","internalType":"bytes"}]}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Withdraw","inputs":[{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"assets","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"shares","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"FleetCommanderArkAlreadyExists","inputs":[{"name":"ark","type":"address","internalType":"address"}]},{"type":"error","name":"FleetCommanderArkAlreadyHasCommander","inputs":[]},{"type":"error","name":"FleetCommanderArkAssetsNotZero","inputs":[{"name":"ark","type":"address","internalType":"address"}]},{"type":"error","name":"FleetCommanderArkDepositCapGreaterThanZero","inputs":[{"name":"ark","type":"address","internalType":"address"}]},{"type":"error","name":"FleetCommanderArkDepositCapZero","inputs":[{"name":"ark","type":"address","internalType":"address"}]},{"type":"error","name":"FleetCommanderArkNotActive","inputs":[{"name":"ark","type":"address","internalType":"address"}]},{"type":"error","name":"FleetCommanderArkNotFound","inputs":[{"name":"ark","type":"address","internalType":"address"}]},{"type":"error","name":"FleetCommanderCantUseMaxUintMovingFromBuffer","inputs":[]},{"type":"error","name":"FleetCommanderCantUseRebalanceOnBufferArk","inputs":[]},{"type":"error","name":"FleetCommanderEffectiveDepositCapExceeded","inputs":[{"name":"ark","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"effectiveDepositCap","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"FleetCommanderExceedsMaxInflow","inputs":[{"name":"fromArk","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"maxRebalanceInflow","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"FleetCommanderExceedsMaxOutflow","inputs":[{"name":"fromArk","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"maxRebalanceOutflow","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"FleetCommanderInsufficientBuffer","inputs":[]},{"type":"error","name":"FleetCommanderInvalidArkAddress","inputs":[]},{"type":"error","name":"FleetCommanderInvalidBufferAdjustment","inputs":[]},{"type":"error","name":"FleetCommanderInvalidSourceArk","inputs":[{"name":"ark","type":"address","internalType":"address"}]},{"type":"error","name":"FleetCommanderInvalidStakingRewardsManager","inputs":[]},{"type":"error","name":"FleetCommanderMovedMoreThanAvailable","inputs":[]},{"type":"error","name":"FleetCommanderNoExcessFunds","inputs":[]},{"type":"error","name":"FleetCommanderNoFundsMoved","inputs":[]},{"type":"error","name":"FleetCommanderRebalanceAmountZero","inputs":[{"name":"ark","type":"address","internalType":"address"}]},{"type":"error","name":"FleetCommanderRebalanceNoOperations","inputs":[]},{"type":"error","name":"FleetCommanderRebalanceTooManyOperations","inputs":[{"name":"operationsCount","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"FleetCommanderStakingRewardsManagerNotSet","inputs":[]},{"type":"error","name":"FleetCommanderTransfersDisabled","inputs":[]},{"type":"error","name":"FleetCommanderUnauthorizedRedemption","inputs":[{"name":"caller","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"FleetCommanderUnauthorizedWithdrawal","inputs":[{"name":"caller","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"WithdrawalAmountExceedsMaxBufferLimit","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addArk(address)":"e37d5b7f","addArks(address[])":"cc5b1e55","adjustBuffer((address,address,uint256,bytes,bytes)[])":"cada5143","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","arks(uint256)":"ff32a42a","asset()":"38d52e0f","balanceOf(address)":"70a08231","bufferArk()":"c8169aa1","convertToAssets(uint256)":"07a2d13a","convertToShares(uint256)":"c6e6f592","decimals()":"313ce567","deposit(uint256,address)":"6e553f65","deposit(uint256,address,bytes)":"faa9bce9","forceRebalance((address,address,uint256,bytes,bytes)[])":"e7b20e5b","getArks()":"f1cd665b","getConfig()":"c3f909d4","isArkActive(address)":"d25dd101","maxBufferRedeem(address)":"9265b76e","maxBufferWithdraw(address)":"3e314c76","maxDeposit(address)":"402d267d","maxMint(address)":"c63d75b6","maxRedeem(address)":"d905777e","maxWithdraw(address)":"ce96cb77","mint(uint256,address)":"94bf804d","name()":"06fdde03","pause()":"8456cb59","previewDeposit(uint256)":"ef8b30f7","previewMint(uint256)":"b3d7f6b9","previewRedeem(uint256)":"4cdad506","previewWithdraw(uint256)":"0a28a477","rebalance((address,address,uint256,bytes,bytes)[])":"fcf2849f","redeem(uint256,address,address)":"ba087652","redeemFromArks(uint256,address,address)":"3a7c9f0e","redeemFromBuffer(uint256,address,address)":"f3577816","removeArk(address)":"96c25a38","setArkDepositCap(address,uint256)":"34050560","setArkMaxDepositPercentageOfTVL(address,uint256)":"f3ba553e","setArkMaxRebalanceInflow(address,uint256)":"d45a07a1","setArkMaxRebalanceOutflow(address,uint256)":"b637766c","setFleetDepositCap(uint256)":"d902d41a","setMaxRebalanceOperations(uint256)":"133ab579","setMinimumBufferBalance(uint256)":"4daecb9c","setMinimumPauseTime(uint256)":"e193858f","setStakingRewardsManager(address)":"5e5a9ea9","setTipRate(uint256)":"5822198f","symbol()":"95d89b41","tip()":"2755cd2d","totalAssets()":"01e1d114","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","unpause()":"3f4ba83a","updateRebalanceCooldown(uint256)":"dc9de0a8","withdraw(uint256,address,address)":"b460af94","withdrawFromArks(uint256,address,address)":"a039e944","withdrawFromBuffer(uint256,address,address)":"5f538f6f","withdrawableTotalAssets()":"d570ee47"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"}],\"name\":\"FleetCommanderArkAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FleetCommanderArkAlreadyHasCommander\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"}],\"name\":\"FleetCommanderArkAssetsNotZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"}],\"name\":\"FleetCommanderArkDepositCapGreaterThanZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"}],\"name\":\"FleetCommanderArkDepositCapZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"}],\"name\":\"FleetCommanderArkNotActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"}],\"name\":\"FleetCommanderArkNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FleetCommanderCantUseMaxUintMovingFromBuffer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FleetCommanderCantUseRebalanceOnBufferArk\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"effectiveDepositCap\",\"type\":\"uint256\"}],\"name\":\"FleetCommanderEffectiveDepositCapExceeded\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromArk\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxRebalanceInflow\",\"type\":\"uint256\"}],\"name\":\"FleetCommanderExceedsMaxInflow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromArk\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxRebalanceOutflow\",\"type\":\"uint256\"}],\"name\":\"FleetCommanderExceedsMaxOutflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FleetCommanderInsufficientBuffer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FleetCommanderInvalidArkAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FleetCommanderInvalidBufferAdjustment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"}],\"name\":\"FleetCommanderInvalidSourceArk\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FleetCommanderInvalidStakingRewardsManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FleetCommanderMovedMoreThanAvailable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FleetCommanderNoExcessFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FleetCommanderNoFundsMoved\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"}],\"name\":\"FleetCommanderRebalanceAmountZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FleetCommanderRebalanceNoOperations\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"operationsCount\",\"type\":\"uint256\"}],\"name\":\"FleetCommanderRebalanceTooManyOperations\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FleetCommanderStakingRewardsManagerNotSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FleetCommanderTransfersDisabled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"FleetCommanderUnauthorizedRedemption\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"FleetCommanderUnauthorizedWithdrawal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawalAmountExceedsMaxBufferLimit\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"}],\"name\":\"ArkAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"}],\"name\":\"ArkRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"FeeAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"keeper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalMoved\",\"type\":\"uint256\"}],\"name\":\"FleetCommanderBufferAdjusted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCap\",\"type\":\"uint256\"}],\"name\":\"FleetCommanderDepositCapUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxRebalanceOperations\",\"type\":\"uint256\"}],\"name\":\"FleetCommanderMaxRebalanceOperationsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalRedeemed\",\"type\":\"uint256\"}],\"name\":\"FleetCommanderRedeemedFromArks\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"referralCode\",\"type\":\"bytes\"}],\"name\":\"FleetCommanderReferral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newStakingRewards\",\"type\":\"address\"}],\"name\":\"FleetCommanderStakingRewardsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalWithdrawn\",\"type\":\"uint256\"}],\"name\":\"FleetCommanderWithdrawnFromArks\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"FleetCommanderminimumBufferBalanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"FundsBufferBalanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"keeper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"FundsQueueRefilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"keeper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"MinFundsQueueBalanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"keeper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"QueuedFundsCommitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"keeper\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"fromArk\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toArk\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"boardData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"disembarkData\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct RebalanceData[]\",\"name\":\"rebalances\",\"type\":\"tuple[]\"}],\"name\":\"Rebalanced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"}],\"name\":\"addArk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"arks\",\"type\":\"address[]\"}],\"name\":\"addArks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"fromArk\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toArk\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"boardData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"disembarkData\",\"type\":\"bytes\"}],\"internalType\":\"struct RebalanceData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"adjustBuffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"arks\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"assetTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bufferArk\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"referralCode\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"fromArk\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toArk\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"boardData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"disembarkData\",\"type\":\"bytes\"}],\"internalType\":\"struct RebalanceData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"forceRebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getArks\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IArk\",\"name\":\"bufferArk\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minimumBufferBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxRebalanceOperations\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"stakingRewardsManager\",\"type\":\"address\"}],\"internalType\":\"struct FleetConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"}],\"name\":\"isArkActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxBufferRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxBufferWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"fromArk\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toArk\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"boardData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"disembarkData\",\"type\":\"bytes\"}],\"internalType\":\"struct RebalanceData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeemFromArks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeemFromBuffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"}],\"name\":\"removeArk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newDepositCap\",\"type\":\"uint256\"}],\"name\":\"setArkDepositCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"},{\"internalType\":\"Percentage\",\"name\":\"newMaxDepositPercentageOfTVL\",\"type\":\"uint256\"}],\"name\":\"setArkMaxDepositPercentageOfTVL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newMaxRebalanceInflow\",\"type\":\"uint256\"}],\"name\":\"setArkMaxRebalanceInflow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newMaxRebalanceOutflow\",\"type\":\"uint256\"}],\"name\":\"setArkMaxRebalanceOutflow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDepositCap\",\"type\":\"uint256\"}],\"name\":\"setFleetDepositCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxRebalanceOperations\",\"type\":\"uint256\"}],\"name\":\"setMaxRebalanceOperations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMinimumBalance\",\"type\":\"uint256\"}],\"name\":\"setMinimumBufferBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMinimumPauseTime\",\"type\":\"uint256\"}],\"name\":\"setMinimumPauseTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newStakingRewardsManager\",\"type\":\"address\"}],\"name\":\"setStakingRewardsManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Percentage\",\"name\":\"newTipRate\",\"type\":\"uint256\"}],\"name\":\"setTipRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tip\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCooldown\",\"type\":\"uint256\"}],\"name\":\"updateRebalanceCooldown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdrawFromArks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdrawFromBuffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawableTotalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FleetCommanderArkAlreadyExists(address)\":[{\"params\":{\"ark\":\"The address of the Ark that already exists\"}}],\"FleetCommanderArkAssetsNotZero(address)\":[{\"params\":{\"ark\":\"The address of the Ark with non-zero assets\"}}],\"FleetCommanderArkDepositCapGreaterThanZero(address)\":[{\"params\":{\"ark\":\"The address of the Ark with a non-zero deposit cap\"}}],\"FleetCommanderArkDepositCapZero(address)\":[{\"params\":{\"ark\":\"The address of the Ark with zero deposit cap.\"}}],\"FleetCommanderArkNotActive(address)\":[{\"params\":{\"ark\":\"The address of the inactive Ark.\"}}],\"FleetCommanderArkNotFound(address)\":[{\"params\":{\"ark\":\"The address of the Ark that was not found\"}}],\"FleetCommanderEffectiveDepositCapExceeded(address,uint256,uint256)\":[{\"params\":{\"amount\":\"Amount of tokens added to target ark\",\"ark\":\"The address of the invalid Ark.\",\"effectiveDepositCap\":\"Effective deposit cap of the ark (minimum of % of fleet TVL or arbitrary ark deposit cap)\"}}],\"FleetCommanderExceedsMaxInflow(address,uint256,uint256)\":[{\"params\":{\"amount\":\"The amount being moved.\",\"fromArk\":\"The address of the Ark to which funds are being moved.\",\"maxRebalanceInflow\":\"The maximum allowed inflow.\"}}],\"FleetCommanderExceedsMaxOutflow(address,uint256,uint256)\":[{\"params\":{\"amount\":\"The amount being moved.\",\"fromArk\":\"The address of the Ark from which funds are being moved.\",\"maxRebalanceOutflow\":\"The maximum allowed outflow.\"}}],\"FleetCommanderInvalidSourceArk(address)\":[{\"params\":{\"ark\":\"The address of the invalid source Ark.\"}}],\"FleetCommanderRebalanceAmountZero(address)\":[{\"params\":{\"ark\":\"The address of the Ark with zero rebalance amount.\"}}],\"FleetCommanderRebalanceTooManyOperations(uint256)\":[{\"params\":{\"operationsCount\":\"The number of operations attempted.\"}}],\"FleetCommanderUnauthorizedRedemption(address,address)\":[{\"params\":{\"caller\":\"The address attempting the redemption.\",\"owner\":\"The address of the authorized owner.\"}}],\"FleetCommanderUnauthorizedWithdrawal(address,address)\":[{\"params\":{\"caller\":\"The address attempting the withdrawal.\",\"owner\":\"The address of the authorized owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"ArkAdded(address)\":{\"params\":{\"ark\":\"The address of the newly added Ark\"}},\"ArkRemoved(address)\":{\"params\":{\"ark\":\"The address of the removed Ark\"}},\"FeeAddressUpdated(address)\":{\"params\":{\"newAddress\":\"The new fee address\"}},\"FleetCommanderBufferAdjusted(address,uint256)\":{\"params\":{\"keeper\":\"Keeper address\",\"totalMoved\":\"Total amount of funds moved to arks\"}},\"FleetCommanderDepositCapUpdated(uint256)\":{\"params\":{\"newCap\":\"The new deposit cap value\"}},\"FleetCommanderMaxRebalanceOperationsUpdated(uint256)\":{\"params\":{\"newMaxRebalanceOperations\":\"Max allowed rebalance operations\"}},\"FleetCommanderRedeemedFromArks(address,address,uint256)\":{\"params\":{\"owner\":\"The address of the owner who initiated the redemption\",\"receiver\":\"The address of the receiver of the redeemed funds\",\"totalRedeemed\":\"The total amount of funds redeemed\"}},\"FleetCommanderReferral(address,bytes)\":{\"params\":{\"referee\":\"The address of the referee who was referred\",\"referralCode\":\"The referral code of the referrer\"}},\"FleetCommanderStakingRewardsUpdated(address)\":{\"params\":{\"newStakingRewards\":\"The address of the new staking rewards contract\"}},\"FleetCommanderWithdrawnFromArks(address,address,uint256)\":{\"params\":{\"owner\":\"The address of the owner who initiated the withdrawal\",\"receiver\":\"The address of the receiver of the withdrawn funds\",\"totalWithdrawn\":\"The total amount of funds withdrawn\"}},\"FleetCommanderminimumBufferBalanceUpdated(uint256)\":{\"params\":{\"newBalance\":\"New minimum funds buffer balance\"}},\"FundsBufferBalanceUpdated(address,uint256,uint256)\":{\"params\":{\"newBalance\":\"The new buffer balance\",\"prevBalance\":\"The previous buffer balance\",\"user\":\"The address of the user who triggered the update\"}},\"FundsQueueRefilled(address,uint256,uint256)\":{\"params\":{\"keeper\":\"The address of the keeper who initiated the queue refill\",\"newBalance\":\"The new balance after refilling\",\"prevBalance\":\"The previous balance before refilling\"}},\"MinFundsQueueBalanceUpdated(address,uint256)\":{\"params\":{\"keeper\":\"The address of the keeper who updated the minimum balance\",\"newBalance\":\"The new minimum balance\"}},\"QueuedFundsCommitted(address,uint256,uint256)\":{\"params\":{\"keeper\":\"The address of the keeper who committed the funds\",\"newBalance\":\"The new balance after committing funds\",\"prevBalance\":\"The previous balance before committing funds\"}},\"Rebalanced(address,(address,address,uint256,bytes,bytes)[])\":{\"params\":{\"keeper\":\"The address of the keeper who initiated the rebalance\",\"rebalances\":\"An array of RebalanceData structs detailing the rebalance operations\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"addArk(address)\":{\"params\":{\"ark\":\"The address of the new Ark\"}},\"addArks(address[])\":{\"params\":{\"arks\":\"Array of ark addresses\"}},\"adjustBuffer((address,address,uint256,bytes,bytes)[])\":{\"details\":\"RebalanceData struct contains:      - fromArk: The address of the Ark to move assets from (must be buffer Ark for withdrawing from buffer)      - toArk: The address of the Ark to move assets to (must be buffer Ark for depositing to buffer)      - amount: The amount of assets to move      - boardData: Additional optional data for the board operation      - disembarkData: Additional optional data for the disembark operationUnlike rebalance, adjustBuffer operations must involve the buffer ArkAll operations in a single adjustBuffer call must be in the same direction (either all to buffer or all from buffer)type(uint256).max is not allowed as an amount for buffer adjustmentsWhen withdrawing from the buffer, the total amount moved cannot reduce the buffer balance below minFundsBufferBalanceThe number of operations in a single adjustBuffer call is limited to DEFAULT_MAX_REBALANCE_OPERATIONSAdjustBuffer is subject to a cooldown period between callsOnly callable by accounts with the Keeper role\",\"params\":{\"data\":\"Array of RebalanceData structs\"}},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"arks(uint256)\":{\"params\":{\"index\":\"The index of the ark in the arks array\"},\"returns\":{\"_0\":\"The address of the ark at the specified index\"}},\"asset()\":{\"details\":\"Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"convertToAssets(uint256)\":{\"details\":\"Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"convertToShares(uint256)\":{\"details\":\"Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"deposit(uint256,address)\":{\"details\":\"Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"deposit(uint256,address,bytes)\":{\"params\":{\"assets\":\"The amount of assets to be deposited.\",\"receiver\":\"The address of the receiver who will receive the deposited assets.\",\"referralCode\":\"An optional referral code that can be used for tracking or rewards.\"}},\"forceRebalance((address,address,uint256,bytes,bytes)[])\":{\"details\":\"has no cooldown enforced but only callable by privileged role\",\"params\":{\"data\":\"Array of typed rebalance data struct\"}},\"isArkActive(address)\":{\"params\":{\"ark\":\"The address of the Ark\"},\"returns\":{\"_0\":\"bool Returns true if the ark is active, false otherwise.\"}},\"maxBufferRedeem(address)\":{\"params\":{\"owner\":\"The address of the owner of the assets\"},\"returns\":{\"_0\":\"uint256 The maximum amount that can be redeemed.\"}},\"maxBufferWithdraw(address)\":{\"params\":{\"owner\":\"The address of the owner of the assets\"},\"returns\":{\"_0\":\"uint256 The maximum amount that can be withdrawn.\"}},\"maxDeposit(address)\":{\"details\":\"Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver, through a deposit call. - MUST return a limited value if receiver is subject to some deposit limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited. - MUST NOT revert.\"},\"maxMint(address)\":{\"details\":\"Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call. - MUST return a limited value if receiver is subject to some mint limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted. - MUST NOT revert.\"},\"maxRedeem(address)\":{\"details\":\"Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault, through a redeem call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock. - MUST NOT revert.\"},\"maxWithdraw(address)\":{\"details\":\"Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, through a withdraw call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST NOT revert.\"},\"mint(uint256,address)\":{\"details\":\"Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"This function is used to pause the FleetCommander in case of critical issues or emergenciesOnly callable by the guardian or governor\"},\"previewDeposit(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"previewMint(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting.\"},\"previewRedeem(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the   same transaction. - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the   redemption would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming.\"},\"previewWithdraw(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if   called   in the same transaction. - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though   the withdrawal would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"rebalance((address,address,uint256,bytes,bytes)[])\":{\"details\":\"RebalanceData struct contains:      - fromArk: The address of the Ark to move assets from      - toArk: The address of the Ark to move assets to      - amount: The amount of assets to move      - boardData: Additional data for the board operation      - disembarkData: Additional data for the disembark operationUsing type(uint256).max as the amount will move all assets from the fromArk to the toArkRebalance operations cannot involve the buffer Ark directlyThe number of operations in a single rebalance call is limited to DEFAULT_MAX_REBALANCE_OPERATIONSRebalance is subject to a cooldown period between callsOnly callable by accounts with the Keeper role\",\"params\":{\"data\":\"Array of RebalanceData structs\"}},\"redeem(uint256,address,address)\":{\"details\":\"This function first attempts to redeem from the buffer. If the buffer doesn't have enough assets,      it will redeem from the arks. It also handles the case where the maximum possible amount is requested.\",\"params\":{\"owner\":\"The address of the owner of the shares\",\"receiver\":\"The address that will receive the redeemed assets\",\"shares\":\"The number of shares to redeem. If set to type(uint256).max, it will redeem all shares owned by the owner.\"},\"returns\":{\"assets\":\"The amount of assets received in exchange for the redeemed shares\"}},\"redeemFromArks(uint256,address,address)\":{\"params\":{\"owner\":\"The address of the owner of the shares\",\"receiver\":\"The address that will receive the assets\",\"shares\":\"The amount of shares to redeem\"},\"returns\":{\"assets\":\"The amount of assets forcefully withdrawn\"}},\"redeemFromBuffer(uint256,address,address)\":{\"params\":{\"owner\":\"The address of the owner of the shares\",\"receiver\":\"The address that will receive the assets\",\"shares\":\"The amount of shares to redeem\"},\"returns\":{\"assets\":\"The amount of assets redeemed\"}},\"removeArk(address)\":{\"params\":{\"ark\":\"The address of the Ark to remove\"}},\"setArkDepositCap(address,uint256)\":{\"params\":{\"ark\":\"The address of the Ark\",\"newDepositCap\":\"The new deposit cap\"}},\"setArkMaxDepositPercentageOfTVL(address,uint256)\":{\"params\":{\"ark\":\"The address of the Ark\",\"newMaxDepositPercentageOfTVL\":\"The new max deposit percentage of TVL\"}},\"setArkMaxRebalanceInflow(address,uint256)\":{\"details\":\"Only callable by the governor\",\"params\":{\"ark\":\"The address of the Ark\",\"newMaxRebalanceInflow\":\"The new maxRebalanceInflow value\"}},\"setArkMaxRebalanceOutflow(address,uint256)\":{\"details\":\"Only callable by the governor\",\"params\":{\"ark\":\"The address of the Ark\",\"newMaxRebalanceOutflow\":\"The new maxRebalanceOutflow value\"}},\"setFleetDepositCap(uint256)\":{\"params\":{\"newDepositCap\":\"The new deposit cap\"}},\"setMaxRebalanceOperations(uint256)\":{\"details\":\"Sets the minimum number of allowe rebalance operations.\",\"params\":{\"newMaxRebalanceOperations\":\"The new maximum allowed rebalance operations.\"}},\"setMinimumBufferBalance(uint256)\":{\"details\":\"Sets the minimum buffer balance for the fleet commander.\",\"params\":{\"newMinimumBalance\":\"The new minimum buffer balance to be set.\"}},\"setMinimumPauseTime(uint256)\":{\"details\":\"Only callable by the governor\",\"params\":{\"newMinimumPauseTime\":\"The new minimum pause time in seconds\"}},\"setStakingRewardsManager(address)\":{\"params\":{\"newStakingRewardsManager\":\"The address  of the new staking rewards manager contract\"}},\"setTipRate(uint256)\":{\"details\":\"Only callable by the governorThe tip rate is set as a Percentage. Percentages use 18 decimals of precision      For example, for a 5% rate, you'd pass 5 * 1e18 (5 000 000 000 000 000 000)\",\"params\":{\"newTipRate\":\"The new tip rate as a Percentage\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"tip()\":{\"returns\":{\"_0\":\"uint256 The amount of tips accrued\"}},\"totalAssets()\":{\"details\":\"If cached data is available, it will be used. Otherwise, it will be calculated on demand (and cached)\",\"returns\":{\"_0\":\"uint256 The total amount of assets that can be withdrawn.\"}},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"unpause()\":{\"details\":\"This function is used to resume normal operations after a pauseOnly callable by the guardian or governor\"},\"updateRebalanceCooldown(uint256)\":{\"params\":{\"newCooldown\":\"The new cooldown period in seconds\"}},\"withdraw(uint256,address,address)\":{\"details\":\"This function first attempts to withdraw from the buffer. If the buffer doesn't have enough assets,      it will withdraw from the arks. It also handles the case where the maximum possible amount is requested.\",\"params\":{\"assets\":\"The amount of assets to withdraw. If set to type(uint256).max, it will withdraw the maximum possible amount.\",\"owner\":\"The address of the owner of the shares\",\"receiver\":\"The address that will receive the withdrawn assets\"},\"returns\":{\"shares\":\"The number of shares burned in exchange for the withdrawn assets\"}},\"withdrawFromArks(uint256,address,address)\":{\"params\":{\"assets\":\"The amount of assets to forcefully withdraw\",\"owner\":\"The address of the owner of the assets\",\"receiver\":\"The address that will receive the withdrawn assets\"},\"returns\":{\"shares\":\"The amount of shares redeemed\"}},\"withdrawFromBuffer(uint256,address,address)\":{\"params\":{\"assets\":\"The amount of assets to withdraw\",\"owner\":\"The address of the owner of the assets\",\"receiver\":\"The address that will receive the withdrawn assets\"},\"returns\":{\"shares\":\"The amount of shares redeemed\"}},\"withdrawableTotalAssets()\":{\"details\":\"If cached data is available, it will be used. Otherwise, it will be calculated on demand (and cached)\",\"returns\":{\"_0\":\"uint256 The total amount of assets that can be withdrawn.\"}}},\"title\":\"IFleetCommander Interface\",\"version\":1},\"userdoc\":{\"errors\":{\"FleetCommanderArkAlreadyExists(address)\":[{\"notice\":\"Thrown when trying to add an Ark that already exists in the system\"}],\"FleetCommanderArkAlreadyHasCommander()\":[{\"notice\":\"Thrown when trying to add a commander to an Ark that already has a commander\"}],\"FleetCommanderArkAssetsNotZero(address)\":[{\"notice\":\"Thrown when attempting to remove an Ark that still holds assets\"}],\"FleetCommanderArkDepositCapGreaterThanZero(address)\":[{\"notice\":\"Thrown when trying to remove an Ark that still has a non-zero deposit cap\"}],\"FleetCommanderArkDepositCapZero(address)\":[{\"notice\":\"Thrown when an Ark's deposit cap is zero.\"}],\"FleetCommanderArkNotActive(address)\":[{\"notice\":\"Thrown when an operation is attempted on an inactive Ark.\"}],\"FleetCommanderArkNotFound(address)\":[{\"notice\":\"Thrown when an operation is attempted on a non-existent Ark\"}],\"FleetCommanderCantUseMaxUintMovingFromBuffer()\":[{\"notice\":\"Thrown when attempting to use the maximum uint value for buffer adjustment from buffer.\"}],\"FleetCommanderCantUseRebalanceOnBufferArk()\":[{\"notice\":\"Thrown when attempting to use rebalance on a buffer Ark.\"}],\"FleetCommanderEffectiveDepositCapExceeded(address,uint256,uint256)\":[{\"notice\":\"Thrown when attempting to rebalance to an invalid Ark.\"}],\"FleetCommanderExceedsMaxInflow(address,uint256,uint256)\":[{\"notice\":\"Thrown when a rebalance operation exceeds the maximum inflow for an Ark.\"}],\"FleetCommanderExceedsMaxOutflow(address,uint256,uint256)\":[{\"notice\":\"Thrown when a rebalance operation exceeds the maximum outflow for an Ark.\"}],\"FleetCommanderInsufficientBuffer()\":[{\"notice\":\"Thrown when there is insufficient buffer for an operation.\"}],\"FleetCommanderInvalidArkAddress()\":[{\"notice\":\"Thrown when an invalid Ark address is provided (e.g., zero address)\"}],\"FleetCommanderInvalidBufferAdjustment()\":[{\"notice\":\"Thrown when an invalid buffer adjustment is attempted.\"}],\"FleetCommanderInvalidSourceArk(address)\":[{\"notice\":\"Thrown when an invalid source Ark is specified for an operation.\"}],\"FleetCommanderInvalidStakingRewardsManager()\":[{\"notice\":\"Thrown when trying to set a StakingRewardsManager to the zero address\"}],\"FleetCommanderMovedMoreThanAvailable()\":[{\"notice\":\"Thrown when an operation attempts to move more funds than available.\"}],\"FleetCommanderNoExcessFunds()\":[{\"notice\":\"Thrown when there are no excess funds to perform an operation.\"}],\"FleetCommanderNoFundsMoved()\":[{\"notice\":\"Thrown when no funds were moved in an operation that expected fund movement.\"}],\"FleetCommanderRebalanceAmountZero(address)\":[{\"notice\":\"Thrown when a rebalance amount for an Ark is zero.\"}],\"FleetCommanderRebalanceNoOperations()\":[{\"notice\":\"Thrown when a rebalance operation is attempted with no actual operations.\"}],\"FleetCommanderRebalanceTooManyOperations(uint256)\":[{\"notice\":\"Thrown when a rebalance operation exceeds the maximum allowed number of operations.\"}],\"FleetCommanderStakingRewardsManagerNotSet()\":[{\"notice\":\"Thrown when the staking rewards manager is not set.\"}],\"FleetCommanderTransfersDisabled()\":[{\"notice\":\"Thrown when transfers are disabled.\"}],\"FleetCommanderUnauthorizedRedemption(address,address)\":[{\"notice\":\"Thrown when an unauthorized redemption is attempted.\"}],\"FleetCommanderUnauthorizedWithdrawal(address,address)\":[{\"notice\":\"Thrown when an unauthorized withdrawal is attempted.\"}],\"WithdrawalAmountExceedsMaxBufferLimit()\":[{\"notice\":\"Thrown when a withdrawal amount exceeds the maximum buffer limit.\"}]},\"events\":{\"ArkAdded(address)\":{\"notice\":\"Emitted when a new Ark is added\"},\"ArkRemoved(address)\":{\"notice\":\"Emitted when an Ark is removed\"},\"FeeAddressUpdated(address)\":{\"notice\":\"Emitted when the fee address is updated\"},\"FleetCommanderDepositCapUpdated(uint256)\":{\"notice\":\"Emitted when the deposit cap is updated\"},\"FleetCommanderMaxRebalanceOperationsUpdated(uint256)\":{\"notice\":\"Emitted when new max allowed rebalance operations is set\"},\"FleetCommanderRedeemedFromArks(address,address,uint256)\":{\"notice\":\"Emitted when funds are redeemed from Arks\"},\"FleetCommanderReferral(address,bytes)\":{\"notice\":\"Emitted when referee deposits into the FleetCommander\"},\"FleetCommanderStakingRewardsUpdated(address)\":{\"notice\":\"Emitted when the staking rewards contract address is updated\"},\"FleetCommanderWithdrawnFromArks(address,address,uint256)\":{\"notice\":\"Emitted when funds are withdrawn from Arks\"},\"FleetCommanderminimumBufferBalanceUpdated(uint256)\":{\"notice\":\"Emitted when new minimum funds buffer balance is set\"},\"FundsBufferBalanceUpdated(address,uint256,uint256)\":{\"notice\":\"Emitted when the funds buffer balance is updated\"},\"FundsQueueRefilled(address,uint256,uint256)\":{\"notice\":\"Emitted when the funds queue is refilled\"},\"MinFundsQueueBalanceUpdated(address,uint256)\":{\"notice\":\"Emitted when the minimum balance of the funds queue is updated\"},\"QueuedFundsCommitted(address,uint256,uint256)\":{\"notice\":\"Emitted when queued funds are committed\"},\"Rebalanced(address,(address,address,uint256,bytes,bytes)[])\":{\"notice\":\"Emitted when a rebalance operation is completed\"}},\"kind\":\"user\",\"methods\":{\"addArk(address)\":{\"notice\":\"Adds a new Ark\"},\"addArks(address[])\":{\"notice\":\"Adds multiple Arks in a batch\"},\"adjustBuffer((address,address,uint256,bytes,bytes)[])\":{\"notice\":\"Adjusts the buffer of funds by moving assets between the buffer Ark and other Arks\"},\"arks(uint256)\":{\"notice\":\"Retrieves the ark address at the specified index\"},\"bufferArk()\":{\"notice\":\"Retrieves the buffer ark address\"},\"deposit(uint256,address,bytes)\":{\"notice\":\"Deposits a specified amount of assets into the contract for a given receiver.\"},\"forceRebalance((address,address,uint256,bytes,bytes)[])\":{\"notice\":\"Forces a rebalance operation\"},\"getArks()\":{\"notice\":\"Retrieves the arks currently linked to fleet\"},\"getConfig()\":{\"notice\":\"Retrieves the current fleet config\"},\"isArkActive(address)\":{\"notice\":\"Checks if the ark is part of the fleet\"},\"maxBufferRedeem(address)\":{\"notice\":\"Returns the maximum amount of the underlying asset that can be redeemed from the owner balance in the Vault, directly from Buffer.\"},\"maxBufferWithdraw(address)\":{\"notice\":\"Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, directly from Buffer.\"},\"pause()\":{\"notice\":\"Pauses the FleetCommander\"},\"rebalance((address,address,uint256,bytes,bytes)[])\":{\"notice\":\"Rebalances the assets across Arks\"},\"redeem(uint256,address,address)\":{\"notice\":\"Redeems a specified amount of shares from the FleetCommander\"},\"redeemFromArks(uint256,address,address)\":{\"notice\":\"Redeems shares for assets from the FleetCommander\"},\"redeemFromBuffer(uint256,address,address)\":{\"notice\":\"Redeems shares for assets directly from the Buffer\"},\"removeArk(address)\":{\"notice\":\"Removes an existing Ark\"},\"setArkDepositCap(address,uint256)\":{\"notice\":\"Sets a new deposit cap for an Ark\"},\"setArkMaxDepositPercentageOfTVL(address,uint256)\":{\"notice\":\"Sets the max deposit percentage of TVL for an Ark\"},\"setArkMaxRebalanceInflow(address,uint256)\":{\"notice\":\"Sets the maxRebalanceInflow for an Ark\"},\"setArkMaxRebalanceOutflow(address,uint256)\":{\"notice\":\"Sets the maxRebalanceOutflow for an Ark\"},\"setFleetDepositCap(uint256)\":{\"notice\":\"Sets a new deposit cap for Fleet\"},\"setMinimumPauseTime(uint256)\":{\"notice\":\"Sets a new minimum pause time for the FleetCommander\"},\"setStakingRewardsManager(address)\":{\"notice\":\"Sets the staking rewards manager contract address\"},\"setTipRate(uint256)\":{\"notice\":\"Sets a new tip rate for the FleetCommander\"},\"tip()\":{\"notice\":\"Accrues and distributes tips\"},\"totalAssets()\":{\"notice\":\"Returns the total assets that are managed the FleetCommander.\"},\"unpause()\":{\"notice\":\"Unpauses the FleetCommander\"},\"updateRebalanceCooldown(uint256)\":{\"notice\":\"Updates the rebalance cooldown period\"},\"withdraw(uint256,address,address)\":{\"notice\":\"Withdraws a specified amount of assets from the FleetCommander\"},\"withdrawFromArks(uint256,address,address)\":{\"notice\":\"Forces a withdrawal of assets from the FleetCommander\"},\"withdrawFromBuffer(uint256,address,address)\":{\"notice\":\"Forces a withdrawal of assets directly from the Buffer\"},\"withdrawableTotalAssets()\":{\"notice\":\"Returns the total assets that are currently withdrawable from the FleetCommander.\"}},\"notice\":\"Interface for the FleetCommander contract, which manages asset allocation across multiple Arks\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IFleetCommander.sol\":\"IFleetCommander\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@layerzerolabs/=node_modules/@summerfi/dependencies/node_modules/@layerzerolabs/\",\":@openzeppelin-next/=node_modules/@summerfi/dependencies/lib/openzeppelin-next/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@summerfi/dependencies/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/\",\":@pendle/core-v2/contracts/=node_modules/@summerfi/dependencies/lib/pendle-core-v2-public/contracts/\",\":@prb/math/=node_modules/@summerfi/dependencies/lib/prb-math/\",\":@summerfi/access-contracts/=node_modules/@summerfi/access-contracts/src/\",\":@summerfi/constants/=node_modules/@summerfi/constants/src/\",\":@summerfi/dependencies/=node_modules/@summerfi/dependencies/lib/\",\":@summerfi/dutch-auction/=node_modules/@summerfi/dutch-auction/src/\",\":@summerfi/earn-gov-contracts/=node_modules/@summerfi/earn-gov-contracts/src/\",\":@summerfi/math-utils/contracts/=node_modules/@summerfi/math-utils/contracts/\",\":@summerfi/percentage-solidity/contracts/=node_modules/@summerfi/percentage-solidity/contracts/\",\":@summerfi/protocol-interfaces/=node_modules/@summerfi/protocol-interfaces/src/\",\":@summerfi/rewards-contracts/=node_modules/@summerfi/rewards-contracts/src/\",\":@summerfi/voting-decay/=node_modules/@summerfi/voting-decay/src/\",\":ds-test/=lib/metamorpho/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/metamorpho/lib/erc4626-tests/\",\":forge-std/=node_modules/@summerfi/dependencies/lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":metamorpho/=node_modules/@summerfi/dependencies/lib/metamorpho/src/\",\":morpho-blue-irm/=lib/metamorpho/lib/morpho-blue-irm/src/\",\":morpho-blue/=node_modules/@summerfi/dependencies/lib/metamorpho/lib/morpho-blue/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":pendle-core-v2-public/=lib/pendle-core-v2-public/contracts/\",\":prb-math/=lib/prb-math/src/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\",\":solmate/=lib/metamorpho/lib/morpho-blue-irm/lib/solmate/src/\"]},\"sources\":{\"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73\",\"dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi\"]},\"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x6423475004ac1c4db6e9f16908cbfb82e630f7868051869c6f89c7452facbc06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd31766a3235519db9207c02652e124746eef3e451271e82830090f9864ff4cf\",\"dweb:/ipfs/QmNjjADM3vFELnFtiZJYuRRXEjQb8KP7cq6b8YqKww6Sdb\"]},\"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc61b3530214f6729db70cc02ffacf6218e601a5e351dd25e369a03c6ca201cfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48b897a0323b8d04464848832b364ecfd6c002fd15c53a86304ca1eec1475d12\",\"dweb:/ipfs/QmV1S2GmZgU9bDEfdXFyCe1HhDy4nND3z4Jyy4iBvh5wu2\"]},\"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC4626.sol\":{\"keccak256\":\"0xef603264ceb5579bdad2704dbab78b52da014abe1c9326497a7e3c7d1aa49e12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1899de9ac58ac69d663e8c2976cb1213d31734dda484f2053bf69bcf53a3e75b\",\"dweb:/ipfs/QmQgkETvGiy8bv9SB42fiKdSSfTmtHMxC3ueeAuAHwhqY8\"]},\"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x18436638da96539b6a9f971f8ce332c6fcad32d15c988af689b174f753d9936b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0351b5b167c9f0f6eb670bc6db5e9579aadb9a42edc62256c182695c3e9bf47e\",\"dweb:/ipfs/QmSQPNXU4NYhYojvyqHRzQx2duRx5njv6AHssoJMQb8Tq1\"]},\"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xe484b91c24d898c84aebae9c06263523a27582e6c97909d9ea71a4e15dc44fa2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ca1ffd7dbe0cf24fae85132e0b33bb26f6ff7935effd0d73f1f67e13bff4032\",\"dweb:/ipfs/QmetqL3cbjn5pR4vVtnkWZBYH5LPvEsPoVrd6bDwGe2ZfJ\"]},\"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/utils/Errors.sol\":{\"keccak256\":\"0x3f6500df17ff64f838b357a58be5a2d8e8cc937db0cf10504c7049f13608ab66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a0285cedb657d751d809a543e7a3b8a3d541701046808b9d6b0fa2572bac256\",\"dweb:/ipfs/QmTaxGdRkw56LhPRc9F9SLTufmQ37XMgsihdESHREWpwRd\"]},\"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0x156d11cd8394cb9245b0bb9d7a27f5b3e7193e3cec7b91a66474ae01af8d818c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f171e65be237fe4aaa2f7a74862c10a06535b8c04baa42e848a63c6fc96bcd4\",\"dweb:/ipfs/QmUdz8WHcrjqYmbRaz5PFN2N2thfvQjcqTorZUfcmWTfat\"]},\"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd2fb25b789ccaf6bf50b147ecff4c9d62d05d3f5c5d562fdf568f6926a2a280c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://521e2df6ed2080c9ae2f442b27a827551ab96ff2e5f920ad6dc978c355b4b966\",\"dweb:/ipfs/Qme1Z6dU7ZDQMfKiHwpLejAyFGsP9HpijvX9uzxivEGjga\"]},\"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x8cdcfbd2484c2e7db797f57ff8731fe11d7ab0092c7a1112f8ad6047ad6d4481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://356742c148ca77b9d953059072c32cf9d0d98ae782129fe442c73a6736bfd7cb\",\"dweb:/ipfs/QmZN5jdoBbCihsv1RK8n6pf6cC89pi77KGAasn7ZvyuNTn\"]},\"node_modules/@summerfi/percentage-solidity/contracts/Percentage.sol\":{\"keccak256\":\"0x7c3cd1d63bbf27068d2670b2f56802f74cec5af98b0d5bf8fb380ec03ce0d74f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21c797aa6bb45e3b06b368cc520c682dea0d60be9f7e99011cec5b8130946760\",\"dweb:/ipfs/QmQN8LDhwMa4EC8VRZKae6eBH7Q9kkhKmfNyszGGQUiaXa\"]},\"node_modules/@summerfi/rewards-contracts/src/interfaces/IStakingRewardsManagerBase.sol\":{\"keccak256\":\"0x36224da4706338c92df1839053e622c8a72c952a4673dd199026a93d26bb8f6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34632cc008f4a259ec7b42d50fbd60ad252f77833ed53cff3a09d8b01a57a5c\",\"dweb:/ipfs/QmVXhHhYQQNKLND7TbG12oAJ5s5sTXooQGvfPFmLqEskTJ\"]},\"node_modules/@summerfi/rewards-contracts/src/interfaces/IStakingRewardsManagerBaseErrors.sol\":{\"keccak256\":\"0x5b768b165b77b2a8e2e9466af78113762d46b1bf37412f5dab578ef74c2c9be3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3cfe0237a190b5de87c911248fa54d2e70dc3ba1f263c4fccd3797d3222c467\",\"dweb:/ipfs/QmT9RbCZmRZKttw6sbBNvDvUcXBHvmJoWuA9vudbyJnycR\"]},\"src/errors/IArkConfigProviderErrors.sol\":{\"keccak256\":\"0x3c7d0e913153585230567ea68488375b3f7451c542314c2664e4d18c3d70de1f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8960897ac51d804b8d4df199c2d81a612d1c22d65d4a081ff9549568ed87a800\",\"dweb:/ipfs/QmQWGLwUBDWzv2Z8t9kvrK913wvawVmsoPHwEgLZMQcdQh\"]},\"src/errors/IArkErrors.sol\":{\"keccak256\":\"0xe7d3a5380b1bde7bb732fb72ddfc27e12b8bd0ca7a48cb2311805a4a6be8200a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3aa8b1c70bc54a7235c8a31179b970613db0459c6b4f551931d211f26a3a0b68\",\"dweb:/ipfs/QmawQCdsJhq3pmsAoUabunh6oFjgZ7T36cKuAbHuJ1rBbZ\"]},\"src/errors/IFleetCommanderConfigProviderErrors.sol\":{\"keccak256\":\"0x0a13fc1ed8e0b14730878c5f5217fefcbb44557e6bbf37b5bf10a635f2942dca\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b59bdb785326c6713144f9ebedcd15139a6c64fa5486c7a590536ec8c69de75d\",\"dweb:/ipfs/QmUwiRTAe1sAeYdowdJemyR7K1UvCjzeyJckw9uxXEHS9s\"]},\"src/errors/IFleetCommanderErrors.sol\":{\"keccak256\":\"0x486d9fff95067ca0df660a67c9c01959837f0894bb474053b681804611f533a8\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4bcec565b9b16a3f633ab8fbe1cdd204c2258b763dd8637d60a401c36f8bb8c2\",\"dweb:/ipfs/QmYiD3PzfLSVh9uooYT1EECGRj5eKTiUsp7mJxTbvF1Zh9\"]},\"src/events/IArkConfigProviderEvents.sol\":{\"keccak256\":\"0x1e0fcddf183afaef60f18a1f8d54c09d5c7ee8e3ea6092b708dc93fc8fccbf51\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cd6e1ccfa719d6b04335338924afe4daadc61c473bfc050c5f31e2a1633d68f3\",\"dweb:/ipfs/QmQBcZ5hGtiPbU8LGB389Mc1swxriXBiVpKo8j51DR8N2Y\"]},\"src/events/IArkEvents.sol\":{\"keccak256\":\"0x3302e7c0412fd45f1d29badb27e1a9d670935cd720e238e60cf51dc25346dbfe\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c6679b529e5c6f5c2bf569a1912404bbcaa56ba68eae2428fb849564dceb0596\",\"dweb:/ipfs/Qmd7uALeQWVMSXpS6fL8karTMCdT7NDbooLQ8zkKP3BCtZ\"]},\"src/events/IFleetCommanderConfigProviderEvents.sol\":{\"keccak256\":\"0x4e30803b0b3cb4f43b778459dd6fa746930e18a25ea6e5847e004757250263e9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c68312ee407080387596bf5a2a49045a69150e3af790e3e6bf28bde701ee8d82\",\"dweb:/ipfs/QmXrPmkLjmJYNs8h45AVUXHd3csoptHCgmYDPvztVy1Fb4\"]},\"src/events/IFleetCommanderEvents.sol\":{\"keccak256\":\"0xb7be7b619d39bf11d368ecd4dfd81cb5df0cd75e1bd67825a6c67d19112cfc21\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5b830bc6348fbbbcac9d01a9c3d686f493bad1e5347a4e11d08e7fb076fcd2d3\",\"dweb:/ipfs/QmP5xJxU27iPeY2AnmU4xmeohCDVzvwJQ7MLrpe3js6kqD\"]},\"src/interfaces/IArk.sol\":{\"keccak256\":\"0x849c251bae000ae6ba10c379cdd5c6434d764fc2a0d5b55f64a95f91bb1579fb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c5e929ba3d5df642df36f0ab4ef68698824894daf949935f5092dac52771ed5e\",\"dweb:/ipfs/QmPAThN9cuwYfJ3suVi6Txrtn8K6oX4wGk4uWYK8JaBLZN\"]},\"src/interfaces/IArkAccessManaged.sol\":{\"keccak256\":\"0x6db898309ce0226b3eeff397b2e9c8e20600753af923aeeaa4de447956d020ae\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://79e4a594bc2dbea46b564e199506fd8e8fe25d964f99431b02efc1ca67ba6365\",\"dweb:/ipfs/QmRiJSuDMXbzNJNfatxELm3nkYpJtodTYfhK4BaVG4YyhH\"]},\"src/interfaces/IArkConfigProvider.sol\":{\"keccak256\":\"0xf1b5d1c5a90a89ba962b748f3e9cd3464f7db944fb32836716ebadce69eb373b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c4b76d83d45ecd3c3439d6e3df8622cb09b52c3039b54fdf766e6314a2b8f140\",\"dweb:/ipfs/QmRdy36zHnwwgRz8UCQLYT3pwZBTaRivHFPA5tvhZSbCdV\"]},\"src/interfaces/IFleetCommander.sol\":{\"keccak256\":\"0x32d706c7482b606e471762db6bf62b2d087410bd1e67704dbeed777d1c9ff322\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://43f7c36eb9db655757142ed7e81b751b8f1df31c99acc34b1f0d5fc1eed62f80\",\"dweb:/ipfs/QmXpf1p8Tpoci3BcwxYmU9HzVgwxhjGm24NgEsUxhpYXb1\"]},\"src/interfaces/IFleetCommanderConfigProvider.sol\":{\"keccak256\":\"0x5bff2b0462a10302a6a45d17bf2a05988e361c5f69dc0eba4ae1a76ebe1b596c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://25401e3cb17f5800ce82125318ff4d3ce2ae9fcd8966de9b6786f742cdb9145d\",\"dweb:/ipfs/Qmai8EcWTRaosM2dHFDRE41McM8CzUzEVGCC3GMpEQn32k\"]},\"src/interfaces/IFleetCommanderRewardsManager.sol\":{\"keccak256\":\"0xe603c32de8fc47de6f70b0168f28afdd2b9e4e442ed55682935336a92eaf8c51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://907d5149b75bfda453e4d3cb3d3f18b77350bc1519fe10f91533e0cb8f0a69c3\",\"dweb:/ipfs/QmVdjh8u7gyydoKhShQGqwmp2GyPwCxDFkyGxwYBFsNy7h\"]},\"src/types/ArkTypes.sol\":{\"keccak256\":\"0xed653b2dbabaa48ec05582a14f6a019608121947e9f4e5778261cbd00350b427\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://093ca265a2bfa3a59d4a6dfc0bd6a34f4a62310e3545d84b945c37592ae9aef9\",\"dweb:/ipfs/QmTBvskp4ZM7MrvfLVdRhbk1miKmQmwyD1tjBHr1TMgViJ\"]},\"src/types/FleetCommanderTypes.sol\":{\"keccak256\":\"0x5ec0eff8b2767c50f745cb0aeabf924c9daa6fcff9358ecd13b3621e6bcec460\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://af33c77a06725d8b77627ada03532ecea0ec859438ea7e2eb34cfddf18a04154\",\"dweb:/ipfs/QmSnxn9cYam6z65p5NBF7H5mTtJ33d9eVBTSKVN4g3yPk3\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"ark","type":"address"}],"type":"error","name":"FleetCommanderArkAlreadyExists"},{"inputs":[],"type":"error","name":"FleetCommanderArkAlreadyHasCommander"},{"inputs":[{"internalType":"address","name":"ark","type":"address"}],"type":"error","name":"FleetCommanderArkAssetsNotZero"},{"inputs":[{"internalType":"address","name":"ark","type":"address"}],"type":"error","name":"FleetCommanderArkDepositCapGreaterThanZero"},{"inputs":[{"internalType":"address","name":"ark","type":"address"}],"type":"error","name":"FleetCommanderArkDepositCapZero"},{"inputs":[{"internalType":"address","name":"ark","type":"address"}],"type":"error","name":"FleetCommanderArkNotActive"},{"inputs":[{"internalType":"address","name":"ark","type":"address"}],"type":"error","name":"FleetCommanderArkNotFound"},{"inputs":[],"type":"error","name":"FleetCommanderCantUseMaxUintMovingFromBuffer"},{"inputs":[],"type":"error","name":"FleetCommanderCantUseRebalanceOnBufferArk"},{"inputs":[{"internalType":"address","name":"ark","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"effectiveDepositCap","type":"uint256"}],"type":"error","name":"FleetCommanderEffectiveDepositCapExceeded"},{"inputs":[{"internalType":"address","name":"fromArk","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"maxRebalanceInflow","type":"uint256"}],"type":"error","name":"FleetCommanderExceedsMaxInflow"},{"inputs":[{"internalType":"address","name":"fromArk","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"maxRebalanceOutflow","type":"uint256"}],"type":"error","name":"FleetCommanderExceedsMaxOutflow"},{"inputs":[],"type":"error","name":"FleetCommanderInsufficientBuffer"},{"inputs":[],"type":"error","name":"FleetCommanderInvalidArkAddress"},{"inputs":[],"type":"error","name":"FleetCommanderInvalidBufferAdjustment"},{"inputs":[{"internalType":"address","name":"ark","type":"address"}],"type":"error","name":"FleetCommanderInvalidSourceArk"},{"inputs":[],"type":"error","name":"FleetCommanderInvalidStakingRewardsManager"},{"inputs":[],"type":"error","name":"FleetCommanderMovedMoreThanAvailable"},{"inputs":[],"type":"error","name":"FleetCommanderNoExcessFunds"},{"inputs":[],"type":"error","name":"FleetCommanderNoFundsMoved"},{"inputs":[{"internalType":"address","name":"ark","type":"address"}],"type":"error","name":"FleetCommanderRebalanceAmountZero"},{"inputs":[],"type":"error","name":"FleetCommanderRebalanceNoOperations"},{"inputs":[{"internalType":"uint256","name":"operationsCount","type":"uint256"}],"type":"error","name":"FleetCommanderRebalanceTooManyOperations"},{"inputs":[],"type":"error","name":"FleetCommanderStakingRewardsManagerNotSet"},{"inputs":[],"type":"error","name":"FleetCommanderTransfersDisabled"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"type":"error","name":"FleetCommanderUnauthorizedRedemption"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"type":"error","name":"FleetCommanderUnauthorizedWithdrawal"},{"inputs":[],"type":"error","name":"WithdrawalAmountExceedsMaxBufferLimit"},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"spender","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"Approval","anonymous":false},{"inputs":[{"internalType":"address","name":"ark","type":"address","indexed":true}],"type":"event","name":"ArkAdded","anonymous":false},{"inputs":[{"internalType":"address","name":"ark","type":"address","indexed":true}],"type":"event","name":"ArkRemoved","anonymous":false},{"inputs":[{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"uint256","name":"assets","type":"uint256","indexed":false},{"internalType":"uint256","name":"shares","type":"uint256","indexed":false}],"type":"event","name":"Deposit","anonymous":false},{"inputs":[{"internalType":"address","name":"newAddress","type":"address","indexed":false}],"type":"event","name":"FeeAddressUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"keeper","type":"address","indexed":true},{"internalType":"uint256","name":"totalMoved","type":"uint256","indexed":false}],"type":"event","name":"FleetCommanderBufferAdjusted","anonymous":false},{"inputs":[{"internalType":"uint256","name":"newCap","type":"uint256","indexed":false}],"type":"event","name":"FleetCommanderDepositCapUpdated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"newMaxRebalanceOperations","type":"uint256","indexed":false}],"type":"event","name":"FleetCommanderMaxRebalanceOperationsUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"receiver","type":"address","indexed":false},{"internalType":"uint256","name":"totalRedeemed","type":"uint256","indexed":false}],"type":"event","name":"FleetCommanderRedeemedFromArks","anonymous":false},{"inputs":[{"internalType":"address","name":"referee","type":"address","indexed":true},{"internalType":"bytes","name":"referralCode","type":"bytes","indexed":true}],"type":"event","name":"FleetCommanderReferral","anonymous":false},{"inputs":[{"internalType":"address","name":"newStakingRewards","type":"address","indexed":false}],"type":"event","name":"FleetCommanderStakingRewardsUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"receiver","type":"address","indexed":false},{"internalType":"uint256","name":"totalWithdrawn","type":"uint256","indexed":false}],"type":"event","name":"FleetCommanderWithdrawnFromArks","anonymous":false},{"inputs":[{"internalType":"uint256","name":"newBalance","type":"uint256","indexed":false}],"type":"event","name":"FleetCommanderminimumBufferBalanceUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"uint256","name":"prevBalance","type":"uint256","indexed":false},{"internalType":"uint256","name":"newBalance","type":"uint256","indexed":false}],"type":"event","name":"FundsBufferBalanceUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"keeper","type":"address","indexed":true},{"internalType":"uint256","name":"prevBalance","type":"uint256","indexed":false},{"internalType":"uint256","name":"newBalance","type":"uint256","indexed":false}],"type":"event","name":"FundsQueueRefilled","anonymous":false},{"inputs":[{"internalType":"address","name":"keeper","type":"address","indexed":true},{"internalType":"uint256","name":"newBalance","type":"uint256","indexed":false}],"type":"event","name":"MinFundsQueueBalanceUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"keeper","type":"address","indexed":true},{"internalType":"uint256","name":"prevBalance","type":"uint256","indexed":false},{"internalType":"uint256","name":"newBalance","type":"uint256","indexed":false}],"type":"event","name":"QueuedFundsCommitted","anonymous":false},{"inputs":[{"internalType":"address","name":"keeper","type":"address","indexed":true},{"internalType":"struct RebalanceData[]","name":"rebalances","type":"tuple[]","components":[{"internalType":"address","name":"fromArk","type":"address"},{"internalType":"address","name":"toArk","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"boardData","type":"bytes"},{"internalType":"bytes","name":"disembarkData","type":"bytes"}],"indexed":false}],"type":"event","name":"Rebalanced","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"Transfer","anonymous":false},{"inputs":[{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"address","name":"receiver","type":"address","indexed":true},{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"uint256","name":"assets","type":"uint256","indexed":false},{"internalType":"uint256","name":"shares","type":"uint256","indexed":false}],"type":"event","name":"Withdraw","anonymous":false},{"inputs":[{"internalType":"address","name":"ark","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"addArk"},{"inputs":[{"internalType":"address[]","name":"arks","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"addArks"},{"inputs":[{"internalType":"struct RebalanceData[]","name":"data","type":"tuple[]","components":[{"internalType":"address","name":"fromArk","type":"address"},{"internalType":"address","name":"toArk","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"boardData","type":"bytes"},{"internalType":"bytes","name":"disembarkData","type":"bytes"}]}],"stateMutability":"nonpayable","type":"function","name":"adjustBuffer"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"stateMutability":"view","type":"function","name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"arks","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"asset","outputs":[{"internalType":"address","name":"assetTokenAddress","type":"address"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"bufferArk","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function","name":"convertToAssets","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"view","type":"function","name":"convertToShares","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"deposit","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"bytes","name":"referralCode","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"deposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"struct RebalanceData[]","name":"data","type":"tuple[]","components":[{"internalType":"address","name":"fromArk","type":"address"},{"internalType":"address","name":"toArk","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"boardData","type":"bytes"},{"internalType":"bytes","name":"disembarkData","type":"bytes"}]}],"stateMutability":"nonpayable","type":"function","name":"forceRebalance"},{"inputs":[],"stateMutability":"view","type":"function","name":"getArks","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getConfig","outputs":[{"internalType":"struct FleetConfig","name":"","type":"tuple","components":[{"internalType":"contract IArk","name":"bufferArk","type":"address"},{"internalType":"uint256","name":"minimumBufferBalance","type":"uint256"},{"internalType":"uint256","name":"depositCap","type":"uint256"},{"internalType":"uint256","name":"maxRebalanceOperations","type":"uint256"},{"internalType":"address","name":"stakingRewardsManager","type":"address"}]}]},{"inputs":[{"internalType":"address","name":"ark","type":"address"}],"stateMutability":"view","type":"function","name":"isArkActive","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function","name":"maxBufferRedeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function","name":"maxBufferWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"stateMutability":"view","type":"function","name":"maxDeposit","outputs":[{"internalType":"uint256","name":"maxAssets","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"stateMutability":"view","type":"function","name":"maxMint","outputs":[{"internalType":"uint256","name":"maxShares","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function","name":"maxRedeem","outputs":[{"internalType":"uint256","name":"maxShares","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function","name":"maxWithdraw","outputs":[{"internalType":"uint256","name":"maxAssets","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"mint","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"name","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pause"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"view","type":"function","name":"previewDeposit","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function","name":"previewMint","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function","name":"previewRedeem","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"view","type":"function","name":"previewWithdraw","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}]},{"inputs":[{"internalType":"struct RebalanceData[]","name":"data","type":"tuple[]","components":[{"internalType":"address","name":"fromArk","type":"address"},{"internalType":"address","name":"toArk","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"boardData","type":"bytes"},{"internalType":"bytes","name":"disembarkData","type":"bytes"}]}],"stateMutability":"nonpayable","type":"function","name":"rebalance"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"redeem","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"redeemFromArks","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"redeemFromBuffer","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"ark","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"removeArk"},{"inputs":[{"internalType":"address","name":"ark","type":"address"},{"internalType":"uint256","name":"newDepositCap","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setArkDepositCap"},{"inputs":[{"internalType":"address","name":"ark","type":"address"},{"internalType":"Percentage","name":"newMaxDepositPercentageOfTVL","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setArkMaxDepositPercentageOfTVL"},{"inputs":[{"internalType":"address","name":"ark","type":"address"},{"internalType":"uint256","name":"newMaxRebalanceInflow","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setArkMaxRebalanceInflow"},{"inputs":[{"internalType":"address","name":"ark","type":"address"},{"internalType":"uint256","name":"newMaxRebalanceOutflow","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setArkMaxRebalanceOutflow"},{"inputs":[{"internalType":"uint256","name":"newDepositCap","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setFleetDepositCap"},{"inputs":[{"internalType":"uint256","name":"newMaxRebalanceOperations","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setMaxRebalanceOperations"},{"inputs":[{"internalType":"uint256","name":"newMinimumBalance","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setMinimumBufferBalance"},{"inputs":[{"internalType":"uint256","name":"newMinimumPauseTime","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setMinimumPauseTime"},{"inputs":[{"internalType":"address","name":"newStakingRewardsManager","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setStakingRewardsManager"},{"inputs":[{"internalType":"Percentage","name":"newTipRate","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setTipRate"},{"inputs":[],"stateMutability":"view","type":"function","name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"tip","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unpause"},{"inputs":[{"internalType":"uint256","name":"newCooldown","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"updateRebalanceCooldown"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"withdraw","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"withdrawFromArks","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"withdrawFromBuffer","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"withdrawableTotalAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"addArk(address)":{"params":{"ark":"The address of the new Ark"}},"addArks(address[])":{"params":{"arks":"Array of ark addresses"}},"adjustBuffer((address,address,uint256,bytes,bytes)[])":{"details":"RebalanceData struct contains:      - fromArk: The address of the Ark to move assets from (must be buffer Ark for withdrawing from buffer)      - toArk: The address of the Ark to move assets to (must be buffer Ark for depositing to buffer)      - amount: The amount of assets to move      - boardData: Additional optional data for the board operation      - disembarkData: Additional optional data for the disembark operationUnlike rebalance, adjustBuffer operations must involve the buffer ArkAll operations in a single adjustBuffer call must be in the same direction (either all to buffer or all from buffer)type(uint256).max is not allowed as an amount for buffer adjustmentsWhen withdrawing from the buffer, the total amount moved cannot reduce the buffer balance below minFundsBufferBalanceThe number of operations in a single adjustBuffer call is limited to DEFAULT_MAX_REBALANCE_OPERATIONSAdjustBuffer is subject to a cooldown period between callsOnly callable by accounts with the Keeper role","params":{"data":"Array of RebalanceData structs"}},"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"arks(uint256)":{"params":{"index":"The index of the ark in the arks array"},"returns":{"_0":"The address of the ark at the specified index"}},"asset()":{"details":"Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"convertToAssets(uint256)":{"details":"Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and from."},"convertToShares(uint256)":{"details":"Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and from."},"decimals()":{"details":"Returns the decimals places of the token."},"deposit(uint256,address)":{"details":"Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."},"deposit(uint256,address,bytes)":{"params":{"assets":"The amount of assets to be deposited.","receiver":"The address of the receiver who will receive the deposited assets.","referralCode":"An optional referral code that can be used for tracking or rewards."}},"forceRebalance((address,address,uint256,bytes,bytes)[])":{"details":"has no cooldown enforced but only callable by privileged role","params":{"data":"Array of typed rebalance data struct"}},"isArkActive(address)":{"params":{"ark":"The address of the Ark"},"returns":{"_0":"bool Returns true if the ark is active, false otherwise."}},"maxBufferRedeem(address)":{"params":{"owner":"The address of the owner of the assets"},"returns":{"_0":"uint256 The maximum amount that can be redeemed."}},"maxBufferWithdraw(address)":{"params":{"owner":"The address of the owner of the assets"},"returns":{"_0":"uint256 The maximum amount that can be withdrawn."}},"maxDeposit(address)":{"details":"Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver, through a deposit call. - MUST return a limited value if receiver is subject to some deposit limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited. - MUST NOT revert."},"maxMint(address)":{"details":"Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call. - MUST return a limited value if receiver is subject to some mint limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted. - MUST NOT revert."},"maxRedeem(address)":{"details":"Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault, through a redeem call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock. - MUST NOT revert."},"maxWithdraw(address)":{"details":"Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, through a withdraw call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST NOT revert."},"mint(uint256,address)":{"details":"Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."},"name()":{"details":"Returns the name of the token."},"pause()":{"details":"This function is used to pause the FleetCommander in case of critical issues or emergenciesOnly callable by the guardian or governor"},"previewDeposit(uint256)":{"details":"Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing."},"previewMint(uint256)":{"details":"Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting."},"previewRedeem(uint256)":{"details":"Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the   same transaction. - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the   redemption would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming."},"previewWithdraw(uint256)":{"details":"Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if   called   in the same transaction. - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though   the withdrawal would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing."},"rebalance((address,address,uint256,bytes,bytes)[])":{"details":"RebalanceData struct contains:      - fromArk: The address of the Ark to move assets from      - toArk: The address of the Ark to move assets to      - amount: The amount of assets to move      - boardData: Additional data for the board operation      - disembarkData: Additional data for the disembark operationUsing type(uint256).max as the amount will move all assets from the fromArk to the toArkRebalance operations cannot involve the buffer Ark directlyThe number of operations in a single rebalance call is limited to DEFAULT_MAX_REBALANCE_OPERATIONSRebalance is subject to a cooldown period between callsOnly callable by accounts with the Keeper role","params":{"data":"Array of RebalanceData structs"}},"redeem(uint256,address,address)":{"details":"This function first attempts to redeem from the buffer. If the buffer doesn't have enough assets,      it will redeem from the arks. It also handles the case where the maximum possible amount is requested.","params":{"owner":"The address of the owner of the shares","receiver":"The address that will receive the redeemed assets","shares":"The number of shares to redeem. If set to type(uint256).max, it will redeem all shares owned by the owner."},"returns":{"assets":"The amount of assets received in exchange for the redeemed shares"}},"redeemFromArks(uint256,address,address)":{"params":{"owner":"The address of the owner of the shares","receiver":"The address that will receive the assets","shares":"The amount of shares to redeem"},"returns":{"assets":"The amount of assets forcefully withdrawn"}},"redeemFromBuffer(uint256,address,address)":{"params":{"owner":"The address of the owner of the shares","receiver":"The address that will receive the assets","shares":"The amount of shares to redeem"},"returns":{"assets":"The amount of assets redeemed"}},"removeArk(address)":{"params":{"ark":"The address of the Ark to remove"}},"setArkDepositCap(address,uint256)":{"params":{"ark":"The address of the Ark","newDepositCap":"The new deposit cap"}},"setArkMaxDepositPercentageOfTVL(address,uint256)":{"params":{"ark":"The address of the Ark","newMaxDepositPercentageOfTVL":"The new max deposit percentage of TVL"}},"setArkMaxRebalanceInflow(address,uint256)":{"details":"Only callable by the governor","params":{"ark":"The address of the Ark","newMaxRebalanceInflow":"The new maxRebalanceInflow value"}},"setArkMaxRebalanceOutflow(address,uint256)":{"details":"Only callable by the governor","params":{"ark":"The address of the Ark","newMaxRebalanceOutflow":"The new maxRebalanceOutflow value"}},"setFleetDepositCap(uint256)":{"params":{"newDepositCap":"The new deposit cap"}},"setMaxRebalanceOperations(uint256)":{"details":"Sets the minimum number of allowe rebalance operations.","params":{"newMaxRebalanceOperations":"The new maximum allowed rebalance operations."}},"setMinimumBufferBalance(uint256)":{"details":"Sets the minimum buffer balance for the fleet commander.","params":{"newMinimumBalance":"The new minimum buffer balance to be set."}},"setMinimumPauseTime(uint256)":{"details":"Only callable by the governor","params":{"newMinimumPauseTime":"The new minimum pause time in seconds"}},"setStakingRewardsManager(address)":{"params":{"newStakingRewardsManager":"The address  of the new staking rewards manager contract"}},"setTipRate(uint256)":{"details":"Only callable by the governorThe tip rate is set as a Percentage. Percentages use 18 decimals of precision      For example, for a 5% rate, you'd pass 5 * 1e18 (5 000 000 000 000 000 000)","params":{"newTipRate":"The new tip rate as a Percentage"}},"symbol()":{"details":"Returns the symbol of the token."},"tip()":{"returns":{"_0":"uint256 The amount of tips accrued"}},"totalAssets()":{"details":"If cached data is available, it will be used. Otherwise, it will be calculated on demand (and cached)","returns":{"_0":"uint256 The total amount of assets that can be withdrawn."}},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"unpause()":{"details":"This function is used to resume normal operations after a pauseOnly callable by the guardian or governor"},"updateRebalanceCooldown(uint256)":{"params":{"newCooldown":"The new cooldown period in seconds"}},"withdraw(uint256,address,address)":{"details":"This function first attempts to withdraw from the buffer. If the buffer doesn't have enough assets,      it will withdraw from the arks. It also handles the case where the maximum possible amount is requested.","params":{"assets":"The amount of assets to withdraw. If set to type(uint256).max, it will withdraw the maximum possible amount.","owner":"The address of the owner of the shares","receiver":"The address that will receive the withdrawn assets"},"returns":{"shares":"The number of shares burned in exchange for the withdrawn assets"}},"withdrawFromArks(uint256,address,address)":{"params":{"assets":"The amount of assets to forcefully withdraw","owner":"The address of the owner of the assets","receiver":"The address that will receive the withdrawn assets"},"returns":{"shares":"The amount of shares redeemed"}},"withdrawFromBuffer(uint256,address,address)":{"params":{"assets":"The amount of assets to withdraw","owner":"The address of the owner of the assets","receiver":"The address that will receive the withdrawn assets"},"returns":{"shares":"The amount of shares redeemed"}},"withdrawableTotalAssets()":{"details":"If cached data is available, it will be used. Otherwise, it will be calculated on demand (and cached)","returns":{"_0":"uint256 The total amount of assets that can be withdrawn."}}},"version":1},"userdoc":{"kind":"user","methods":{"addArk(address)":{"notice":"Adds a new Ark"},"addArks(address[])":{"notice":"Adds multiple Arks in a batch"},"adjustBuffer((address,address,uint256,bytes,bytes)[])":{"notice":"Adjusts the buffer of funds by moving assets between the buffer Ark and other Arks"},"arks(uint256)":{"notice":"Retrieves the ark address at the specified index"},"bufferArk()":{"notice":"Retrieves the buffer ark address"},"deposit(uint256,address,bytes)":{"notice":"Deposits a specified amount of assets into the contract for a given receiver."},"forceRebalance((address,address,uint256,bytes,bytes)[])":{"notice":"Forces a rebalance operation"},"getArks()":{"notice":"Retrieves the arks currently linked to fleet"},"getConfig()":{"notice":"Retrieves the current fleet config"},"isArkActive(address)":{"notice":"Checks if the ark is part of the fleet"},"maxBufferRedeem(address)":{"notice":"Returns the maximum amount of the underlying asset that can be redeemed from the owner balance in the Vault, directly from Buffer."},"maxBufferWithdraw(address)":{"notice":"Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, directly from Buffer."},"pause()":{"notice":"Pauses the FleetCommander"},"rebalance((address,address,uint256,bytes,bytes)[])":{"notice":"Rebalances the assets across Arks"},"redeem(uint256,address,address)":{"notice":"Redeems a specified amount of shares from the FleetCommander"},"redeemFromArks(uint256,address,address)":{"notice":"Redeems shares for assets from the FleetCommander"},"redeemFromBuffer(uint256,address,address)":{"notice":"Redeems shares for assets directly from the Buffer"},"removeArk(address)":{"notice":"Removes an existing Ark"},"setArkDepositCap(address,uint256)":{"notice":"Sets a new deposit cap for an Ark"},"setArkMaxDepositPercentageOfTVL(address,uint256)":{"notice":"Sets the max deposit percentage of TVL for an Ark"},"setArkMaxRebalanceInflow(address,uint256)":{"notice":"Sets the maxRebalanceInflow for an Ark"},"setArkMaxRebalanceOutflow(address,uint256)":{"notice":"Sets the maxRebalanceOutflow for an Ark"},"setFleetDepositCap(uint256)":{"notice":"Sets a new deposit cap for Fleet"},"setMinimumPauseTime(uint256)":{"notice":"Sets a new minimum pause time for the FleetCommander"},"setStakingRewardsManager(address)":{"notice":"Sets the staking rewards manager contract address"},"setTipRate(uint256)":{"notice":"Sets a new tip rate for the FleetCommander"},"tip()":{"notice":"Accrues and distributes tips"},"totalAssets()":{"notice":"Returns the total assets that are managed the FleetCommander."},"unpause()":{"notice":"Unpauses the FleetCommander"},"updateRebalanceCooldown(uint256)":{"notice":"Updates the rebalance cooldown period"},"withdraw(uint256,address,address)":{"notice":"Withdraws a specified amount of assets from the FleetCommander"},"withdrawFromArks(uint256,address,address)":{"notice":"Forces a withdrawal of assets from the FleetCommander"},"withdrawFromBuffer(uint256,address,address)":{"notice":"Forces a withdrawal of assets directly from the Buffer"},"withdrawableTotalAssets()":{"notice":"Returns the total assets that are currently withdrawable from the FleetCommander."}},"version":1}},"settings":{"remappings":["@layerzerolabs/=node_modules/@summerfi/dependencies/node_modules/@layerzerolabs/","@openzeppelin-next/=node_modules/@summerfi/dependencies/lib/openzeppelin-next/","@openzeppelin/contracts-upgradeable/=node_modules/@summerfi/dependencies/lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/","@pendle/core-v2/contracts/=node_modules/@summerfi/dependencies/lib/pendle-core-v2-public/contracts/","@prb/math/=node_modules/@summerfi/dependencies/lib/prb-math/","@summerfi/access-contracts/=node_modules/@summerfi/access-contracts/src/","@summerfi/constants/=node_modules/@summerfi/constants/src/","@summerfi/dependencies/=node_modules/@summerfi/dependencies/lib/","@summerfi/dutch-auction/=node_modules/@summerfi/dutch-auction/src/","@summerfi/earn-gov-contracts/=node_modules/@summerfi/earn-gov-contracts/src/","@summerfi/math-utils/contracts/=node_modules/@summerfi/math-utils/contracts/","@summerfi/percentage-solidity/contracts/=node_modules/@summerfi/percentage-solidity/contracts/","@summerfi/protocol-interfaces/=node_modules/@summerfi/protocol-interfaces/src/","@summerfi/rewards-contracts/=node_modules/@summerfi/rewards-contracts/src/","@summerfi/voting-decay/=node_modules/@summerfi/voting-decay/src/","ds-test/=lib/metamorpho/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/metamorpho/lib/erc4626-tests/","forge-std/=node_modules/@summerfi/dependencies/lib/forge-std/src/","hardhat/=node_modules/hardhat/","metamorpho/=node_modules/@summerfi/dependencies/lib/metamorpho/src/","morpho-blue-irm/=lib/metamorpho/lib/morpho-blue-irm/src/","morpho-blue/=node_modules/@summerfi/dependencies/lib/metamorpho/lib/morpho-blue/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","pendle-core-v2-public/=lib/pendle-core-v2-public/contracts/","prb-math/=lib/prb-math/src/","solidity-bytes-utils/=node_modules/solidity-bytes-utils/","solmate/=lib/metamorpho/lib/morpho-blue-irm/lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IFleetCommander.sol":"IFleetCommander"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol":{"keccak256":"0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253","urls":["bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73","dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi"],"license":"MIT"},"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol":{"keccak256":"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724","urls":["bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a","dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"],"license":"MIT"},"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol":{"keccak256":"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c","urls":["bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba","dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"],"license":"MIT"},"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol":{"keccak256":"0x6423475004ac1c4db6e9f16908cbfb82e630f7868051869c6f89c7452facbc06","urls":["bzz-raw://bd31766a3235519db9207c02652e124746eef3e451271e82830090f9864ff4cf","dweb:/ipfs/QmNjjADM3vFELnFtiZJYuRRXEjQb8KP7cq6b8YqKww6Sdb"],"license":"MIT"},"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol":{"keccak256":"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229","urls":["bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155","dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz"],"license":"MIT"},"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol":{"keccak256":"0xc61b3530214f6729db70cc02ffacf6218e601a5e351dd25e369a03c6ca201cfb","urls":["bzz-raw://48b897a0323b8d04464848832b364ecfd6c002fd15c53a86304ca1eec1475d12","dweb:/ipfs/QmV1S2GmZgU9bDEfdXFyCe1HhDy4nND3z4Jyy4iBvh5wu2"],"license":"MIT"},"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4","urls":["bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009","dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"],"license":"MIT"},"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC4626.sol":{"keccak256":"0xef603264ceb5579bdad2704dbab78b52da014abe1c9326497a7e3c7d1aa49e12","urls":["bzz-raw://1899de9ac58ac69d663e8c2976cb1213d31734dda484f2053bf69bcf53a3e75b","dweb:/ipfs/QmQgkETvGiy8bv9SB42fiKdSSfTmtHMxC3ueeAuAHwhqY8"],"license":"MIT"},"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28","urls":["bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323","dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR"],"license":"MIT"},"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol":{"keccak256":"0x18436638da96539b6a9f971f8ce332c6fcad32d15c988af689b174f753d9936b","urls":["bzz-raw://0351b5b167c9f0f6eb670bc6db5e9579aadb9a42edc62256c182695c3e9bf47e","dweb:/ipfs/QmSQPNXU4NYhYojvyqHRzQx2duRx5njv6AHssoJMQb8Tq1"],"license":"MIT"},"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0xe484b91c24d898c84aebae9c06263523a27582e6c97909d9ea71a4e15dc44fa2","urls":["bzz-raw://0ca1ffd7dbe0cf24fae85132e0b33bb26f6ff7935effd0d73f1f67e13bff4032","dweb:/ipfs/QmetqL3cbjn5pR4vVtnkWZBYH5LPvEsPoVrd6bDwGe2ZfJ"],"license":"MIT"},"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"],"license":"MIT"},"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/utils/Errors.sol":{"keccak256":"0x3f6500df17ff64f838b357a58be5a2d8e8cc937db0cf10504c7049f13608ab66","urls":["bzz-raw://0a0285cedb657d751d809a543e7a3b8a3d541701046808b9d6b0fa2572bac256","dweb:/ipfs/QmTaxGdRkw56LhPRc9F9SLTufmQ37XMgsihdESHREWpwRd"],"license":"MIT"},"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/utils/Panic.sol":{"keccak256":"0x156d11cd8394cb9245b0bb9d7a27f5b3e7193e3cec7b91a66474ae01af8d818c","urls":["bzz-raw://6f171e65be237fe4aaa2f7a74862c10a06535b8c04baa42e848a63c6fc96bcd4","dweb:/ipfs/QmUdz8WHcrjqYmbRaz5PFN2N2thfvQjcqTorZUfcmWTfat"],"license":"MIT"},"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c","urls":["bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e","dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX"],"license":"MIT"},"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0xd2fb25b789ccaf6bf50b147ecff4c9d62d05d3f5c5d562fdf568f6926a2a280c","urls":["bzz-raw://521e2df6ed2080c9ae2f442b27a827551ab96ff2e5f920ad6dc978c355b4b966","dweb:/ipfs/Qme1Z6dU7ZDQMfKiHwpLejAyFGsP9HpijvX9uzxivEGjga"],"license":"MIT"},"node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol":{"keccak256":"0x8cdcfbd2484c2e7db797f57ff8731fe11d7ab0092c7a1112f8ad6047ad6d4481","urls":["bzz-raw://356742c148ca77b9d953059072c32cf9d0d98ae782129fe442c73a6736bfd7cb","dweb:/ipfs/QmZN5jdoBbCihsv1RK8n6pf6cC89pi77KGAasn7ZvyuNTn"],"license":"MIT"},"node_modules/@summerfi/percentage-solidity/contracts/Percentage.sol":{"keccak256":"0x7c3cd1d63bbf27068d2670b2f56802f74cec5af98b0d5bf8fb380ec03ce0d74f","urls":["bzz-raw://21c797aa6bb45e3b06b368cc520c682dea0d60be9f7e99011cec5b8130946760","dweb:/ipfs/QmQN8LDhwMa4EC8VRZKae6eBH7Q9kkhKmfNyszGGQUiaXa"],"license":"MIT"},"node_modules/@summerfi/rewards-contracts/src/interfaces/IStakingRewardsManagerBase.sol":{"keccak256":"0x36224da4706338c92df1839053e622c8a72c952a4673dd199026a93d26bb8f6a","urls":["bzz-raw://b34632cc008f4a259ec7b42d50fbd60ad252f77833ed53cff3a09d8b01a57a5c","dweb:/ipfs/QmVXhHhYQQNKLND7TbG12oAJ5s5sTXooQGvfPFmLqEskTJ"],"license":"MIT"},"node_modules/@summerfi/rewards-contracts/src/interfaces/IStakingRewardsManagerBaseErrors.sol":{"keccak256":"0x5b768b165b77b2a8e2e9466af78113762d46b1bf37412f5dab578ef74c2c9be3","urls":["bzz-raw://a3cfe0237a190b5de87c911248fa54d2e70dc3ba1f263c4fccd3797d3222c467","dweb:/ipfs/QmT9RbCZmRZKttw6sbBNvDvUcXBHvmJoWuA9vudbyJnycR"],"license":"MIT"},"src/errors/IArkConfigProviderErrors.sol":{"keccak256":"0x3c7d0e913153585230567ea68488375b3f7451c542314c2664e4d18c3d70de1f","urls":["bzz-raw://8960897ac51d804b8d4df199c2d81a612d1c22d65d4a081ff9549568ed87a800","dweb:/ipfs/QmQWGLwUBDWzv2Z8t9kvrK913wvawVmsoPHwEgLZMQcdQh"],"license":"BUSL-1.1"},"src/errors/IArkErrors.sol":{"keccak256":"0xe7d3a5380b1bde7bb732fb72ddfc27e12b8bd0ca7a48cb2311805a4a6be8200a","urls":["bzz-raw://3aa8b1c70bc54a7235c8a31179b970613db0459c6b4f551931d211f26a3a0b68","dweb:/ipfs/QmawQCdsJhq3pmsAoUabunh6oFjgZ7T36cKuAbHuJ1rBbZ"],"license":"BUSL-1.1"},"src/errors/IFleetCommanderConfigProviderErrors.sol":{"keccak256":"0x0a13fc1ed8e0b14730878c5f5217fefcbb44557e6bbf37b5bf10a635f2942dca","urls":["bzz-raw://b59bdb785326c6713144f9ebedcd15139a6c64fa5486c7a590536ec8c69de75d","dweb:/ipfs/QmUwiRTAe1sAeYdowdJemyR7K1UvCjzeyJckw9uxXEHS9s"],"license":"BUSL-1.1"},"src/errors/IFleetCommanderErrors.sol":{"keccak256":"0x486d9fff95067ca0df660a67c9c01959837f0894bb474053b681804611f533a8","urls":["bzz-raw://4bcec565b9b16a3f633ab8fbe1cdd204c2258b763dd8637d60a401c36f8bb8c2","dweb:/ipfs/QmYiD3PzfLSVh9uooYT1EECGRj5eKTiUsp7mJxTbvF1Zh9"],"license":"BUSL-1.1"},"src/events/IArkConfigProviderEvents.sol":{"keccak256":"0x1e0fcddf183afaef60f18a1f8d54c09d5c7ee8e3ea6092b708dc93fc8fccbf51","urls":["bzz-raw://cd6e1ccfa719d6b04335338924afe4daadc61c473bfc050c5f31e2a1633d68f3","dweb:/ipfs/QmQBcZ5hGtiPbU8LGB389Mc1swxriXBiVpKo8j51DR8N2Y"],"license":"BUSL-1.1"},"src/events/IArkEvents.sol":{"keccak256":"0x3302e7c0412fd45f1d29badb27e1a9d670935cd720e238e60cf51dc25346dbfe","urls":["bzz-raw://c6679b529e5c6f5c2bf569a1912404bbcaa56ba68eae2428fb849564dceb0596","dweb:/ipfs/Qmd7uALeQWVMSXpS6fL8karTMCdT7NDbooLQ8zkKP3BCtZ"],"license":"BUSL-1.1"},"src/events/IFleetCommanderConfigProviderEvents.sol":{"keccak256":"0x4e30803b0b3cb4f43b778459dd6fa746930e18a25ea6e5847e004757250263e9","urls":["bzz-raw://c68312ee407080387596bf5a2a49045a69150e3af790e3e6bf28bde701ee8d82","dweb:/ipfs/QmXrPmkLjmJYNs8h45AVUXHd3csoptHCgmYDPvztVy1Fb4"],"license":"BUSL-1.1"},"src/events/IFleetCommanderEvents.sol":{"keccak256":"0xb7be7b619d39bf11d368ecd4dfd81cb5df0cd75e1bd67825a6c67d19112cfc21","urls":["bzz-raw://5b830bc6348fbbbcac9d01a9c3d686f493bad1e5347a4e11d08e7fb076fcd2d3","dweb:/ipfs/QmP5xJxU27iPeY2AnmU4xmeohCDVzvwJQ7MLrpe3js6kqD"],"license":"BUSL-1.1"},"src/interfaces/IArk.sol":{"keccak256":"0x849c251bae000ae6ba10c379cdd5c6434d764fc2a0d5b55f64a95f91bb1579fb","urls":["bzz-raw://c5e929ba3d5df642df36f0ab4ef68698824894daf949935f5092dac52771ed5e","dweb:/ipfs/QmPAThN9cuwYfJ3suVi6Txrtn8K6oX4wGk4uWYK8JaBLZN"],"license":"BUSL-1.1"},"src/interfaces/IArkAccessManaged.sol":{"keccak256":"0x6db898309ce0226b3eeff397b2e9c8e20600753af923aeeaa4de447956d020ae","urls":["bzz-raw://79e4a594bc2dbea46b564e199506fd8e8fe25d964f99431b02efc1ca67ba6365","dweb:/ipfs/QmRiJSuDMXbzNJNfatxELm3nkYpJtodTYfhK4BaVG4YyhH"],"license":"BUSL-1.1"},"src/interfaces/IArkConfigProvider.sol":{"keccak256":"0xf1b5d1c5a90a89ba962b748f3e9cd3464f7db944fb32836716ebadce69eb373b","urls":["bzz-raw://c4b76d83d45ecd3c3439d6e3df8622cb09b52c3039b54fdf766e6314a2b8f140","dweb:/ipfs/QmRdy36zHnwwgRz8UCQLYT3pwZBTaRivHFPA5tvhZSbCdV"],"license":"BUSL-1.1"},"src/interfaces/IFleetCommander.sol":{"keccak256":"0x32d706c7482b606e471762db6bf62b2d087410bd1e67704dbeed777d1c9ff322","urls":["bzz-raw://43f7c36eb9db655757142ed7e81b751b8f1df31c99acc34b1f0d5fc1eed62f80","dweb:/ipfs/QmXpf1p8Tpoci3BcwxYmU9HzVgwxhjGm24NgEsUxhpYXb1"],"license":"BUSL-1.1"},"src/interfaces/IFleetCommanderConfigProvider.sol":{"keccak256":"0x5bff2b0462a10302a6a45d17bf2a05988e361c5f69dc0eba4ae1a76ebe1b596c","urls":["bzz-raw://25401e3cb17f5800ce82125318ff4d3ce2ae9fcd8966de9b6786f742cdb9145d","dweb:/ipfs/Qmai8EcWTRaosM2dHFDRE41McM8CzUzEVGCC3GMpEQn32k"],"license":"BUSL-1.1"},"src/interfaces/IFleetCommanderRewardsManager.sol":{"keccak256":"0xe603c32de8fc47de6f70b0168f28afdd2b9e4e442ed55682935336a92eaf8c51","urls":["bzz-raw://907d5149b75bfda453e4d3cb3d3f18b77350bc1519fe10f91533e0cb8f0a69c3","dweb:/ipfs/QmVdjh8u7gyydoKhShQGqwmp2GyPwCxDFkyGxwYBFsNy7h"],"license":"MIT"},"src/types/ArkTypes.sol":{"keccak256":"0xed653b2dbabaa48ec05582a14f6a019608121947e9f4e5778261cbd00350b427","urls":["bzz-raw://093ca265a2bfa3a59d4a6dfc0bd6a34f4a62310e3545d84b945c37592ae9aef9","dweb:/ipfs/QmTBvskp4ZM7MrvfLVdRhbk1miKmQmwyD1tjBHr1TMgViJ"],"license":"BUSL-1.1"},"src/types/FleetCommanderTypes.sol":{"keccak256":"0x5ec0eff8b2767c50f745cb0aeabf924c9daa6fcff9358ecd13b3621e6bcec460","urls":["bzz-raw://af33c77a06725d8b77627ada03532ecea0ec859438ea7e2eb34cfddf18a04154","dweb:/ipfs/QmSnxn9cYam6z65p5NBF7H5mTtJ33d9eVBTSKVN4g3yPk3"],"license":"BUSL-1.1"}},"version":1},"id":249}