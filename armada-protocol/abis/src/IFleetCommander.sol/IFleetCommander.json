{"abi":[{"type":"function","name":"addArk","inputs":[{"name":"ark","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addArks","inputs":[{"name":"arks","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"adjustBuffer","inputs":[{"name":"data","type":"tuple[]","internalType":"struct RebalanceData[]","components":[{"name":"fromArk","type":"address","internalType":"address"},{"name":"toArk","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"allowance","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"approve","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"arks","inputs":[{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"asset","inputs":[],"outputs":[{"name":"assetTokenAddress","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"balanceOf","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"config","inputs":[],"outputs":[{"name":"bufferArk","type":"address","internalType":"contract IArk"},{"name":"minimumBufferBalance","type":"uint256","internalType":"uint256"},{"name":"depositCap","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"convertToAssets","inputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"assets","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"convertToShares","inputs":[{"name":"assets","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"deposit","inputs":[{"name":"assets","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"}],"outputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"emergencyShutdown","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"forceRebalance","inputs":[{"name":"data","type":"tuple[]","internalType":"struct RebalanceData[]","components":[{"name":"fromArk","type":"address","internalType":"address"},{"name":"toArk","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getArks","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"isArkActive","inputs":[{"name":"ark","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"maxBufferWithdraw","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"maxDeposit","inputs":[{"name":"receiver","type":"address","internalType":"address"}],"outputs":[{"name":"maxAssets","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"maxMint","inputs":[{"name":"receiver","type":"address","internalType":"address"}],"outputs":[{"name":"maxShares","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"maxRedeem","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"maxShares","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"maxWithdraw","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"maxAssets","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"mint","inputs":[{"name":"shares","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"}],"outputs":[{"name":"assets","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"previewDeposit","inputs":[{"name":"assets","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"previewMint","inputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"assets","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"previewRedeem","inputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"assets","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"previewWithdraw","inputs":[{"name":"assets","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"rebalance","inputs":[{"name":"data","type":"tuple[]","internalType":"struct RebalanceData[]","components":[{"name":"fromArk","type":"address","internalType":"address"},{"name":"toArk","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"redeem","inputs":[{"name":"shares","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"assets","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"redeemFromArks","inputs":[{"name":"shares","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"assets","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"redeemFromBuffer","inputs":[{"name":"shares","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"assets","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeArk","inputs":[{"name":"ark","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setArkDepositCap","inputs":[{"name":"ark","type":"address","internalType":"address"},{"name":"newDepositCap","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setArkMaxRebalanceInflow","inputs":[{"name":"ark","type":"address","internalType":"address"},{"name":"newMaxRebalanceInflow","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setArkMaxRebalanceOutflow","inputs":[{"name":"ark","type":"address","internalType":"address"},{"name":"newMaxRebalanceOutflow","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setFleetDepositCap","inputs":[{"name":"newDepositCap","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setMinimumBufferBalance","inputs":[{"name":"newMinimumBalance","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setTipJar","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setTipRate","inputs":[{"name":"newTipRate","type":"uint256","internalType":"Percentage"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"tip","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"totalAssets","inputs":[],"outputs":[{"name":"totalManagedAssets","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transfer","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"updateRebalanceCooldown","inputs":[{"name":"newCooldown","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdraw","inputs":[{"name":"assets","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawFromArks","inputs":[{"name":"assets","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawFromBuffer","inputs":[{"name":"assets","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"spender","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ArkAdded","inputs":[{"name":"ark","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ArkRemoved","inputs":[{"name":"ark","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Deposit","inputs":[{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"assets","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"shares","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"DepositCapUpdated","inputs":[{"name":"newCap","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"FeeAddressUpdated","inputs":[{"name":"newAddress","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"FleetCommanderBufferAdjusted","inputs":[{"name":"keeper","type":"address","indexed":true,"internalType":"address"},{"name":"totalMoved","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"FleetCommanderRedeemedFromArks","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"receiver","type":"address","indexed":false,"internalType":"address"},{"name":"totalRedeemed","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"FleetCommanderWithdrawnFromArks","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"receiver","type":"address","indexed":false,"internalType":"address"},{"name":"totalWithdrawn","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"FleetCommanderminimumBufferBalanceUpdated","inputs":[{"name":"newBalance","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"FundsBufferBalanceUpdated","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"prevBalance","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newBalance","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"FundsQueueRefilled","inputs":[{"name":"keeper","type":"address","indexed":true,"internalType":"address"},{"name":"prevBalance","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newBalance","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"MinFundsQueueBalanceUpdated","inputs":[{"name":"keeper","type":"address","indexed":true,"internalType":"address"},{"name":"newBalance","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"QueuedFundsCommitted","inputs":[{"name":"keeper","type":"address","indexed":true,"internalType":"address"},{"name":"prevBalance","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newBalance","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Rebalanced","inputs":[{"name":"keeper","type":"address","indexed":true,"internalType":"address"},{"name":"rebalances","type":"tuple[]","indexed":false,"internalType":"struct RebalanceData[]","components":[{"name":"fromArk","type":"address","internalType":"address"},{"name":"toArk","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Withdraw","inputs":[{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"assets","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"shares","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addArk(address)":"e37d5b7f","addArks(address[])":"cc5b1e55","adjustBuffer((address,address,uint256)[])":"0e4a840d","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","arks(uint256)":"ff32a42a","asset()":"38d52e0f","balanceOf(address)":"70a08231","config()":"79502c55","convertToAssets(uint256)":"07a2d13a","convertToShares(uint256)":"c6e6f592","decimals()":"313ce567","deposit(uint256,address)":"6e553f65","emergencyShutdown()":"3403c2fc","forceRebalance((address,address,uint256)[])":"0cf0654e","getArks()":"f1cd665b","isArkActive(address)":"d25dd101","maxBufferWithdraw(address)":"3e314c76","maxDeposit(address)":"402d267d","maxMint(address)":"c63d75b6","maxRedeem(address)":"d905777e","maxWithdraw(address)":"ce96cb77","mint(uint256,address)":"94bf804d","name()":"06fdde03","previewDeposit(uint256)":"ef8b30f7","previewMint(uint256)":"b3d7f6b9","previewRedeem(uint256)":"4cdad506","previewWithdraw(uint256)":"0a28a477","rebalance((address,address,uint256)[])":"b64d620e","redeem(uint256,address,address)":"ba087652","redeemFromArks(uint256,address,address)":"3a7c9f0e","redeemFromBuffer(uint256,address,address)":"f3577816","removeArk(address)":"96c25a38","setArkDepositCap(address,uint256)":"34050560","setArkMaxRebalanceInflow(address,uint256)":"d45a07a1","setArkMaxRebalanceOutflow(address,uint256)":"b637766c","setFleetDepositCap(uint256)":"d902d41a","setMinimumBufferBalance(uint256)":"4daecb9c","setTipJar()":"18d08d0b","setTipRate(uint256)":"5822198f","symbol()":"95d89b41","tip()":"2755cd2d","totalAssets()":"01e1d114","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","updateRebalanceCooldown(uint256)":"dc9de0a8","withdraw(uint256,address,address)":"b460af94","withdrawFromArks(uint256,address,address)":"a039e944","withdrawFromBuffer(uint256,address,address)":"5f538f6f"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"}],\"name\":\"ArkAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"}],\"name\":\"ArkRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCap\",\"type\":\"uint256\"}],\"name\":\"DepositCapUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"FeeAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"keeper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalMoved\",\"type\":\"uint256\"}],\"name\":\"FleetCommanderBufferAdjusted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalRedeemed\",\"type\":\"uint256\"}],\"name\":\"FleetCommanderRedeemedFromArks\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalWithdrawn\",\"type\":\"uint256\"}],\"name\":\"FleetCommanderWithdrawnFromArks\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"FleetCommanderminimumBufferBalanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"FundsBufferBalanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"keeper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"FundsQueueRefilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"keeper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"MinFundsQueueBalanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"keeper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"QueuedFundsCommitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"keeper\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"fromArk\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toArk\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct RebalanceData[]\",\"name\":\"rebalances\",\"type\":\"tuple[]\"}],\"name\":\"Rebalanced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"}],\"name\":\"addArk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"arks\",\"type\":\"address[]\"}],\"name\":\"addArks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"fromArk\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toArk\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct RebalanceData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"adjustBuffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"arks\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"assetTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"config\",\"outputs\":[{\"internalType\":\"contract IArk\",\"name\":\"bufferArk\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minimumBufferBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositCap\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyShutdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"fromArk\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toArk\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct RebalanceData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"forceRebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getArks\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"}],\"name\":\"isArkActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxBufferWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"fromArk\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toArk\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct RebalanceData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeemFromArks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeemFromBuffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"}],\"name\":\"removeArk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newDepositCap\",\"type\":\"uint256\"}],\"name\":\"setArkDepositCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newMaxRebalanceInflow\",\"type\":\"uint256\"}],\"name\":\"setArkMaxRebalanceInflow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newMaxRebalanceOutflow\",\"type\":\"uint256\"}],\"name\":\"setArkMaxRebalanceOutflow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDepositCap\",\"type\":\"uint256\"}],\"name\":\"setFleetDepositCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMinimumBalance\",\"type\":\"uint256\"}],\"name\":\"setMinimumBufferBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setTipJar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Percentage\",\"name\":\"newTipRate\",\"type\":\"uint256\"}],\"name\":\"setTipRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tip\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalManagedAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCooldown\",\"type\":\"uint256\"}],\"name\":\"updateRebalanceCooldown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdrawFromArks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdrawFromBuffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"ArkAdded(address)\":{\"params\":{\"ark\":\"The address of the newly added Ark\"}},\"ArkRemoved(address)\":{\"params\":{\"ark\":\"The address of the removed Ark\"}},\"DepositCapUpdated(uint256)\":{\"params\":{\"newCap\":\"The new deposit cap value\"}},\"FeeAddressUpdated(address)\":{\"params\":{\"newAddress\":\"The new fee address\"}},\"FleetCommanderBufferAdjusted(address,uint256)\":{\"params\":{\"keeper\":\"Keeper address\",\"totalMoved\":\"Total amount of funds moved to arks\"}},\"FleetCommanderRedeemedFromArks(address,address,uint256)\":{\"params\":{\"owner\":\"The address of the owner who initiated the redemption\",\"receiver\":\"The address of the receiver of the redeemed funds\",\"totalRedeemed\":\"The total amount of funds redeemed\"}},\"FleetCommanderWithdrawnFromArks(address,address,uint256)\":{\"params\":{\"owner\":\"The address of the owner who initiated the withdrawal\",\"receiver\":\"The address of the receiver of the withdrawn funds\",\"totalWithdrawn\":\"The total amount of funds withdrawn\"}},\"FleetCommanderminimumBufferBalanceUpdated(uint256)\":{\"params\":{\"newBalance\":\"New minimum funds buffer balance\"}},\"FundsBufferBalanceUpdated(address,uint256,uint256)\":{\"params\":{\"newBalance\":\"The new buffer balance\",\"prevBalance\":\"The previous buffer balance\",\"user\":\"The address of the user who triggered the update\"}},\"FundsQueueRefilled(address,uint256,uint256)\":{\"params\":{\"keeper\":\"The address of the keeper who initiated the queue refill\",\"newBalance\":\"The new balance after refilling\",\"prevBalance\":\"The previous balance before refilling\"}},\"MinFundsQueueBalanceUpdated(address,uint256)\":{\"params\":{\"keeper\":\"The address of the keeper who updated the minimum balance\",\"newBalance\":\"The new minimum balance\"}},\"QueuedFundsCommitted(address,uint256,uint256)\":{\"params\":{\"keeper\":\"The address of the keeper who committed the funds\",\"newBalance\":\"The new balance after committing funds\",\"prevBalance\":\"The previous balance before committing funds\"}},\"Rebalanced(address,(address,address,uint256)[])\":{\"params\":{\"keeper\":\"The address of the keeper who initiated the rebalance\",\"rebalances\":\"An array of RebalanceData structs detailing the rebalance operations\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"addArk(address)\":{\"params\":{\"ark\":\"The address of the new Ark\"}},\"addArks(address[])\":{\"params\":{\"arks\":\"Array of ark addresses\"}},\"adjustBuffer((address,address,uint256)[])\":{\"details\":\"RebalanceData struct contains:      - fromArk: The address of the Ark to move assets from (must be buffer Ark for withdrawing from buffer)      - toArk: The address of the Ark to move assets to (must be buffer Ark for depositing to buffer)      - amount: The amount of assets to moveUnlike rebalance, adjustBuffer operations must involve the buffer ArkAll operations in a single adjustBuffer call must be in the same direction (either all to buffer or all from buffer)type(uint256).max is not allowed as an amount for buffer adjustmentsWhen withdrawing from the buffer, the total amount moved cannot reduce the buffer balance below minFundsBufferBalanceThe number of operations in a single adjustBuffer call is limited to MAX_REBALANCE_OPERATIONSAdjustBuffer is subject to a cooldown period between callsOnly callable by accounts with the Keeper role\",\"params\":{\"data\":\"Array of RebalanceData structs\"}},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"arks(uint256)\":{\"params\":{\"index\":\"The index of the ark in the arks array\"},\"returns\":{\"_0\":\"The address of the ark at the specified index\"}},\"asset()\":{\"details\":\"Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"convertToAssets(uint256)\":{\"details\":\"Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"convertToShares(uint256)\":{\"details\":\"Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"deposit(uint256,address)\":{\"details\":\"Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"emergencyShutdown()\":{\"details\":\"This action can only be performed under critical circumstances and typically by governance or a privileged role.\"},\"forceRebalance((address,address,uint256)[])\":{\"details\":\"has no cooldown enforced but only callable by privileged role\",\"params\":{\"data\":\"Array of typed rebalance data struct\"}},\"isArkActive(address)\":{\"params\":{\"ark\":\"The address of the Ark\"},\"returns\":{\"_0\":\"bool Returns true if the ark is active, false otherwise.\"}},\"maxBufferWithdraw(address)\":{\"params\":{\"owner\":\"The address of the owner of the assets\"},\"returns\":{\"_0\":\"uint256 The maximum amount that can be withdrawn.\"}},\"maxDeposit(address)\":{\"details\":\"Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver, through a deposit call. - MUST return a limited value if receiver is subject to some deposit limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited. - MUST NOT revert.\"},\"maxMint(address)\":{\"details\":\"Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call. - MUST return a limited value if receiver is subject to some mint limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted. - MUST NOT revert.\"},\"maxRedeem(address)\":{\"details\":\"Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault, through a redeem call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock. - MUST NOT revert.\"},\"maxWithdraw(address)\":{\"details\":\"Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, through a withdraw call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST NOT revert.\"},\"mint(uint256,address)\":{\"details\":\"Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"previewDeposit(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"previewMint(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting.\"},\"previewRedeem(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the   same transaction. - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the   redemption would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming.\"},\"previewWithdraw(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if   called   in the same transaction. - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though   the withdrawal would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"rebalance((address,address,uint256)[])\":{\"details\":\"RebalanceData struct contains:      - fromArk: The address of the Ark to move assets from      - toArk: The address of the Ark to move assets to      - amount: The amount of assets to moveUsing type(uint256).max as the amount will move all assets from the fromArk to the toArkRebalance operations cannot involve the buffer Ark directlyThe number of operations in a single rebalance call is limited to MAX_REBALANCE_OPERATIONSRebalance is subject to a cooldown period between callsOnly callable by accounts with the Keeper role\",\"params\":{\"data\":\"Array of RebalanceData structs\"}},\"redeem(uint256,address,address)\":{\"details\":\"Burns exactly shares from owner and sends assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   redeem execution, and are accounted for during redeem. - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately.\"},\"redeemFromArks(uint256,address,address)\":{\"params\":{\"owner\":\"The address of the owner of the shares\",\"receiver\":\"The address that will receive the assets\",\"shares\":\"The amount of shares to redeem\"},\"returns\":{\"assets\":\"The amount of assets forcefully withdrawn\"}},\"redeemFromBuffer(uint256,address,address)\":{\"params\":{\"owner\":\"The address of the owner of the shares\",\"receiver\":\"The address that will receive the assets\",\"shares\":\"The amount of shares to redeem\"},\"returns\":{\"assets\":\"The amount of assets redeemed\"}},\"removeArk(address)\":{\"params\":{\"ark\":\"The address of the Ark to remove\"}},\"setArkDepositCap(address,uint256)\":{\"params\":{\"ark\":\"The address of the Ark\",\"newDepositCap\":\"The new deposit cap\"}},\"setArkMaxRebalanceInflow(address,uint256)\":{\"details\":\"Only callable by the governor\",\"params\":{\"ark\":\"The address of the Ark\",\"newMaxRebalanceInflow\":\"The new maxRebalanceInflow value\"}},\"setArkMaxRebalanceOutflow(address,uint256)\":{\"details\":\"Only callable by the governor\",\"params\":{\"ark\":\"The address of the Ark\",\"newMaxRebalanceOutflow\":\"The new maxRebalanceOutflow value\"}},\"setFleetDepositCap(uint256)\":{\"params\":{\"newDepositCap\":\"The new deposit cap\"}},\"setMinimumBufferBalance(uint256)\":{\"details\":\"Sets the minimum buffer balance for the fleet commander.\",\"params\":{\"newMinimumBalance\":\"The new minimum buffer balance to be set.\"}},\"setTipJar()\":{\"details\":\"This function sets the tipJar address to the address specified in the configuration manager.\"},\"setTipRate(uint256)\":{\"details\":\"The tip rate is set as a Percentage. Percentages use 18 decimals of precision      For example, for a 5% rate, you'd pass 5 * 1e18 (5 000 000 000 000 000 000)\",\"params\":{\"newTipRate\":\"The new tip rate as a Percentage\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"tip()\":{\"returns\":{\"_0\":\"uint256 The amount of tips accrued\"}},\"totalAssets()\":{\"details\":\"Returns the total amount of the underlying asset that is \\u201cmanaged\\u201d by Vault. - SHOULD include any compounding that occurs from yield. - MUST be inclusive of any fees that are charged against assets in the Vault. - MUST NOT revert.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"updateRebalanceCooldown(uint256)\":{\"params\":{\"newCooldown\":\"The new cooldown period in seconds\"}},\"withdraw(uint256,address,address)\":{\"details\":\"Burns shares from owner and sends exactly assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   withdraw execution, and are accounted for during withdraw. - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately.\"},\"withdrawFromArks(uint256,address,address)\":{\"params\":{\"assets\":\"The amount of assets to forcefully withdraw\",\"owner\":\"The address of the owner of the assets\",\"receiver\":\"The address that will receive the withdrawn assets\"},\"returns\":{\"shares\":\"The amount of shares redeemed\"}},\"withdrawFromBuffer(uint256,address,address)\":{\"params\":{\"assets\":\"The amount of assets to withdraw\",\"owner\":\"The address of the owner of the assets\",\"receiver\":\"The address that will receive the withdrawn assets\"},\"returns\":{\"shares\":\"The amount of shares redeemed\"}}},\"title\":\"IFleetCommander Interface\",\"version\":1},\"userdoc\":{\"events\":{\"ArkAdded(address)\":{\"notice\":\"Emitted when a new Ark is added\"},\"ArkRemoved(address)\":{\"notice\":\"Emitted when an Ark is removed\"},\"DepositCapUpdated(uint256)\":{\"notice\":\"Emitted when the deposit cap is updated\"},\"FeeAddressUpdated(address)\":{\"notice\":\"Emitted when the fee address is updated\"},\"FleetCommanderRedeemedFromArks(address,address,uint256)\":{\"notice\":\"Emitted when funds are redeemed from Arks\"},\"FleetCommanderWithdrawnFromArks(address,address,uint256)\":{\"notice\":\"Emitted when funds are withdrawn from Arks\"},\"FundsBufferBalanceUpdated(address,uint256,uint256)\":{\"notice\":\"Emitted when the funds buffer balance is updated\"},\"FundsQueueRefilled(address,uint256,uint256)\":{\"notice\":\"Emitted when the funds queue is refilled\"},\"MinFundsQueueBalanceUpdated(address,uint256)\":{\"notice\":\"Emitted when the minimum balance of the funds queue is updated\"},\"QueuedFundsCommitted(address,uint256,uint256)\":{\"notice\":\"Emitted when queued funds are committed\"},\"Rebalanced(address,(address,address,uint256)[])\":{\"notice\":\"Emitted when a rebalance operation is completed\"}},\"kind\":\"user\",\"methods\":{\"addArk(address)\":{\"notice\":\"Adds a new Ark\"},\"addArks(address[])\":{\"notice\":\"Adds multiple Arks in a batch\"},\"adjustBuffer((address,address,uint256)[])\":{\"notice\":\"Adjusts the buffer of funds by moving assets between the buffer Ark and other Arks\"},\"arks(uint256)\":{\"notice\":\"Retrieves the ark address at the specified index\"},\"emergencyShutdown()\":{\"notice\":\"Initiates an emergency shutdown of the FleetCommander\"},\"forceRebalance((address,address,uint256)[])\":{\"notice\":\"Forces a rebalance operation\"},\"getArks()\":{\"notice\":\"Retrieves the arks currently linked to fleet\"},\"isArkActive(address)\":{\"notice\":\"Checks if the ark is part of the fleet\"},\"maxBufferWithdraw(address)\":{\"notice\":\"Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, directly from Buffer.\"},\"rebalance((address,address,uint256)[])\":{\"notice\":\"Rebalances the assets across Arks\"},\"redeemFromArks(uint256,address,address)\":{\"notice\":\"Redeems shares for assets from the FleetCommander\"},\"redeemFromBuffer(uint256,address,address)\":{\"notice\":\"Redeems shares for assets directly from the Buffer\"},\"removeArk(address)\":{\"notice\":\"Removes an existing Ark\"},\"setArkDepositCap(address,uint256)\":{\"notice\":\"Sets a new deposit cap for an Ark\"},\"setArkMaxRebalanceInflow(address,uint256)\":{\"notice\":\"Sets the maxRebalanceInflow for an Ark\"},\"setArkMaxRebalanceOutflow(address,uint256)\":{\"notice\":\"Sets the maxRebalanceOutflow for an Ark\"},\"setFleetDepositCap(uint256)\":{\"notice\":\"Sets a new deposit cap for Fleet\"},\"setTipJar()\":{\"notice\":\"Sets a new tip jar address\"},\"setTipRate(uint256)\":{\"notice\":\"Sets a new tip rate\"},\"tip()\":{\"notice\":\"Accrues and distributes tips\"},\"updateRebalanceCooldown(uint256)\":{\"notice\":\"Updates the rebalance cooldown period\"},\"withdrawFromArks(uint256,address,address)\":{\"notice\":\"Forces a withdrawal of assets from the FleetCommander\"},\"withdrawFromBuffer(uint256,address,address)\":{\"notice\":\"Forces a withdrawal of assets directly from the Buffer\"}},\"notice\":\"Interface for the FleetCommander contract, which manages asset allocation across multiple Arks\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IFleetCommander.sol\":\"IFleetCommander\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@pendle/core-v2/contracts/=lib/pendle-core-v2-public/contracts/\",\":@prb/math/=lib/prb-math/\",\":@summerfi/dutch-auction/src/=node_modules/@summerfi/dutch-auction/src/\",\":@summerfi/math-utils/contracts/=node_modules/@summerfi/math-utils/contracts/\",\":@summerfi/percentage-solidity/contracts/=node_modules/@summerfi/percentage-solidity/contracts/\",\":ds-test/=lib/metamorpho/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":metamorpho/=lib/metamorpho/src/\",\":morpho-blue-irm/=lib/metamorpho/lib/morpho-blue-irm/src/\",\":morpho-blue/=lib/metamorpho/lib/morpho-blue/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-next/=lib/openzeppelin-next/\",\":pendle-core-v2-public/=lib/pendle-core-v2-public/contracts/\",\":prb-math/=lib/prb-math/src/\",\":solmate/=lib/metamorpho/lib/morpho-blue-irm/lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x207f64371bc0fcc5be86713aa5da109a870cc3a6da50e93b64ee881e369b593d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://548667cfa76683767c2c610b577f6c2f0675d0ce28f53c3f37b969c84a56b205\",\"dweb:/ipfs/QmUzA1CKC6bDdULuS44wGd7PWBNLiHb6bh7oHwJBDZSLAx\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC4626.sol\":{\"keccak256\":\"0x1837547e04d5fe5334eeb77a345683c22995f1e7aa033020757ddf83a80fc72d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40d6031bc0e6f70edceb4e63fd624fe6be09dc48f5201c7a9078c26e6a9ef95f\",\"dweb:/ipfs/QmPTEBH7dmU3NgE6vtjMy7xEK54as9VHSgf9ojupwnvoke\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"node_modules/@summerfi/percentage-solidity/contracts/Percentage.sol\":{\"keccak256\":\"0x54f57ec54410fb79c95a4658bf9940c78d58fd2c115999658637e3bf563615b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a2fb851e5b8b667a94c43d284b811ce18ad9216204a2b85cf766a37aa3fdb95\",\"dweb:/ipfs/QmXMSNU43TQMYm9YYJzJ9hPoQWmwmX3uby6gPkrDFq9mcm\"]},\"src/events/IArkEvents.sol\":{\"keccak256\":\"0xe48bbd164d42f2674f3830c19fbdbf52e667cec1bb9f92f9a413696b2dca5f66\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ae69435e46f7c7bbc88aba1a7047f8758da959f1d304079299b451f64de3e2b8\",\"dweb:/ipfs/QmWXFkLcRBmcs3f41PWjcj9bM9uMspS4ceqMC9aYi4kqd9\"]},\"src/events/IFleetCommanderEvents.sol\":{\"keccak256\":\"0x12216efb8ac7d1552e7730773b45c1018c3a8dc0071dc462953f46c09b705709\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6acac12d142ebf969855f21eb1ba90f54abf16bdeb1eb2ae5ff74f90fbb53c3b\",\"dweb:/ipfs/QmaYQeohqT8BfpWh3apEGHRFxazaBXdaqBVd2UMgEV7Wou\"]},\"src/interfaces/IArk.sol\":{\"keccak256\":\"0x61dbb6eb724d6cb29a9fba4ecaf56107ce90cc7410d7fa5804eb64f796f55683\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9060b43bdc60832ad15a71243e3dfc47543edd28e4599fbf995aa969700c6ea7\",\"dweb:/ipfs/QmZNQgNHmKHjiJVWSYRRrn9gUzxZ85KxKB1gDS898oFaSU\"]},\"src/interfaces/IArkAccessManaged.sol\":{\"keccak256\":\"0x61fea184089e37e63207c993e53671285318d8bdc80a8b47ccec6d04fe0987ae\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://43611881df27a19bea14011aa101c46070ef971b8b292458d56a9602e74bfcc7\",\"dweb:/ipfs/Qmc67m2wNP34M2n9QDpnDQmvDERJBHvbNd1s4a1GrsPdKF\"]},\"src/interfaces/IFleetCommander.sol\":{\"keccak256\":\"0x73d838e9b0062ee8e98ae67424f2523bf46677ad69a91c87a57ab6168cb1d810\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b7398ffa40e4cad673c03568b992faffa2237cbefc6528b6bf001f93b8c137a4\",\"dweb:/ipfs/QmVULixzaM9VSDkjYuhmL1bhBRohpAryqvAbJ9uRd7qnvZ\"]},\"src/types/ArkTypes.sol\":{\"keccak256\":\"0xe6d0a58ffa812500518e942e38b3a052c8f9bce9db1e7d51c0621d1bc0bed169\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://177c5b3eaed58435703d87cd596237dc3959df9635926fc997b46a80a51a4f55\",\"dweb:/ipfs/QmRsXppqyzYVMTujYksetLfw65ZWodunfiioicmk2qZky7\"]},\"src/types/FleetCommanderTypes.sol\":{\"keccak256\":\"0xcc8b04ad1dd2908f596b426bd339d78e502b6e0b28cbc0efb422261c2870fd43\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4439434f3088c7a0fdac6ccee68bd5641ba802b47d881f920d2eda18e3675fb2\",\"dweb:/ipfs/QmYAmRnNp44t1ngUAq84GZd7CksTj3vGNaGKH8ZwDutg4h\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"spender","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"Approval","anonymous":false},{"inputs":[{"internalType":"address","name":"ark","type":"address","indexed":true}],"type":"event","name":"ArkAdded","anonymous":false},{"inputs":[{"internalType":"address","name":"ark","type":"address","indexed":true}],"type":"event","name":"ArkRemoved","anonymous":false},{"inputs":[{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"uint256","name":"assets","type":"uint256","indexed":false},{"internalType":"uint256","name":"shares","type":"uint256","indexed":false}],"type":"event","name":"Deposit","anonymous":false},{"inputs":[{"internalType":"uint256","name":"newCap","type":"uint256","indexed":false}],"type":"event","name":"DepositCapUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"newAddress","type":"address","indexed":false}],"type":"event","name":"FeeAddressUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"keeper","type":"address","indexed":true},{"internalType":"uint256","name":"totalMoved","type":"uint256","indexed":false}],"type":"event","name":"FleetCommanderBufferAdjusted","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"receiver","type":"address","indexed":false},{"internalType":"uint256","name":"totalRedeemed","type":"uint256","indexed":false}],"type":"event","name":"FleetCommanderRedeemedFromArks","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"receiver","type":"address","indexed":false},{"internalType":"uint256","name":"totalWithdrawn","type":"uint256","indexed":false}],"type":"event","name":"FleetCommanderWithdrawnFromArks","anonymous":false},{"inputs":[{"internalType":"uint256","name":"newBalance","type":"uint256","indexed":false}],"type":"event","name":"FleetCommanderminimumBufferBalanceUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"uint256","name":"prevBalance","type":"uint256","indexed":false},{"internalType":"uint256","name":"newBalance","type":"uint256","indexed":false}],"type":"event","name":"FundsBufferBalanceUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"keeper","type":"address","indexed":true},{"internalType":"uint256","name":"prevBalance","type":"uint256","indexed":false},{"internalType":"uint256","name":"newBalance","type":"uint256","indexed":false}],"type":"event","name":"FundsQueueRefilled","anonymous":false},{"inputs":[{"internalType":"address","name":"keeper","type":"address","indexed":true},{"internalType":"uint256","name":"newBalance","type":"uint256","indexed":false}],"type":"event","name":"MinFundsQueueBalanceUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"keeper","type":"address","indexed":true},{"internalType":"uint256","name":"prevBalance","type":"uint256","indexed":false},{"internalType":"uint256","name":"newBalance","type":"uint256","indexed":false}],"type":"event","name":"QueuedFundsCommitted","anonymous":false},{"inputs":[{"internalType":"address","name":"keeper","type":"address","indexed":true},{"internalType":"struct RebalanceData[]","name":"rebalances","type":"tuple[]","components":[{"internalType":"address","name":"fromArk","type":"address"},{"internalType":"address","name":"toArk","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"indexed":false}],"type":"event","name":"Rebalanced","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"Transfer","anonymous":false},{"inputs":[{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"address","name":"receiver","type":"address","indexed":true},{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"uint256","name":"assets","type":"uint256","indexed":false},{"internalType":"uint256","name":"shares","type":"uint256","indexed":false}],"type":"event","name":"Withdraw","anonymous":false},{"inputs":[{"internalType":"address","name":"ark","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"addArk"},{"inputs":[{"internalType":"address[]","name":"arks","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"addArks"},{"inputs":[{"internalType":"struct RebalanceData[]","name":"data","type":"tuple[]","components":[{"internalType":"address","name":"fromArk","type":"address"},{"internalType":"address","name":"toArk","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"adjustBuffer"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"stateMutability":"view","type":"function","name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"arks","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"asset","outputs":[{"internalType":"address","name":"assetTokenAddress","type":"address"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"config","outputs":[{"internalType":"contract IArk","name":"bufferArk","type":"address"},{"internalType":"uint256","name":"minimumBufferBalance","type":"uint256"},{"internalType":"uint256","name":"depositCap","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function","name":"convertToAssets","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"view","type":"function","name":"convertToShares","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"deposit","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"emergencyShutdown"},{"inputs":[{"internalType":"struct RebalanceData[]","name":"data","type":"tuple[]","components":[{"internalType":"address","name":"fromArk","type":"address"},{"internalType":"address","name":"toArk","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"forceRebalance"},{"inputs":[],"stateMutability":"view","type":"function","name":"getArks","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"address","name":"ark","type":"address"}],"stateMutability":"view","type":"function","name":"isArkActive","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function","name":"maxBufferWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"stateMutability":"view","type":"function","name":"maxDeposit","outputs":[{"internalType":"uint256","name":"maxAssets","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"stateMutability":"view","type":"function","name":"maxMint","outputs":[{"internalType":"uint256","name":"maxShares","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function","name":"maxRedeem","outputs":[{"internalType":"uint256","name":"maxShares","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function","name":"maxWithdraw","outputs":[{"internalType":"uint256","name":"maxAssets","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"mint","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"name","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"view","type":"function","name":"previewDeposit","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function","name":"previewMint","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function","name":"previewRedeem","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"view","type":"function","name":"previewWithdraw","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}]},{"inputs":[{"internalType":"struct RebalanceData[]","name":"data","type":"tuple[]","components":[{"internalType":"address","name":"fromArk","type":"address"},{"internalType":"address","name":"toArk","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"rebalance"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"redeem","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"redeemFromArks","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"redeemFromBuffer","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"ark","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"removeArk"},{"inputs":[{"internalType":"address","name":"ark","type":"address"},{"internalType":"uint256","name":"newDepositCap","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setArkDepositCap"},{"inputs":[{"internalType":"address","name":"ark","type":"address"},{"internalType":"uint256","name":"newMaxRebalanceInflow","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setArkMaxRebalanceInflow"},{"inputs":[{"internalType":"address","name":"ark","type":"address"},{"internalType":"uint256","name":"newMaxRebalanceOutflow","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setArkMaxRebalanceOutflow"},{"inputs":[{"internalType":"uint256","name":"newDepositCap","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setFleetDepositCap"},{"inputs":[{"internalType":"uint256","name":"newMinimumBalance","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setMinimumBufferBalance"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"setTipJar"},{"inputs":[{"internalType":"Percentage","name":"newTipRate","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setTipRate"},{"inputs":[],"stateMutability":"view","type":"function","name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"tip","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalAssets","outputs":[{"internalType":"uint256","name":"totalManagedAssets","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"newCooldown","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"updateRebalanceCooldown"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"withdraw","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"withdrawFromArks","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"withdrawFromBuffer","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"addArk(address)":{"params":{"ark":"The address of the new Ark"}},"addArks(address[])":{"params":{"arks":"Array of ark addresses"}},"adjustBuffer((address,address,uint256)[])":{"details":"RebalanceData struct contains:      - fromArk: The address of the Ark to move assets from (must be buffer Ark for withdrawing from buffer)      - toArk: The address of the Ark to move assets to (must be buffer Ark for depositing to buffer)      - amount: The amount of assets to moveUnlike rebalance, adjustBuffer operations must involve the buffer ArkAll operations in a single adjustBuffer call must be in the same direction (either all to buffer or all from buffer)type(uint256).max is not allowed as an amount for buffer adjustmentsWhen withdrawing from the buffer, the total amount moved cannot reduce the buffer balance below minFundsBufferBalanceThe number of operations in a single adjustBuffer call is limited to MAX_REBALANCE_OPERATIONSAdjustBuffer is subject to a cooldown period between callsOnly callable by accounts with the Keeper role","params":{"data":"Array of RebalanceData structs"}},"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"arks(uint256)":{"params":{"index":"The index of the ark in the arks array"},"returns":{"_0":"The address of the ark at the specified index"}},"asset()":{"details":"Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"convertToAssets(uint256)":{"details":"Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and from."},"convertToShares(uint256)":{"details":"Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and from."},"decimals()":{"details":"Returns the decimals places of the token."},"deposit(uint256,address)":{"details":"Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."},"emergencyShutdown()":{"details":"This action can only be performed under critical circumstances and typically by governance or a privileged role."},"forceRebalance((address,address,uint256)[])":{"details":"has no cooldown enforced but only callable by privileged role","params":{"data":"Array of typed rebalance data struct"}},"isArkActive(address)":{"params":{"ark":"The address of the Ark"},"returns":{"_0":"bool Returns true if the ark is active, false otherwise."}},"maxBufferWithdraw(address)":{"params":{"owner":"The address of the owner of the assets"},"returns":{"_0":"uint256 The maximum amount that can be withdrawn."}},"maxDeposit(address)":{"details":"Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver, through a deposit call. - MUST return a limited value if receiver is subject to some deposit limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited. - MUST NOT revert."},"maxMint(address)":{"details":"Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call. - MUST return a limited value if receiver is subject to some mint limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted. - MUST NOT revert."},"maxRedeem(address)":{"details":"Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault, through a redeem call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock. - MUST NOT revert."},"maxWithdraw(address)":{"details":"Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, through a withdraw call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST NOT revert."},"mint(uint256,address)":{"details":"Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."},"name()":{"details":"Returns the name of the token."},"previewDeposit(uint256)":{"details":"Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing."},"previewMint(uint256)":{"details":"Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting."},"previewRedeem(uint256)":{"details":"Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the   same transaction. - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the   redemption would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming."},"previewWithdraw(uint256)":{"details":"Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if   called   in the same transaction. - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though   the withdrawal would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing."},"rebalance((address,address,uint256)[])":{"details":"RebalanceData struct contains:      - fromArk: The address of the Ark to move assets from      - toArk: The address of the Ark to move assets to      - amount: The amount of assets to moveUsing type(uint256).max as the amount will move all assets from the fromArk to the toArkRebalance operations cannot involve the buffer Ark directlyThe number of operations in a single rebalance call is limited to MAX_REBALANCE_OPERATIONSRebalance is subject to a cooldown period between callsOnly callable by accounts with the Keeper role","params":{"data":"Array of RebalanceData structs"}},"redeem(uint256,address,address)":{"details":"Burns exactly shares from owner and sends assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   redeem execution, and are accounted for during redeem. - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately."},"redeemFromArks(uint256,address,address)":{"params":{"owner":"The address of the owner of the shares","receiver":"The address that will receive the assets","shares":"The amount of shares to redeem"},"returns":{"assets":"The amount of assets forcefully withdrawn"}},"redeemFromBuffer(uint256,address,address)":{"params":{"owner":"The address of the owner of the shares","receiver":"The address that will receive the assets","shares":"The amount of shares to redeem"},"returns":{"assets":"The amount of assets redeemed"}},"removeArk(address)":{"params":{"ark":"The address of the Ark to remove"}},"setArkDepositCap(address,uint256)":{"params":{"ark":"The address of the Ark","newDepositCap":"The new deposit cap"}},"setArkMaxRebalanceInflow(address,uint256)":{"details":"Only callable by the governor","params":{"ark":"The address of the Ark","newMaxRebalanceInflow":"The new maxRebalanceInflow value"}},"setArkMaxRebalanceOutflow(address,uint256)":{"details":"Only callable by the governor","params":{"ark":"The address of the Ark","newMaxRebalanceOutflow":"The new maxRebalanceOutflow value"}},"setFleetDepositCap(uint256)":{"params":{"newDepositCap":"The new deposit cap"}},"setMinimumBufferBalance(uint256)":{"details":"Sets the minimum buffer balance for the fleet commander.","params":{"newMinimumBalance":"The new minimum buffer balance to be set."}},"setTipJar()":{"details":"This function sets the tipJar address to the address specified in the configuration manager."},"setTipRate(uint256)":{"details":"The tip rate is set as a Percentage. Percentages use 18 decimals of precision      For example, for a 5% rate, you'd pass 5 * 1e18 (5 000 000 000 000 000 000)","params":{"newTipRate":"The new tip rate as a Percentage"}},"symbol()":{"details":"Returns the symbol of the token."},"tip()":{"returns":{"_0":"uint256 The amount of tips accrued"}},"totalAssets()":{"details":"Returns the total amount of the underlying asset that is “managed” by Vault. - SHOULD include any compounding that occurs from yield. - MUST be inclusive of any fees that are charged against assets in the Vault. - MUST NOT revert."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"updateRebalanceCooldown(uint256)":{"params":{"newCooldown":"The new cooldown period in seconds"}},"withdraw(uint256,address,address)":{"details":"Burns shares from owner and sends exactly assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   withdraw execution, and are accounted for during withdraw. - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately."},"withdrawFromArks(uint256,address,address)":{"params":{"assets":"The amount of assets to forcefully withdraw","owner":"The address of the owner of the assets","receiver":"The address that will receive the withdrawn assets"},"returns":{"shares":"The amount of shares redeemed"}},"withdrawFromBuffer(uint256,address,address)":{"params":{"assets":"The amount of assets to withdraw","owner":"The address of the owner of the assets","receiver":"The address that will receive the withdrawn assets"},"returns":{"shares":"The amount of shares redeemed"}}},"version":1},"userdoc":{"kind":"user","methods":{"addArk(address)":{"notice":"Adds a new Ark"},"addArks(address[])":{"notice":"Adds multiple Arks in a batch"},"adjustBuffer((address,address,uint256)[])":{"notice":"Adjusts the buffer of funds by moving assets between the buffer Ark and other Arks"},"arks(uint256)":{"notice":"Retrieves the ark address at the specified index"},"emergencyShutdown()":{"notice":"Initiates an emergency shutdown of the FleetCommander"},"forceRebalance((address,address,uint256)[])":{"notice":"Forces a rebalance operation"},"getArks()":{"notice":"Retrieves the arks currently linked to fleet"},"isArkActive(address)":{"notice":"Checks if the ark is part of the fleet"},"maxBufferWithdraw(address)":{"notice":"Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, directly from Buffer."},"rebalance((address,address,uint256)[])":{"notice":"Rebalances the assets across Arks"},"redeemFromArks(uint256,address,address)":{"notice":"Redeems shares for assets from the FleetCommander"},"redeemFromBuffer(uint256,address,address)":{"notice":"Redeems shares for assets directly from the Buffer"},"removeArk(address)":{"notice":"Removes an existing Ark"},"setArkDepositCap(address,uint256)":{"notice":"Sets a new deposit cap for an Ark"},"setArkMaxRebalanceInflow(address,uint256)":{"notice":"Sets the maxRebalanceInflow for an Ark"},"setArkMaxRebalanceOutflow(address,uint256)":{"notice":"Sets the maxRebalanceOutflow for an Ark"},"setFleetDepositCap(uint256)":{"notice":"Sets a new deposit cap for Fleet"},"setTipJar()":{"notice":"Sets a new tip jar address"},"setTipRate(uint256)":{"notice":"Sets a new tip rate"},"tip()":{"notice":"Accrues and distributes tips"},"updateRebalanceCooldown(uint256)":{"notice":"Updates the rebalance cooldown period"},"withdrawFromArks(uint256,address,address)":{"notice":"Forces a withdrawal of assets from the FleetCommander"},"withdrawFromBuffer(uint256,address,address)":{"notice":"Forces a withdrawal of assets directly from the Buffer"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@pendle/core-v2/contracts/=lib/pendle-core-v2-public/contracts/","@prb/math/=lib/prb-math/","@summerfi/dutch-auction/src/=node_modules/@summerfi/dutch-auction/src/","@summerfi/math-utils/contracts/=node_modules/@summerfi/math-utils/contracts/","@summerfi/percentage-solidity/contracts/=node_modules/@summerfi/percentage-solidity/contracts/","ds-test/=lib/metamorpho/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/","metamorpho/=lib/metamorpho/src/","morpho-blue-irm/=lib/metamorpho/lib/morpho-blue-irm/src/","morpho-blue/=lib/metamorpho/lib/morpho-blue/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-next/=lib/openzeppelin-next/","pendle-core-v2-public/=lib/pendle-core-v2-public/contracts/","prb-math/=lib/prb-math/src/","solmate/=lib/metamorpho/lib/morpho-blue-irm/lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IFleetCommander.sol":"IFleetCommander"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol":{"keccak256":"0x207f64371bc0fcc5be86713aa5da109a870cc3a6da50e93b64ee881e369b593d","urls":["bzz-raw://548667cfa76683767c2c610b577f6c2f0675d0ce28f53c3f37b969c84a56b205","dweb:/ipfs/QmUzA1CKC6bDdULuS44wGd7PWBNLiHb6bh7oHwJBDZSLAx"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol":{"keccak256":"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7","urls":["bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f","dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol":{"keccak256":"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80","urls":["bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229","dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70","urls":["bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c","dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC4626.sol":{"keccak256":"0x1837547e04d5fe5334eeb77a345683c22995f1e7aa033020757ddf83a80fc72d","urls":["bzz-raw://40d6031bc0e6f70edceb4e63fd624fe6be09dc48f5201c7a9078c26e6a9ef95f","dweb:/ipfs/QmPTEBH7dmU3NgE6vtjMy7xEK54as9VHSgf9ojupwnvoke"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2","urls":["bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850","dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol":{"keccak256":"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff","urls":["bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d","dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol":{"keccak256":"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386","urls":["bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0","dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721","urls":["bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245","dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d","urls":["bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875","dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"],"license":"MIT"},"node_modules/@summerfi/percentage-solidity/contracts/Percentage.sol":{"keccak256":"0x54f57ec54410fb79c95a4658bf9940c78d58fd2c115999658637e3bf563615b9","urls":["bzz-raw://3a2fb851e5b8b667a94c43d284b811ce18ad9216204a2b85cf766a37aa3fdb95","dweb:/ipfs/QmXMSNU43TQMYm9YYJzJ9hPoQWmwmX3uby6gPkrDFq9mcm"],"license":"MIT"},"src/events/IArkEvents.sol":{"keccak256":"0xe48bbd164d42f2674f3830c19fbdbf52e667cec1bb9f92f9a413696b2dca5f66","urls":["bzz-raw://ae69435e46f7c7bbc88aba1a7047f8758da959f1d304079299b451f64de3e2b8","dweb:/ipfs/QmWXFkLcRBmcs3f41PWjcj9bM9uMspS4ceqMC9aYi4kqd9"],"license":"BUSL-1.1"},"src/events/IFleetCommanderEvents.sol":{"keccak256":"0x12216efb8ac7d1552e7730773b45c1018c3a8dc0071dc462953f46c09b705709","urls":["bzz-raw://6acac12d142ebf969855f21eb1ba90f54abf16bdeb1eb2ae5ff74f90fbb53c3b","dweb:/ipfs/QmaYQeohqT8BfpWh3apEGHRFxazaBXdaqBVd2UMgEV7Wou"],"license":"BUSL-1.1"},"src/interfaces/IArk.sol":{"keccak256":"0x61dbb6eb724d6cb29a9fba4ecaf56107ce90cc7410d7fa5804eb64f796f55683","urls":["bzz-raw://9060b43bdc60832ad15a71243e3dfc47543edd28e4599fbf995aa969700c6ea7","dweb:/ipfs/QmZNQgNHmKHjiJVWSYRRrn9gUzxZ85KxKB1gDS898oFaSU"],"license":"BUSL-1.1"},"src/interfaces/IArkAccessManaged.sol":{"keccak256":"0x61fea184089e37e63207c993e53671285318d8bdc80a8b47ccec6d04fe0987ae","urls":["bzz-raw://43611881df27a19bea14011aa101c46070ef971b8b292458d56a9602e74bfcc7","dweb:/ipfs/Qmc67m2wNP34M2n9QDpnDQmvDERJBHvbNd1s4a1GrsPdKF"],"license":"BUSL-1.1"},"src/interfaces/IFleetCommander.sol":{"keccak256":"0x73d838e9b0062ee8e98ae67424f2523bf46677ad69a91c87a57ab6168cb1d810","urls":["bzz-raw://b7398ffa40e4cad673c03568b992faffa2237cbefc6528b6bf001f93b8c137a4","dweb:/ipfs/QmVULixzaM9VSDkjYuhmL1bhBRohpAryqvAbJ9uRd7qnvZ"],"license":"BUSL-1.1"},"src/types/ArkTypes.sol":{"keccak256":"0xe6d0a58ffa812500518e942e38b3a052c8f9bce9db1e7d51c0621d1bc0bed169","urls":["bzz-raw://177c5b3eaed58435703d87cd596237dc3959df9635926fc997b46a80a51a4f55","dweb:/ipfs/QmRsXppqyzYVMTujYksetLfw65ZWodunfiioicmk2qZky7"],"license":"BUSL-1.1"},"src/types/FleetCommanderTypes.sol":{"keccak256":"0xcc8b04ad1dd2908f596b426bd339d78e502b6e0b28cbc0efb422261c2870fd43","urls":["bzz-raw://4439434f3088c7a0fdac6ccee68bd5641ba802b47d881f920d2eda18e3675fb2","dweb:/ipfs/QmYAmRnNp44t1ngUAq84GZd7CksTj3vGNaGKH8ZwDutg4h"],"license":"BUSL-1.1"}},"version":1},"id":180}