{"abi":[{"type":"function","name":"buyTokens","inputs":[{"name":"ark","type":"address","internalType":"address"},{"name":"rewardToken","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"paymentAmount","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"finalizeAuction","inputs":[{"name":"ark","type":"address","internalType":"address"},{"name":"rewardToken","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getCurrentPrice","inputs":[{"name":"ark","type":"address","internalType":"address"},{"name":"rewardToken","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getHarvestedRewards","inputs":[{"name":"ark","type":"address","internalType":"address"},{"name":"rewardToken","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"harvest","inputs":[{"name":"ark","type":"address","internalType":"address"},{"name":"rewardToken","type":"address","internalType":"address"},{"name":"extraHarvestData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startAuction","inputs":[{"name":"ark","type":"address","internalType":"address"},{"name":"rewardToken","type":"address","internalType":"address"},{"name":"paymentToken","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ArkHarvested","inputs":[{"name":"ark","type":"address","indexed":true,"internalType":"address"},{"name":"rewardToken","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ArkRewardTokenAuctionStarted","inputs":[{"name":"auctionId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"ark","type":"address","indexed":false,"internalType":"address"},{"name":"rewardToken","type":"address","indexed":false,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RewardBoarded","inputs":[{"name":"ark","type":"address","indexed":true,"internalType":"address"},{"name":"fromRewardToken","type":"address","indexed":true,"internalType":"address"},{"name":"toFleetToken","type":"address","indexed":true,"internalType":"address"},{"name":"amountReboarded","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"buyTokens(address,address,uint256)":"dcefa538","finalizeAuction(address,address)":"9b05e3c3","getCurrentPrice(address,address)":"db16a555","getHarvestedRewards(address,address)":"afd44dfe","harvest(address,address,bytes)":"a782a857","startAuction(address,address,address)":"953790b1"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"}],\"name\":\"ArkHarvested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ArkRewardTokenAuctionStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromRewardToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toFleetToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReboarded\",\"type\":\"uint256\"}],\"name\":\"RewardBoarded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"paymentAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"}],\"name\":\"finalizeAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"}],\"name\":\"getCurrentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"}],\"name\":\"getHarvestedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extraHarvestData\",\"type\":\"bytes\"}],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ark\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"}],\"name\":\"startAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This interface defines the core functionality for managing rewards from various Arks.\",\"events\":{\"ArkHarvested(address,address)\":{\"params\":{\"ark\":\"The address of the Ark contract\",\"rewardToken\":\"The address of the harvested reward token\"}},\"ArkRewardTokenAuctionStarted(uint256,address,address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens being auctioned\",\"ark\":\"The address of the Ark contract\",\"auctionId\":\"The unique identifier of the auction\",\"rewardToken\":\"The address of the reward token being auctioned\"}},\"RewardBoarded(address,address,address,uint256)\":{\"params\":{\"amountReboarded\":\"The amount of tokens reboarded\",\"ark\":\"The address of the Ark contract\",\"fromRewardToken\":\"The address of the original reward token\",\"toFleetToken\":\"The address of the token boarded into the Ark\"}}},\"kind\":\"dev\",\"methods\":{\"buyTokens(address,address,uint256)\":{\"details\":\"This function handles the token purchase process in the Dutch auction.\",\"params\":{\"amount\":\"The amount of tokens to purchase.\",\"ark\":\"The address of the Ark contract.\",\"rewardToken\":\"The address of the reward token being auctioned.\"},\"returns\":{\"paymentAmount\":\"The amount of payment tokens required to purchase the specified amount of reward tokens.\"}},\"finalizeAuction(address,address)\":{\"details\":\"This function settles the auction and handles unsold tokens.\",\"params\":{\"ark\":\"The address of the Ark contract.\",\"rewardToken\":\"The address of the reward token that was auctioned.\"}},\"getCurrentPrice(address,address)\":{\"details\":\"Returns the current price of a given asset in terms of the reward token.\",\"params\":{\"ark\":\"The address of the asset.\",\"rewardToken\":\"The address of the reward token.\"},\"returns\":{\"_0\":\"The current price of the asset.\"}},\"getHarvestedRewards(address,address)\":{\"details\":\"This function allows querying the balance of harvested rewards before deciding on further actions.\",\"params\":{\"ark\":\"The address of the Ark contract.\",\"rewardToken\":\"The address of the reward token.\"},\"returns\":{\"_0\":\"The amount of harvested rewards for the specified Ark and token.\"}},\"harvest(address,address,bytes)\":{\"details\":\"This function only collects rewards, storing them in the Raft contract for later use.\",\"params\":{\"ark\":\"The address of the Ark contract to harvest rewards from.\",\"extraHarvestData\":\"Additional data required by a protocol to harvest\",\"rewardToken\":\"The address of the reward token to be harvested.\"}},\"startAuction(address,address,address)\":{\"details\":\"This function initiates the auction process for selling harvested rewards.\",\"params\":{\"ark\":\"The address of the Ark contract.\",\"paymentToken\":\"The address of the token used for payment in the auction.\",\"rewardToken\":\"The address of the reward token to be auctioned.\"}}},\"title\":\"IRaft\",\"version\":1},\"userdoc\":{\"events\":{\"ArkHarvested(address,address)\":{\"notice\":\"Emitted when rewards are harvested from an Ark\"},\"ArkRewardTokenAuctionStarted(uint256,address,address,uint256)\":{\"notice\":\"Emitted when a new auction is started for an Ark's reward token\"},\"RewardBoarded(address,address,address,uint256)\":{\"notice\":\"Emitted when auctioned rewards are boarded back into an Ark\"}},\"kind\":\"user\",\"methods\":{\"buyTokens(address,address,uint256)\":{\"notice\":\"Allows users to buy tokens from an active auction.\"},\"finalizeAuction(address,address)\":{\"notice\":\"Finalizes an auction after its end time has been reached.\"},\"getHarvestedRewards(address,address)\":{\"notice\":\"Retrieves the amount of harvested rewards for a specific Ark and reward token.\"},\"harvest(address,address,bytes)\":{\"notice\":\"Harvests rewards from the specified Ark without auctioning or reinvesting.\"},\"startAuction(address,address,address)\":{\"notice\":\"Starts a Dutch auction for the harvested rewards of a specific Ark and reward token.\"}},\"notice\":\"Interface for the Raft contract which manages harvesting, auctioning, and reinvesting of rewards.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IRaft.sol\":\"IRaft\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@pendle/core-v2/contracts/=lib/pendle-core-v2-public/contracts/\",\":@prb/math/=lib/prb-math/\",\":@summerfi/dutch-auction/src/=node_modules/@summerfi/dutch-auction/src/\",\":@summerfi/math-utils/contracts/=node_modules/@summerfi/math-utils/contracts/\",\":@summerfi/percentage-solidity/contracts/=node_modules/@summerfi/percentage-solidity/contracts/\",\":ds-test/=lib/metamorpho/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":metamorpho/=lib/metamorpho/src/\",\":morpho-blue-irm/=lib/metamorpho/lib/morpho-blue-irm/src/\",\":morpho-blue/=lib/metamorpho/lib/morpho-blue/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-next/=lib/openzeppelin-next/\",\":pendle-core-v2-public/=lib/pendle-core-v2-public/contracts/\",\":prb-math/=lib/prb-math/src/\",\":solmate/=lib/metamorpho/lib/morpho-blue-irm/lib/solmate/src/\"]},\"sources\":{\"src/events/IRaftEvents.sol\":{\"keccak256\":\"0x692738bb001b497c3a62384a447926ba38bae40bfb14daafe83cda18511033e1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://dfcfc2f8e672ac6a482e3362e69e379788a48302bc5f69c3b004f74a759058fb\",\"dweb:/ipfs/QmbnRdhpUueLfbtR9qszWh5TzR5hrCkV7pMf1E9n3yhCBg\"]},\"src/interfaces/IRaft.sol\":{\"keccak256\":\"0x3ebbfb68a557247d89ec5fb3c9ce375c5fa09bfd8652995bdb6211e0f150dfb6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d525debb3094feae7c14607f8098b9f043f49aaf30cbc9c1b1f5fc5005a585b5\",\"dweb:/ipfs/QmPjs6g2dcirkekVRRCQDAfYMFDe1eac8pN6sseCAbFHVP\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"ark","type":"address","indexed":true},{"internalType":"address","name":"rewardToken","type":"address","indexed":true}],"type":"event","name":"ArkHarvested","anonymous":false},{"inputs":[{"internalType":"uint256","name":"auctionId","type":"uint256","indexed":false},{"internalType":"address","name":"ark","type":"address","indexed":false},{"internalType":"address","name":"rewardToken","type":"address","indexed":false},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"ArkRewardTokenAuctionStarted","anonymous":false},{"inputs":[{"internalType":"address","name":"ark","type":"address","indexed":true},{"internalType":"address","name":"fromRewardToken","type":"address","indexed":true},{"internalType":"address","name":"toFleetToken","type":"address","indexed":true},{"internalType":"uint256","name":"amountReboarded","type":"uint256","indexed":false}],"type":"event","name":"RewardBoarded","anonymous":false},{"inputs":[{"internalType":"address","name":"ark","type":"address"},{"internalType":"address","name":"rewardToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"buyTokens","outputs":[{"internalType":"uint256","name":"paymentAmount","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"ark","type":"address"},{"internalType":"address","name":"rewardToken","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"finalizeAuction"},{"inputs":[{"internalType":"address","name":"ark","type":"address"},{"internalType":"address","name":"rewardToken","type":"address"}],"stateMutability":"view","type":"function","name":"getCurrentPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"ark","type":"address"},{"internalType":"address","name":"rewardToken","type":"address"}],"stateMutability":"view","type":"function","name":"getHarvestedRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"ark","type":"address"},{"internalType":"address","name":"rewardToken","type":"address"},{"internalType":"bytes","name":"extraHarvestData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"harvest"},{"inputs":[{"internalType":"address","name":"ark","type":"address"},{"internalType":"address","name":"rewardToken","type":"address"},{"internalType":"address","name":"paymentToken","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startAuction"}],"devdoc":{"kind":"dev","methods":{"buyTokens(address,address,uint256)":{"details":"This function handles the token purchase process in the Dutch auction.","params":{"amount":"The amount of tokens to purchase.","ark":"The address of the Ark contract.","rewardToken":"The address of the reward token being auctioned."},"returns":{"paymentAmount":"The amount of payment tokens required to purchase the specified amount of reward tokens."}},"finalizeAuction(address,address)":{"details":"This function settles the auction and handles unsold tokens.","params":{"ark":"The address of the Ark contract.","rewardToken":"The address of the reward token that was auctioned."}},"getCurrentPrice(address,address)":{"details":"Returns the current price of a given asset in terms of the reward token.","params":{"ark":"The address of the asset.","rewardToken":"The address of the reward token."},"returns":{"_0":"The current price of the asset."}},"getHarvestedRewards(address,address)":{"details":"This function allows querying the balance of harvested rewards before deciding on further actions.","params":{"ark":"The address of the Ark contract.","rewardToken":"The address of the reward token."},"returns":{"_0":"The amount of harvested rewards for the specified Ark and token."}},"harvest(address,address,bytes)":{"details":"This function only collects rewards, storing them in the Raft contract for later use.","params":{"ark":"The address of the Ark contract to harvest rewards from.","extraHarvestData":"Additional data required by a protocol to harvest","rewardToken":"The address of the reward token to be harvested."}},"startAuction(address,address,address)":{"details":"This function initiates the auction process for selling harvested rewards.","params":{"ark":"The address of the Ark contract.","paymentToken":"The address of the token used for payment in the auction.","rewardToken":"The address of the reward token to be auctioned."}}},"version":1},"userdoc":{"kind":"user","methods":{"buyTokens(address,address,uint256)":{"notice":"Allows users to buy tokens from an active auction."},"finalizeAuction(address,address)":{"notice":"Finalizes an auction after its end time has been reached."},"getHarvestedRewards(address,address)":{"notice":"Retrieves the amount of harvested rewards for a specific Ark and reward token."},"harvest(address,address,bytes)":{"notice":"Harvests rewards from the specified Ark without auctioning or reinvesting."},"startAuction(address,address,address)":{"notice":"Starts a Dutch auction for the harvested rewards of a specific Ark and reward token."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@pendle/core-v2/contracts/=lib/pendle-core-v2-public/contracts/","@prb/math/=lib/prb-math/","@summerfi/dutch-auction/src/=node_modules/@summerfi/dutch-auction/src/","@summerfi/math-utils/contracts/=node_modules/@summerfi/math-utils/contracts/","@summerfi/percentage-solidity/contracts/=node_modules/@summerfi/percentage-solidity/contracts/","ds-test/=lib/metamorpho/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/","metamorpho/=lib/metamorpho/src/","morpho-blue-irm/=lib/metamorpho/lib/morpho-blue-irm/src/","morpho-blue/=lib/metamorpho/lib/morpho-blue/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-next/=lib/openzeppelin-next/","pendle-core-v2-public/=lib/pendle-core-v2-public/contracts/","prb-math/=lib/prb-math/src/","solmate/=lib/metamorpho/lib/morpho-blue-irm/lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IRaft.sol":"IRaft"},"evmVersion":"cancun","libraries":{}},"sources":{"src/events/IRaftEvents.sol":{"keccak256":"0x692738bb001b497c3a62384a447926ba38bae40bfb14daafe83cda18511033e1","urls":["bzz-raw://dfcfc2f8e672ac6a482e3362e69e379788a48302bc5f69c3b004f74a759058fb","dweb:/ipfs/QmbnRdhpUueLfbtR9qszWh5TzR5hrCkV7pMf1E9n3yhCBg"],"license":"BUSL-1.1"},"src/interfaces/IRaft.sol":{"keccak256":"0x3ebbfb68a557247d89ec5fb3c9ce375c5fa09bfd8652995bdb6211e0f150dfb6","urls":["bzz-raw://d525debb3094feae7c14607f8098b9f043f49aaf30cbc9c1b1f5fc5005a585b5","dweb:/ipfs/QmPjs6g2dcirkekVRRCQDAfYMFDe1eac8pN6sseCAbFHVP"],"license":"BUSL-1.1"}},"version":1},"id":183}