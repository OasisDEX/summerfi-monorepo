{"abi":[{"type":"function","name":"getCooldown","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getLastActionTimestamp","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getCooldown()":"218e4a15","getLastActionTimestamp()":"3152d5d1"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getCooldown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastActionTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:see\":\"ICooldownEnforcer\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"The last action timestamp is set to the current block timestamp if enforceFromNow is true,      otherwise it is set to 0 signaling that the cooldown period has not started yet.\",\"params\":{\"cooldown_\":\"The cooldown period in seconds.\",\"enforceFromNow\":\"If true, the last action timestamp is set to the current block timestamp.\"}}},\"title\":\"CooldownEnforcer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Initializes the cooldown period and sets the last action timestamp to the current block timestamp         if required\"},\"getCooldown()\":{\"notice\":\"Returns the cooldown period in seoonds.\"},\"getLastActionTimestamp()\":{\"notice\":\"Returns the timestamp of the last action in Epoch time (block timestamp).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/utils/CooldownEnforcer/CooldownEnforcer.sol\":\"CooldownEnforcer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":metamorpho/=lib/metamorpho/src/\",\":morpho-blue-irm/=lib/metamorpho/lib/morpho-blue-irm/src/\",\":morpho-blue/=lib/metamorpho/lib/morpho-blue/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/metamorpho/lib/morpho-blue-irm/lib/solmate/src/\"]},\"sources\":{\"src/utils/CooldownEnforcer/CooldownEnforcer.sol\":{\"keccak256\":\"0x04afe37db19983473a2e6b82268992e81e275d008ea14f0146f47c7b1dd1f13f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://44bc8e951e8b3336590b345455695696b6ae8e1294decb5160eb0fc199dfd5ea\",\"dweb:/ipfs/QmanFsP9kCbJZ6udHMRhuAfpW6vPfCgMTmMi92f2BJwHZ6\"]},\"src/utils/CooldownEnforcer/ICooldownEnforcer.sol\":{\"keccak256\":\"0x1dce40e0929fcd3b3130d931f3c9bef33d8fc0b6e7474bb7a9a6b80f85c72c37\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://737c872a4f86476f4fca14851b51307cec5f103df25a3bc1f00a3f530d584067\",\"dweb:/ipfs/QmcWsQTu2QqdL2fowGmZifbbsCVZMF2BzKeQP7C3BkiM7g\"]},\"src/utils/CooldownEnforcer/ICooldownEnforcerErrors.sol\":{\"keccak256\":\"0x846bbf3d9dd0b7910e4107cda688bb8625d260fee80e27a7abece22424691c85\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ccd4f6cc1f9111c65edbcc7da42a50299d71bc94e59f8914b318243e85e38c04\",\"dweb:/ipfs/QmPUuEH3PbvJ1TKge9mfv4ws1ikPHMFYLzxtPr2JWSBkzE\"]},\"src/utils/CooldownEnforcer/ICooldownEnforcerEvents.sol\":{\"keccak256\":\"0xeedc7b4ebdad9db04a8c436172ada8c5b78556ea4538eeba0983c57eb9fd2b17\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8d2c365854b6c1bb3bc7e0ed7cd3f395896aa60cb8cf6de3b49e94215f4bad1b\",\"dweb:/ipfs/QmbxSopRDot9PQmrQiFiRfhUCzLY21hvrwaWJKLaqknPdj\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"getCooldown","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getLastActionTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"constructor":{"details":"The last action timestamp is set to the current block timestamp if enforceFromNow is true,      otherwise it is set to 0 signaling that the cooldown period has not started yet.","params":{"cooldown_":"The cooldown period in seconds.","enforceFromNow":"If true, the last action timestamp is set to the current block timestamp."}}},"version":1},"userdoc":{"kind":"user","methods":{"constructor":{"notice":"Initializes the cooldown period and sets the last action timestamp to the current block timestamp         if required"},"getCooldown()":{"notice":"Returns the cooldown period in seoonds."},"getLastActionTimestamp()":{"notice":"Returns the timestamp of the last action in Epoch time (block timestamp)."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","metamorpho/=lib/metamorpho/src/","morpho-blue-irm/=lib/metamorpho/lib/morpho-blue-irm/src/","morpho-blue/=lib/metamorpho/lib/morpho-blue/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solmate/=lib/metamorpho/lib/morpho-blue-irm/lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/utils/CooldownEnforcer/CooldownEnforcer.sol":"CooldownEnforcer"},"evmVersion":"cancun","libraries":{}},"sources":{"src/utils/CooldownEnforcer/CooldownEnforcer.sol":{"keccak256":"0x04afe37db19983473a2e6b82268992e81e275d008ea14f0146f47c7b1dd1f13f","urls":["bzz-raw://44bc8e951e8b3336590b345455695696b6ae8e1294decb5160eb0fc199dfd5ea","dweb:/ipfs/QmanFsP9kCbJZ6udHMRhuAfpW6vPfCgMTmMi92f2BJwHZ6"],"license":"BUSL-1.1"},"src/utils/CooldownEnforcer/ICooldownEnforcer.sol":{"keccak256":"0x1dce40e0929fcd3b3130d931f3c9bef33d8fc0b6e7474bb7a9a6b80f85c72c37","urls":["bzz-raw://737c872a4f86476f4fca14851b51307cec5f103df25a3bc1f00a3f530d584067","dweb:/ipfs/QmcWsQTu2QqdL2fowGmZifbbsCVZMF2BzKeQP7C3BkiM7g"],"license":"BUSL-1.1"},"src/utils/CooldownEnforcer/ICooldownEnforcerErrors.sol":{"keccak256":"0x846bbf3d9dd0b7910e4107cda688bb8625d260fee80e27a7abece22424691c85","urls":["bzz-raw://ccd4f6cc1f9111c65edbcc7da42a50299d71bc94e59f8914b318243e85e38c04","dweb:/ipfs/QmPUuEH3PbvJ1TKge9mfv4ws1ikPHMFYLzxtPr2JWSBkzE"],"license":"BUSL-1.1"},"src/utils/CooldownEnforcer/ICooldownEnforcerEvents.sol":{"keccak256":"0xeedc7b4ebdad9db04a8c436172ada8c5b78556ea4538eeba0983c57eb9fd2b17","urls":["bzz-raw://8d2c365854b6c1bb3bc7e0ed7cd3f395896aa60cb8cf6de3b49e94215f4bad1b","dweb:/ipfs/QmbxSopRDot9PQmrQiFiRfhUCzLY21hvrwaWJKLaqknPdj"],"license":"BUSL-1.1"}},"version":1},"id":112}