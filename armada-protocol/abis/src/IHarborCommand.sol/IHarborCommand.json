{"abi":[{"type":"function","name":"activeFleetCommanders","inputs":[{"name":"_fleetCommander","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"decommissionFleetCommander","inputs":[{"name":"_fleetCommander","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"enlistFleetCommander","inputs":[{"name":"_fleetCommander","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fleetCommandersList","inputs":[{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getActiveFleetCommanders","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"error","name":"FleetCommanderAlreadyEnlisted","inputs":[{"name":"fleetCommander","type":"address","internalType":"address"}]},{"type":"error","name":"FleetCommanderNotEnlisted","inputs":[{"name":"fleetCommander","type":"address","internalType":"address"}]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"activeFleetCommanders(address)":"e9d00d56","decommissionFleetCommander(address)":"b912d58c","enlistFleetCommander(address)":"588b97c7","fleetCommandersList(uint256)":"8e3d5693","getActiveFleetCommanders()":"ab4ba0f7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fleetCommander\",\"type\":\"address\"}],\"name\":\"FleetCommanderAlreadyEnlisted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fleetCommander\",\"type\":\"address\"}],\"name\":\"FleetCommanderNotEnlisted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fleetCommander\",\"type\":\"address\"}],\"name\":\"activeFleetCommanders\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fleetCommander\",\"type\":\"address\"}],\"name\":\"decommissionFleetCommander\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fleetCommander\",\"type\":\"address\"}],\"name\":\"enlistFleetCommander\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"fleetCommandersList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveFleetCommanders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This interface defines the external functions and events for HarborCommand\",\"errors\":{\"FleetCommanderAlreadyEnlisted(address)\":[{\"params\":{\"fleetCommander\":\"The address of the FleetCommander that was attempted to be enlisted\"}}],\"FleetCommanderNotEnlisted(address)\":[{\"params\":{\"fleetCommander\":\"The address of the FleetCommander that was attempted to be decommissioned\"}}]},\"kind\":\"dev\",\"methods\":{\"activeFleetCommanders(address)\":{\"params\":{\"_fleetCommander\":\"The address of the FleetCommander to check\"},\"returns\":{\"_0\":\"bool True if the FleetCommander is active, false otherwise\"}},\"decommissionFleetCommander(address)\":{\"custom:error\":\"FleetCommanderNotEnlisted Thrown if the FleetCommander is not enlisted\",\"details\":\"Only callable by the governor\",\"params\":{\"_fleetCommander\":\"The address of the FleetCommander to decommission\"}},\"enlistFleetCommander(address)\":{\"custom:error\":\"FleetCommanderAlreadyEnlisted Thrown if the FleetCommander is already enlisted\",\"details\":\"Only callable by the governor\",\"params\":{\"_fleetCommander\":\"The address of the FleetCommander to enlist\"}},\"fleetCommandersList(uint256)\":{\"params\":{\"index\":\"The index in the list of FleetCommanders\"},\"returns\":{\"_0\":\"The address of the FleetCommander at the specified index\"}},\"getActiveFleetCommanders()\":{\"returns\":{\"_0\":\"An array of addresses representing the active FleetCommanders\"}}},\"title\":\"IHarborCommand\",\"version\":1},\"userdoc\":{\"errors\":{\"FleetCommanderAlreadyEnlisted(address)\":[{\"notice\":\"Thrown when attempting to enlist a FleetCommander that is already enlisted\"}],\"FleetCommanderNotEnlisted(address)\":[{\"notice\":\"Thrown when attempting to decommission a FleetCommander that is not currently enlisted\"}]},\"kind\":\"user\",\"methods\":{\"activeFleetCommanders(address)\":{\"notice\":\"Checks if a FleetCommander is currently active\"},\"decommissionFleetCommander(address)\":{\"notice\":\"Decommissions an enlisted FleetCommander\"},\"enlistFleetCommander(address)\":{\"notice\":\"Enlists a new FleetCommander\"},\"fleetCommandersList(uint256)\":{\"notice\":\"Retrieves the FleetCommander at a specific index in the list\"},\"getActiveFleetCommanders()\":{\"notice\":\"Retrieves the list of active FleetCommanders\"}},\"notice\":\"Interface for the HarborCommand contract which manages FleetCommanders and TipJar\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IHarborCommand.sol\":\"IHarborCommand\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@layerzerolabs/=node_modules/@summerfi/dependencies/node_modules/@layerzerolabs/\",\":@openzeppelin-next/=node_modules/@summerfi/dependencies/lib/openzeppelin-next/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@summerfi/dependencies/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/\",\":@pendle/core-v2/contracts/=node_modules/@summerfi/dependencies/lib/pendle-core-v2-public/contracts/\",\":@prb/math/=node_modules/@summerfi/dependencies/lib/prb-math/\",\":@summerfi/access-contracts/=node_modules/@summerfi/access-contracts/src/\",\":@summerfi/constants/=node_modules/@summerfi/constants/src/\",\":@summerfi/dependencies/=node_modules/@summerfi/dependencies/lib/\",\":@summerfi/dutch-auction/=node_modules/@summerfi/dutch-auction/src/\",\":@summerfi/earn-gov-contracts/=node_modules/@summerfi/earn-gov-contracts/src/\",\":@summerfi/math-utils/contracts/=node_modules/@summerfi/math-utils/contracts/\",\":@summerfi/percentage-solidity/contracts/=node_modules/@summerfi/percentage-solidity/contracts/\",\":@summerfi/protocol-interfaces/=node_modules/@summerfi/protocol-interfaces/src/\",\":@summerfi/rewards-contracts/=node_modules/@summerfi/rewards-contracts/src/\",\":@summerfi/voting-decay/=node_modules/@summerfi/voting-decay/src/\",\":ds-test/=lib/metamorpho/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/metamorpho/lib/erc4626-tests/\",\":forge-std/=node_modules/@summerfi/dependencies/lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":metamorpho/=node_modules/@summerfi/dependencies/lib/metamorpho/src/\",\":morpho-blue-irm/=lib/metamorpho/lib/morpho-blue-irm/src/\",\":morpho-blue/=node_modules/@summerfi/dependencies/lib/metamorpho/lib/morpho-blue/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":pendle-core-v2-public/=lib/pendle-core-v2-public/contracts/\",\":prb-math/=lib/prb-math/src/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\",\":solmate/=lib/metamorpho/lib/morpho-blue-irm/lib/solmate/src/\"]},\"sources\":{\"src/errors/IHarborCommandErrors.sol\":{\"keccak256\":\"0x34a9dd4ddd3fdfed499028993240a58a2fb20e1f7d11d61dc198c36ae9936b69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a8a7b56b50566ca4ebba9fc30159a6e8600c7bc852358ee77969ad358e2d44e\",\"dweb:/ipfs/QmWfT7Qt7TbvYkDJRY2beNVy2cMdtD59QvYveLcxyXBqT4\"]},\"src/interfaces/IHarborCommand.sol\":{\"keccak256\":\"0x9a70742373460c816f64f1ffec1a12efbc743d4f82696ec776fb6dc87edbaca6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e34dd1a2bae75552765ef0b121e81fd411902db3d9865e757b2362e295598b5a\",\"dweb:/ipfs/QmVH7KqipvfY4D6UjF3KPptELzG5m4pCGSDdBHVCRQ35sJ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"fleetCommander","type":"address"}],"type":"error","name":"FleetCommanderAlreadyEnlisted"},{"inputs":[{"internalType":"address","name":"fleetCommander","type":"address"}],"type":"error","name":"FleetCommanderNotEnlisted"},{"inputs":[{"internalType":"address","name":"_fleetCommander","type":"address"}],"stateMutability":"view","type":"function","name":"activeFleetCommanders","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"_fleetCommander","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"decommissionFleetCommander"},{"inputs":[{"internalType":"address","name":"_fleetCommander","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"enlistFleetCommander"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"fleetCommandersList","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getActiveFleetCommanders","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]}],"devdoc":{"kind":"dev","methods":{"activeFleetCommanders(address)":{"params":{"_fleetCommander":"The address of the FleetCommander to check"},"returns":{"_0":"bool True if the FleetCommander is active, false otherwise"}},"decommissionFleetCommander(address)":{"custom:error":"FleetCommanderNotEnlisted Thrown if the FleetCommander is not enlisted","details":"Only callable by the governor","params":{"_fleetCommander":"The address of the FleetCommander to decommission"}},"enlistFleetCommander(address)":{"custom:error":"FleetCommanderAlreadyEnlisted Thrown if the FleetCommander is already enlisted","details":"Only callable by the governor","params":{"_fleetCommander":"The address of the FleetCommander to enlist"}},"fleetCommandersList(uint256)":{"params":{"index":"The index in the list of FleetCommanders"},"returns":{"_0":"The address of the FleetCommander at the specified index"}},"getActiveFleetCommanders()":{"returns":{"_0":"An array of addresses representing the active FleetCommanders"}}},"version":1},"userdoc":{"kind":"user","methods":{"activeFleetCommanders(address)":{"notice":"Checks if a FleetCommander is currently active"},"decommissionFleetCommander(address)":{"notice":"Decommissions an enlisted FleetCommander"},"enlistFleetCommander(address)":{"notice":"Enlists a new FleetCommander"},"fleetCommandersList(uint256)":{"notice":"Retrieves the FleetCommander at a specific index in the list"},"getActiveFleetCommanders()":{"notice":"Retrieves the list of active FleetCommanders"}},"version":1}},"settings":{"remappings":["@layerzerolabs/=node_modules/@summerfi/dependencies/node_modules/@layerzerolabs/","@openzeppelin-next/=node_modules/@summerfi/dependencies/lib/openzeppelin-next/","@openzeppelin/contracts-upgradeable/=node_modules/@summerfi/dependencies/lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/","@pendle/core-v2/contracts/=node_modules/@summerfi/dependencies/lib/pendle-core-v2-public/contracts/","@prb/math/=node_modules/@summerfi/dependencies/lib/prb-math/","@summerfi/access-contracts/=node_modules/@summerfi/access-contracts/src/","@summerfi/constants/=node_modules/@summerfi/constants/src/","@summerfi/dependencies/=node_modules/@summerfi/dependencies/lib/","@summerfi/dutch-auction/=node_modules/@summerfi/dutch-auction/src/","@summerfi/earn-gov-contracts/=node_modules/@summerfi/earn-gov-contracts/src/","@summerfi/math-utils/contracts/=node_modules/@summerfi/math-utils/contracts/","@summerfi/percentage-solidity/contracts/=node_modules/@summerfi/percentage-solidity/contracts/","@summerfi/protocol-interfaces/=node_modules/@summerfi/protocol-interfaces/src/","@summerfi/rewards-contracts/=node_modules/@summerfi/rewards-contracts/src/","@summerfi/voting-decay/=node_modules/@summerfi/voting-decay/src/","ds-test/=lib/metamorpho/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/metamorpho/lib/erc4626-tests/","forge-std/=node_modules/@summerfi/dependencies/lib/forge-std/src/","hardhat/=node_modules/hardhat/","metamorpho/=node_modules/@summerfi/dependencies/lib/metamorpho/src/","morpho-blue-irm/=lib/metamorpho/lib/morpho-blue-irm/src/","morpho-blue/=node_modules/@summerfi/dependencies/lib/metamorpho/lib/morpho-blue/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","pendle-core-v2-public/=lib/pendle-core-v2-public/contracts/","prb-math/=lib/prb-math/src/","solidity-bytes-utils/=node_modules/solidity-bytes-utils/","solmate/=lib/metamorpho/lib/morpho-blue-irm/lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IHarborCommand.sol":"IHarborCommand"},"evmVersion":"cancun","libraries":{}},"sources":{"src/errors/IHarborCommandErrors.sol":{"keccak256":"0x34a9dd4ddd3fdfed499028993240a58a2fb20e1f7d11d61dc198c36ae9936b69","urls":["bzz-raw://5a8a7b56b50566ca4ebba9fc30159a6e8600c7bc852358ee77969ad358e2d44e","dweb:/ipfs/QmWfT7Qt7TbvYkDJRY2beNVy2cMdtD59QvYveLcxyXBqT4"],"license":"MIT"},"src/interfaces/IHarborCommand.sol":{"keccak256":"0x9a70742373460c816f64f1ffec1a12efbc743d4f82696ec776fb6dc87edbaca6","urls":["bzz-raw://e34dd1a2bae75552765ef0b121e81fd411902db3d9865e757b2362e295598b5a","dweb:/ipfs/QmVH7KqipvfY4D6UjF3KPptELzG5m4pCGSDdBHVCRQ35sJ"],"license":"BUSL-1.1"}},"version":1},"id":253}