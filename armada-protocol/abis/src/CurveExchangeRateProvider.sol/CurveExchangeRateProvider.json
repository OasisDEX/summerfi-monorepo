{"abi":[{"type":"constructor","inputs":[{"name":"_curveSwap","type":"address","internalType":"address"},{"name":"_baseToken","type":"address","internalType":"address"},{"name":"_lowerPercentageRange","type":"uint256","internalType":"Percentage"},{"name":"_upperPercentageRange","type":"uint256","internalType":"Percentage"},{"name":"_basePrice","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"basePrice","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"baseToken","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"curveSwap","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract ICurveSwap"}],"stateMutability":"view"},{"type":"function","name":"getExchangeRate","inputs":[],"outputs":[{"name":"price","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getExchangeRateEma","inputs":[],"outputs":[{"name":"price","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getLowerBound","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getSafeExchangeRate","inputs":[],"outputs":[{"name":"price","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getSafeExchangeRateEma","inputs":[],"outputs":[{"name":"price","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getUpperBound","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"lowerPercentageRange","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"Percentage"}],"stateMutability":"view"},{"type":"function","name":"upperPercentageRange","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"Percentage"}],"stateMutability":"view"},{"type":"event","name":"BasePriceUpdated","inputs":[{"name":"basePrice","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"EmaRangeUpdated","inputs":[{"name":"lowerPercentageRange","type":"uint256","indexed":false,"internalType":"Percentage"},{"name":"upperPercentageRange","type":"uint256","indexed":false,"internalType":"Percentage"}],"anonymous":false},{"type":"error","name":"EmaRangeTooHigh","inputs":[{"name":"emaRange","type":"uint256","internalType":"Percentage"}]},{"type":"error","name":"InvalidBaseToken","inputs":[{"name":"baseToken","type":"address","internalType":"address"}]}],"bytecode":{"object":"0x608060405234801561000f575f5ffd5b5060405161089a38038061089a83398101604081905261002e91610197565b82828261003b83836100ba565b6002555050600380546001600160a01b0319166001600160a01b0387811691909117909155841661008f5760405163dbea379360e01b81526001600160a01b03851660048201526024015b60405180910390fd5b5050600480546001600160a01b0319166001600160a01b039390931692909217909155506103019050565b6100da826100ca6012600a6102d8565b6100d59060646102ea565b610172565b156100fb5760405163da02d69560e01b815260048101839052602401610086565b61010b816100ca6012600a6102d8565b1561012c5760405163da02d69560e01b815260048101829052602401610086565b5f829055600181905560408051838152602081018390527f8168a7fb0f1fff0693e7681fbfd2a2dbfe563344325f1db3a88498c76a6efeeb910160405180910390a15050565b8082115b92915050565b80516001600160a01b0381168114610192575f5ffd5b919050565b5f5f5f5f5f60a086880312156101ab575f5ffd5b6101b48661017c565b94506101c26020870161017c565b6040870151606088015160809098015196999198509695945092505050565b634e487b7160e01b5f52601160045260245ffd5b6001815b600184111561023057808504811115610214576102146101e1565b600184161561022257908102905b60019390931c9280026101f9565b935093915050565b5f8261024657506001610176565b8161025257505f610176565b816001811461026857600281146102725761028e565b6001915050610176565b60ff841115610283576102836101e1565b50506001821b610176565b5060208310610133831016604e8410600b84101617156102b1575081810a610176565b6102bd5f1984846101f5565b805f19048211156102d0576102d06101e1565b029392505050565b5f6102e38383610238565b9392505050565b8082028115828204841417610176576101766101e1565b61058c8061030e5f395ff3fe608060405234801561000f575f5ffd5b50600436106100a6575f3560e01c8063ba3f4fb21161006e578063ba3f4fb2146100e5578063c55dae63146100ee578063c7876ea414610119578063d70ec14a14610122578063d8fca1ac1461012a578063e6aa216c1461013d575f5ffd5b80631de0f095146100aa57806322c180b5146100c55780634318a726146100cd578063955c7bc0146100d5578063a968a776146100dd575b5f5ffd5b6100b2610145565b6040519081526020015b60405180910390f35b6100b2610159565b6100b2610171565b6100b2610208565b6100b25f5481565b6100b260015481565b600454610101906001600160a01b031681565b6040516001600160a01b0390911681526020016100bc565b6100b260025481565b6100b261021c565b600354610101906001600160a01b031681565b6100b2610225565b5f805460025461015491610256565b905090565b5f61015460015460025461028990919063ffffffff16565b6003546040516390d2083760e01b81525f60048201819052916001600160a01b0316906390d20837906024015b602060405180830381865afa1580156101b9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101dd91906103b4565b90506101e76102ae565b1561020557610154816ec097ce7bc90715b34b9f10000000006103df565b90565b5f610211610225565b905061015481610335565b5f610211610171565b600354604051631c98d5a960e11b81525f60048201819052916001600160a01b031690633931ab529060240161019e565b5f6102808361027b61026a6012600a6104e1565b6102759060646104ec565b85610372565b61037d565b90505b92915050565b5f6102808361027b61029d6012600a6104e1565b6102a89060646104ec565b856103a9565b6004805460035460405163c661065760e01b81526001938101939093525f926001600160a01b03928316929091169063c661065790602401602060405180830381865afa158015610301573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103259190610503565b6001600160a01b03161415905090565b5f5f61033f610145565b90505f61034a610159565b90508184101561035b575092915050565b8084111561036a579392505050565b509192915050565b5f6102808284610530565b5f61038a6012600a6104e1565b6103959060646104ec565b61039f83856104ec565b61028091906103df565b5f6102808284610543565b5f602082840312156103c4575f5ffd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b5f826103f957634e487b7160e01b5f52601260045260245ffd5b500490565b6001815b60018411156104395780850481111561041d5761041d6103cb565b600184161561042b57908102905b60019390931c928002610402565b935093915050565b5f8261044f57506001610283565b8161045b57505f610283565b8160018114610471576002811461047b57610497565b6001915050610283565b60ff84111561048c5761048c6103cb565b50506001821b610283565b5060208310610133831016604e8410600b84101617156104ba575081810a610283565b6104c65f1984846103fe565b805f19048211156104d9576104d96103cb565b029392505050565b5f6102808383610441565b8082028115828204841417610283576102836103cb565b5f60208284031215610513575f5ffd5b81516001600160a01b0381168114610529575f5ffd5b9392505050565b81810381811115610283576102836103cb565b80820180821115610283576102836103cb56fea2646970667358221220af9cc5ee9cce33d08dfb64edecfe59d3fec5e828b33cd80a1ac19397db42208c64736f6c634300081c0033","sourceMap":"1097:3650:276:-:0;;;1546:505;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1774:21;1809;1844:10;2398:58:277;1774:21:276;1809;2398:12:277;:58::i;:::-;2466:9;:22;-1:-1:-1;;1879:9:276::1;:34:::0;;-1:-1:-1;;;;;;1879:34:276::1;-1:-1:-1::0;;;;;1879:34:276;;::::1;::::0;;;::::1;::::0;;;1927:24;::::1;1923:90;;1974:28;::::0;-1:-1:-1;;;1974:28:276;;-1:-1:-1;;;;;1057:32:331;;1974:28:276::1;::::0;::::1;1039:51:331::0;1012:18;;1974:28:276::1;;;;;;;;1923:90;-1:-1:-1::0;;2022:9:276::1;:22:::0;;-1:-1:-1;;;;;;2022:22:276::1;-1:-1:-1::0;;;;;2022:22:276;;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;1097:3650:276;;-1:-1:-1;1097:3650:276;3736:566:277;3879:38;:21;1284:25:178;1071:2;1284;:25;:::i;:::-;1494:23;;:3;:23;:::i;:::-;3879:38:277;:::i;:::-;3875:114;;;3940:38;;-1:-1:-1;;;3940:38:277;;;;;3007:25:331;;;2980:18;;3940:38:277;2829:209:331;3875:114:277;4002:38;:21;1284:25:178;1071:2;1284;:25;:::i;4002:38:277:-;3998:114;;;4063:38;;-1:-1:-1;;;4063:38:277;;;;;3007:25:331;;;2980:18;;4063:38:277;2829:209:331;3998:114:277;4121:20;:44;;;4175:20;:44;;;4234:61;;;3281:25:331;;;3337:2;3322:18;;3315:34;;;4234:61:277;;3254:18:331;4234:61:277;;;;;;;3736:566;;:::o;4379:128:178:-;4461:43;;;4379:128;;;;;:::o;14:177:331:-;93:13;;-1:-1:-1;;;;;135:31:331;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:692::-;366:6;374;382;390;398;451:3;439:9;430:7;426:23;422:33;419:53;;;468:1;465;458:12;419:53;491:40;521:9;491:40;:::i;:::-;481:50;;550:49;595:2;584:9;580:18;550:49;:::i;:::-;661:2;646:18;;640:25;755:2;740:18;;734:25;851:3;836:19;;;830:26;196:692;;540:59;;-1:-1:-1;640:25:331;734;830:26;-1:-1:-1;196:692:331;-1:-1:-1;;;196:692:331:o;1101:127::-;1162:10;1157:3;1153:20;1150:1;1143:31;1193:4;1190:1;1183:15;1217:4;1214:1;1207:15;1233:375;1321:1;1339:5;1353:249;1374:1;1364:8;1361:15;1353:249;;;1424:4;1419:3;1415:14;1409:4;1406:24;1403:50;;;1433:18;;:::i;:::-;1483:1;1473:8;1469:16;1466:49;;;1497:16;;;;1466:49;1580:1;1576:16;;;;;1536:15;;1353:249;;;1233:375;;;;;;:::o;1613:902::-;1662:5;1692:8;1682:80;;-1:-1:-1;1733:1:331;1747:5;;1682:80;1781:4;1771:76;;-1:-1:-1;1818:1:331;1832:5;;1771:76;1863:4;1881:1;1876:59;;;;1949:1;1944:174;;;;1856:262;;1876:59;1906:1;1897:10;;1920:5;;;1944:174;1981:3;1971:8;1968:17;1965:43;;;1988:18;;:::i;:::-;-1:-1:-1;;2044:1:331;2030:16;;2103:5;;1856:262;;2202:2;2192:8;2189:16;2183:3;2177:4;2174:13;2170:36;2164:2;2154:8;2151:16;2146:2;2140:4;2137:12;2133:35;2130:77;2127:203;;;-1:-1:-1;2239:19:331;;;2315:5;;2127:203;2362:42;-1:-1:-1;;2387:8:331;2381:4;2362:42;:::i;:::-;2440:6;2436:1;2432:6;2428:19;2419:7;2416:32;2413:58;;;2451:18;;:::i;:::-;2489:20;;1613:902;-1:-1:-1;;;1613:902:331:o;2520:131::-;2580:5;2609:36;2636:8;2630:4;2609:36;:::i;:::-;2600:45;2520:131;-1:-1:-1;;;2520:131:331:o;2656:168::-;2729:9;;;2760;;2777:15;;;2771:22;;2757:37;2747:71;;2798:18;;:::i;3043:312::-;1097:3650:276;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561000f575f5ffd5b50600436106100a6575f3560e01c8063ba3f4fb21161006e578063ba3f4fb2146100e5578063c55dae63146100ee578063c7876ea414610119578063d70ec14a14610122578063d8fca1ac1461012a578063e6aa216c1461013d575f5ffd5b80631de0f095146100aa57806322c180b5146100c55780634318a726146100cd578063955c7bc0146100d5578063a968a776146100dd575b5f5ffd5b6100b2610145565b6040519081526020015b60405180910390f35b6100b2610159565b6100b2610171565b6100b2610208565b6100b25f5481565b6100b260015481565b600454610101906001600160a01b031681565b6040516001600160a01b0390911681526020016100bc565b6100b260025481565b6100b261021c565b600354610101906001600160a01b031681565b6100b2610225565b5f805460025461015491610256565b905090565b5f61015460015460025461028990919063ffffffff16565b6003546040516390d2083760e01b81525f60048201819052916001600160a01b0316906390d20837906024015b602060405180830381865afa1580156101b9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101dd91906103b4565b90506101e76102ae565b1561020557610154816ec097ce7bc90715b34b9f10000000006103df565b90565b5f610211610225565b905061015481610335565b5f610211610171565b600354604051631c98d5a960e11b81525f60048201819052916001600160a01b031690633931ab529060240161019e565b5f6102808361027b61026a6012600a6104e1565b6102759060646104ec565b85610372565b61037d565b90505b92915050565b5f6102808361027b61029d6012600a6104e1565b6102a89060646104ec565b856103a9565b6004805460035460405163c661065760e01b81526001938101939093525f926001600160a01b03928316929091169063c661065790602401602060405180830381865afa158015610301573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103259190610503565b6001600160a01b03161415905090565b5f5f61033f610145565b90505f61034a610159565b90508184101561035b575092915050565b8084111561036a579392505050565b509192915050565b5f6102808284610530565b5f61038a6012600a6104e1565b6103959060646104ec565b61039f83856104ec565b61028091906103df565b5f6102808284610543565b5f602082840312156103c4575f5ffd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b5f826103f957634e487b7160e01b5f52601260045260245ffd5b500490565b6001815b60018411156104395780850481111561041d5761041d6103cb565b600184161561042b57908102905b60019390931c928002610402565b935093915050565b5f8261044f57506001610283565b8161045b57505f610283565b8160018114610471576002811461047b57610497565b6001915050610283565b60ff84111561048c5761048c6103cb565b50506001821b610283565b5060208310610133831016604e8410600b84101617156104ba575081810a610283565b6104c65f1984846103fe565b805f19048211156104d9576104d96103cb565b029392505050565b5f6102808383610441565b8082028115828204841417610283576102836103cb565b5f60208284031215610513575f5ffd5b81516001600160a01b0381168114610529575f5ffd5b9392505050565b81810381811115610283576102836103cb565b80820180821115610283576102836103cb56fea2646970667358221220af9cc5ee9cce33d08dfb64edecfe59d3fec5e828b33cd80a1ac19397db42208c64736f6c634300081c0033","sourceMap":"1097:3650:276:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3032:137:277;;;:::i;:::-;;;160:25:331;;;148:2;133:18;3032:137:277;;;;;;;;3322:132;;;:::i;2738:209:276:-;;;:::i;3209:148::-;;;:::i;1196:38:277:-;;;;;;1240;;;;;;1343:24:276;;;;;-1:-1:-1;;;;;1343:24:276;;;;;;-1:-1:-1;;;;;574:32:331;;;556:51;;544:2;529:18;1343:24:276;410:203:331;1338:24:277;;;;;;3624:154:276;;;:::i;1248:27::-;;;;;-1:-1:-1;;;;;1248:27:276;;;2274:207;;;:::i;3032:137:277:-;3086:7;3141:20;;3112:9;;:50;;:28;:50::i;:::-;3105:57;;3032:137;:::o;3322:132::-;3376:7;3402:45;3426:20;;3402:9;;:23;;:45;;;;:::i;2738:209:276:-;2831:9;;:22;;-1:-1:-1;;;2831:22:276;;2798:13;2831:22;;;160:25:331;;;2798:13:276;-1:-1:-1;;;;;2831:9:276;;:19;;133:18:331;;2831:22:276;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2823:30;;2867:27;:25;:27::i;:::-;2863:78;;;2918:12;2925:5;2918:4;:12;:::i;2863:78::-;2738:209;:::o;3209:148::-;3261:13;3294:17;:15;:17::i;:::-;3286:25;;3329:21;3344:5;3329:14;:21::i;3624:154::-;3679:13;3712:20;:18;:20::i;2274:207::-;2364:9;;:23;;-1:-1:-1;;;2364:23:276;;2331:13;2364:23;;;160:25:331;;;2331:13:276;-1:-1:-1;;;;;2364:9:276;;:20;;133:18:331;;2364:23:276;14:177:331;1449:197:179;1561:7;1587:52;1603:6;1611:27;1284:25:178;1071:2;1284;:25;:::i;:::-;1494:23;;:3;:23;:::i;:::-;1628:10:179;1611:27;:::i;:::-;1587:15;:52::i;:::-;1580:59;;1449:197;;;;;:::o;862:192::-;969:7;995:52;1011:6;1019:27;1284:25:178;1071:2;1284;:25;:::i;:::-;1494:23;;:3;:23;:::i;:::-;1036:10:179;1019:27;:::i;4624:121:276:-;4729:9;;;4707;;:18;;-1:-1:-1;;;4707:18:276;;4729:9;4707:18;;;160:25:331;;;;4684:4:276;;-1:-1:-1;;;;;4729:9:276;;;;4707;;;;:15;;133:18:331;;4707::276;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4707:31:276;;;4700:38;;4624:121;:::o;4019:362::-;4104:7;4123:18;4144:15;:13;:15::i;:::-;4123:36;;4169:18;4190:15;:13;:15::i;:::-;4169:36;;4227:10;4219:5;:18;4215:138;;;-1:-1:-1;4260:10:276;4019:362;-1:-1:-1;;4019:362:276:o;4215:138::-;4299:10;4291:5;:18;4287:66;;;4332:10;4019:362;-1:-1:-1;;;4019:362:276:o;4287:66::-;-1:-1:-1;4369:5:276;;4019:362;-1:-1:-1;;4019:362:276:o;2078:148:178:-;2138:10;2179:43;2220:1;2197;2179:43;:::i;2020:242:179:-;2129:7;1284:25:178;1071:2;1284;:25;:::i;:::-;1494:23;;:3;:23;:::i;:::-;2168:38:179;2195:10;2168:6;:38;:::i;:::-;2167:88;;;;:::i;1720:143:178:-;1775:10;1816:43;1857:1;1834;1816:43;:::i;1036:184:331:-;1106:6;1159:2;1147:9;1138:7;1134:23;1130:32;1127:52;;;1175:1;1172;1165:12;1127:52;-1:-1:-1;1198:16:331;;1036:184;-1:-1:-1;1036:184:331:o;1225:127::-;1286:10;1281:3;1277:20;1274:1;1267:31;1317:4;1314:1;1307:15;1341:4;1338:1;1331:15;1357:217;1397:1;1423;1413:132;;1467:10;1462:3;1458:20;1455:1;1448:31;1502:4;1499:1;1492:15;1530:4;1527:1;1520:15;1413:132;-1:-1:-1;1559:9:331;;1357:217::o;1579:375::-;1667:1;1685:5;1699:249;1720:1;1710:8;1707:15;1699:249;;;1770:4;1765:3;1761:14;1755:4;1752:24;1749:50;;;1779:18;;:::i;:::-;1829:1;1819:8;1815:16;1812:49;;;1843:16;;;;1812:49;1926:1;1922:16;;;;;1882:15;;1699:249;;;1579:375;;;;;;:::o;1959:902::-;2008:5;2038:8;2028:80;;-1:-1:-1;2079:1:331;2093:5;;2028:80;2127:4;2117:76;;-1:-1:-1;2164:1:331;2178:5;;2117:76;2209:4;2227:1;2222:59;;;;2295:1;2290:174;;;;2202:262;;2222:59;2252:1;2243:10;;2266:5;;;2290:174;2327:3;2317:8;2314:17;2311:43;;;2334:18;;:::i;:::-;-1:-1:-1;;2390:1:331;2376:16;;2449:5;;2202:262;;2548:2;2538:8;2535:16;2529:3;2523:4;2520:13;2516:36;2510:2;2500:8;2497:16;2492:2;2486:4;2483:12;2479:35;2476:77;2473:203;;;-1:-1:-1;2585:19:331;;;2661:5;;2473:203;2708:42;-1:-1:-1;;2733:8:331;2727:4;2708:42;:::i;:::-;2786:6;2782:1;2778:6;2774:19;2765:7;2762:32;2759:58;;;2797:18;;:::i;:::-;2835:20;;1959:902;-1:-1:-1;;;1959:902:331:o;2866:131::-;2926:5;2955:36;2982:8;2976:4;2955:36;:::i;3002:168::-;3075:9;;;3106;;3123:15;;;3117:22;;3103:37;3093:71;;3144:18;;:::i;3365:290::-;3435:6;3488:2;3476:9;3467:7;3463:23;3459:32;3456:52;;;3504:1;3501;3494:12;3456:52;3530:16;;-1:-1:-1;;;;;3575:31:331;;3565:42;;3555:70;;3621:1;3618;3611:12;3555:70;3644:5;3365:290;-1:-1:-1;;;3365:290:331:o;3660:128::-;3727:9;;;3748:11;;;3745:37;;;3762:18;;:::i;3793:125::-;3858:9;;;3879:10;;;3876:36;;;3892:18;;:::i","linkReferences":{}},"methodIdentifiers":{"basePrice()":"c7876ea4","baseToken()":"c55dae63","curveSwap()":"d8fca1ac","getExchangeRate()":"e6aa216c","getExchangeRateEma()":"4318a726","getLowerBound()":"1de0f095","getSafeExchangeRate()":"955c7bc0","getSafeExchangeRateEma()":"d70ec14a","getUpperBound()":"22c180b5","lowerPercentageRange()":"a968a776","upperPercentageRange()":"ba3f4fb2"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_curveSwap\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_baseToken\",\"type\":\"address\"},{\"internalType\":\"Percentage\",\"name\":\"_lowerPercentageRange\",\"type\":\"uint256\"},{\"internalType\":\"Percentage\",\"name\":\"_upperPercentageRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_basePrice\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"Percentage\",\"name\":\"emaRange\",\"type\":\"uint256\"}],\"name\":\"EmaRangeTooHigh\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"}],\"name\":\"InvalidBaseToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"basePrice\",\"type\":\"uint256\"}],\"name\":\"BasePriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"Percentage\",\"name\":\"lowerPercentageRange\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"Percentage\",\"name\":\"upperPercentageRange\",\"type\":\"uint256\"}],\"name\":\"EmaRangeUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"basePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curveSwap\",\"outputs\":[{\"internalType\":\"contract ICurveSwap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExchangeRateEma\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLowerBound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSafeExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSafeExchangeRateEma\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUpperBound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lowerPercentageRange\",\"outputs\":[{\"internalType\":\"Percentage\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upperPercentageRange\",\"outputs\":[{\"internalType\":\"Percentage\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Exchange rate provider specifically designed for Curve swap pools. This contract extends ExchangeRateProviderBase to work with Curve's liquidity pools, providing exchange rate functionality tailored for Curve's unique pricing mechanism. It interacts directly with a Curve swap pool to fetch and process price data. Key features: - Fetches and processes price data from Curve swap pools - Applies EMA range smoothing to Curve prices - Handles potential rate inversion based on token order in the pool - Maintains consistency with the base ExchangeRateProvider interface By leveraging Curve's popularity and efficiency in stablecoin swaps, this provider offers reliable and accurate exchange rates. The design allows it to work with any Curve pool, regardless of token order, enhancing its flexibility and reusability across different setups.\",\"errors\":{\"EmaRangeTooHigh(uint256)\":[{\"params\":{\"emaRange\":\"The invalid EMA range value\"}}],\"InvalidBaseToken(address)\":[{\"params\":{\"baseToken\":\"The invalid base token address\"}}]},\"events\":{\"BasePriceUpdated(uint256)\":{\"params\":{\"basePrice\":\"The new base price value\"}},\"EmaRangeUpdated(uint256,uint256)\":{\"params\":{\"lowerPercentageRange\":\"The new lower EMA range value\",\"upperPercentageRange\":\"The new upper EMA range value\"}}},\"kind\":\"dev\",\"methods\":{\"getExchangeRate()\":{\"details\":\"Retrieves the last price from the Curve pool and inverts if necessary\",\"returns\":{\"price\":\"The current exchange rate\"}},\"getExchangeRateEma()\":{\"details\":\"Retrieves the EMA price from the Curve pool and inverts if necessary\",\"returns\":{\"price\":\"The EMA of the exchange rate\"}},\"getLowerBound()\":{\"returns\":{\"_0\":\"The lower bound of the exchange rate\"}},\"getSafeExchangeRate()\":{\"details\":\"Retrieves the last price from the Curve pool, inverts if necessary, and applies EMA range\",\"returns\":{\"price\":\"The current exchange rate with EMA range applied\"}},\"getSafeExchangeRateEma()\":{\"details\":\"Retrieves the EMA price from the Curve pool, inverts if necessary, and applies EMA range\",\"returns\":{\"price\":\"The EMA of the exchange rate with EMA range applied\"}},\"getUpperBound()\":{\"returns\":{\"_0\":\"The upper bound of the exchange rate\"}}},\"title\":\"CurveExchangeRateProvider\",\"version\":1},\"userdoc\":{\"errors\":{\"EmaRangeTooHigh(uint256)\":[{\"notice\":\"Error thrown when the provided EMA range is too high\"}],\"InvalidBaseToken(address)\":[{\"notice\":\"Error thrown when an invalid base token is provided\"}]},\"events\":{\"BasePriceUpdated(uint256)\":{\"notice\":\"Emitted when the base price is updated\"},\"EmaRangeUpdated(uint256,uint256)\":{\"notice\":\"Emitted when the EMA range is updated\"}},\"kind\":\"user\",\"methods\":{\"basePrice()\":{\"notice\":\"The base price for the exchange rate\"},\"baseToken()\":{\"notice\":\"The base token address for the exchange rate\"},\"curveSwap()\":{\"notice\":\"The Curve swap pool interface\"},\"getExchangeRate()\":{\"notice\":\"Get the current exchange rate without applying EMA range\"},\"getExchangeRateEma()\":{\"notice\":\"Get the EMA (Exponential Moving Average) of the exchange rate without applying EMA range\"},\"getLowerBound()\":{\"notice\":\"Get the lower bound of the exchange rate based on the EMA range\"},\"getSafeExchangeRate()\":{\"notice\":\"Get the current exchange rate with EMA range applied\"},\"getSafeExchangeRateEma()\":{\"notice\":\"Get the EMA of the exchange rate with EMA range applied\"},\"getUpperBound()\":{\"notice\":\"Get the upper bound of the exchange rate based on the EMA range\"},\"lowerPercentageRange()\":{\"notice\":\"The EMA (Exponential Moving Average) range for price smoothing\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/utils/exchangeRateProvider/CurveExchangeRateProvider.sol\":\"CurveExchangeRateProvider\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@layerzerolabs/=node_modules/@summerfi/dependencies/node_modules/@layerzerolabs/\",\":@openzeppelin-next/=node_modules/@summerfi/dependencies/lib/openzeppelin-next/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@summerfi/dependencies/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/\",\":@pendle/core-v2/contracts/=node_modules/@summerfi/dependencies/lib/pendle-core-v2-public/contracts/\",\":@prb/math/=node_modules/@summerfi/dependencies/lib/prb-math/\",\":@summerfi/access-contracts/=node_modules/@summerfi/access-contracts/src/\",\":@summerfi/constants/=node_modules/@summerfi/constants/src/\",\":@summerfi/dependencies/=node_modules/@summerfi/dependencies/lib/\",\":@summerfi/dutch-auction/=node_modules/@summerfi/dutch-auction/src/\",\":@summerfi/earn-gov-contracts/=node_modules/@summerfi/earn-gov-contracts/src/\",\":@summerfi/math-utils/contracts/=node_modules/@summerfi/math-utils/contracts/\",\":@summerfi/percentage-solidity/contracts/=node_modules/@summerfi/percentage-solidity/contracts/\",\":@summerfi/protocol-interfaces/=node_modules/@summerfi/protocol-interfaces/src/\",\":@summerfi/rewards-contracts/=node_modules/@summerfi/rewards-contracts/src/\",\":@summerfi/voting-decay/=node_modules/@summerfi/voting-decay/src/\",\":ds-test/=lib/metamorpho/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/metamorpho/lib/erc4626-tests/\",\":forge-std/=node_modules/@summerfi/dependencies/lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":metamorpho/=node_modules/@summerfi/dependencies/lib/metamorpho/src/\",\":morpho-blue-irm/=lib/metamorpho/lib/morpho-blue-irm/src/\",\":morpho-blue/=node_modules/@summerfi/dependencies/lib/metamorpho/lib/morpho-blue/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":pendle-core-v2-public/=lib/pendle-core-v2-public/contracts/\",\":prb-math/=lib/prb-math/src/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\",\":solmate/=lib/metamorpho/lib/morpho-blue-irm/lib/solmate/src/\"]},\"sources\":{\"node_modules/@summerfi/percentage-solidity/contracts/Percentage.sol\":{\"keccak256\":\"0x7c3cd1d63bbf27068d2670b2f56802f74cec5af98b0d5bf8fb380ec03ce0d74f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21c797aa6bb45e3b06b368cc520c682dea0d60be9f7e99011cec5b8130946760\",\"dweb:/ipfs/QmQN8LDhwMa4EC8VRZKae6eBH7Q9kkhKmfNyszGGQUiaXa\"]},\"node_modules/@summerfi/percentage-solidity/contracts/PercentageUtils.sol\":{\"keccak256\":\"0xdc217b41f13467d67ddaafb381ae9002e956ca2dc8cd1c94082b6e8a1a0e548f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fee2ea6c9883053b41c257294f0a2a058b1a37ee746b5c1952e3edcf2229f417\",\"dweb:/ipfs/QmQjPKRr9nvruuePMMgCzy9SN8ava2tRFxMjH1KraLy5Ra\"]},\"src/interfaces/curve/ICurveSwap.sol\":{\"keccak256\":\"0xf0ddec4b46dbba43b37a13b8ce87e9c3456975ed6ba2df78dce8e45280ad4300\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b446da9fdc2325af738d5cc4486ec1bb5364ef35114fa551dd4cd356c4ff6b2\",\"dweb:/ipfs/QmQaN3KjzyhrZN2wxcPLE8rLsMMseyGEsRFh67snej68N5\"]},\"src/utils/exchangeRateProvider/CurveExchangeRateProvider.sol\":{\"keccak256\":\"0x48cda7eb60153b3dbe0c604a95142cc4b86fdb72a019ca64e257eb54346e5915\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ffe60ec30ce2fbf0dfd6b0d2d663f339d64a53a470079040ddcb8690b49b4e0a\",\"dweb:/ipfs/QmPGtQQwMKHfMzLHUj8DqufL9bcxsF8MckUyGkFxbhYPaM\"]},\"src/utils/exchangeRateProvider/ExchangeRateProviderBase.sol\":{\"keccak256\":\"0x3f818ab9cd1dd1f665611ddd04ae22c310118f2c30adb7a5361909362ad10276\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4c1cf4a880271b941f900c5fa124586376a91ff9adb287511e3869073bc463b9\",\"dweb:/ipfs/QmNWbMQVVGCJMgP3SFhNDPYjdiYiua9oNuTu8QTwiaTnAK\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_curveSwap","type":"address"},{"internalType":"address","name":"_baseToken","type":"address"},{"internalType":"Percentage","name":"_lowerPercentageRange","type":"uint256"},{"internalType":"Percentage","name":"_upperPercentageRange","type":"uint256"},{"internalType":"uint256","name":"_basePrice","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"Percentage","name":"emaRange","type":"uint256"}],"type":"error","name":"EmaRangeTooHigh"},{"inputs":[{"internalType":"address","name":"baseToken","type":"address"}],"type":"error","name":"InvalidBaseToken"},{"inputs":[{"internalType":"uint256","name":"basePrice","type":"uint256","indexed":false}],"type":"event","name":"BasePriceUpdated","anonymous":false},{"inputs":[{"internalType":"Percentage","name":"lowerPercentageRange","type":"uint256","indexed":false},{"internalType":"Percentage","name":"upperPercentageRange","type":"uint256","indexed":false}],"type":"event","name":"EmaRangeUpdated","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"basePrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"baseToken","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"curveSwap","outputs":[{"internalType":"contract ICurveSwap","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getExchangeRate","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getExchangeRateEma","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getLowerBound","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getSafeExchangeRate","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getSafeExchangeRateEma","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getUpperBound","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"lowerPercentageRange","outputs":[{"internalType":"Percentage","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"upperPercentageRange","outputs":[{"internalType":"Percentage","name":"","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"getExchangeRate()":{"details":"Retrieves the last price from the Curve pool and inverts if necessary","returns":{"price":"The current exchange rate"}},"getExchangeRateEma()":{"details":"Retrieves the EMA price from the Curve pool and inverts if necessary","returns":{"price":"The EMA of the exchange rate"}},"getLowerBound()":{"returns":{"_0":"The lower bound of the exchange rate"}},"getSafeExchangeRate()":{"details":"Retrieves the last price from the Curve pool, inverts if necessary, and applies EMA range","returns":{"price":"The current exchange rate with EMA range applied"}},"getSafeExchangeRateEma()":{"details":"Retrieves the EMA price from the Curve pool, inverts if necessary, and applies EMA range","returns":{"price":"The EMA of the exchange rate with EMA range applied"}},"getUpperBound()":{"returns":{"_0":"The upper bound of the exchange rate"}}},"version":1},"userdoc":{"kind":"user","methods":{"basePrice()":{"notice":"The base price for the exchange rate"},"baseToken()":{"notice":"The base token address for the exchange rate"},"curveSwap()":{"notice":"The Curve swap pool interface"},"getExchangeRate()":{"notice":"Get the current exchange rate without applying EMA range"},"getExchangeRateEma()":{"notice":"Get the EMA (Exponential Moving Average) of the exchange rate without applying EMA range"},"getLowerBound()":{"notice":"Get the lower bound of the exchange rate based on the EMA range"},"getSafeExchangeRate()":{"notice":"Get the current exchange rate with EMA range applied"},"getSafeExchangeRateEma()":{"notice":"Get the EMA of the exchange rate with EMA range applied"},"getUpperBound()":{"notice":"Get the upper bound of the exchange rate based on the EMA range"},"lowerPercentageRange()":{"notice":"The EMA (Exponential Moving Average) range for price smoothing"}},"version":1}},"settings":{"remappings":["@layerzerolabs/=node_modules/@summerfi/dependencies/node_modules/@layerzerolabs/","@openzeppelin-next/=node_modules/@summerfi/dependencies/lib/openzeppelin-next/","@openzeppelin/contracts-upgradeable/=node_modules/@summerfi/dependencies/lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=node_modules/@summerfi/dependencies/lib/openzeppelin-contracts/contracts/","@pendle/core-v2/contracts/=node_modules/@summerfi/dependencies/lib/pendle-core-v2-public/contracts/","@prb/math/=node_modules/@summerfi/dependencies/lib/prb-math/","@summerfi/access-contracts/=node_modules/@summerfi/access-contracts/src/","@summerfi/constants/=node_modules/@summerfi/constants/src/","@summerfi/dependencies/=node_modules/@summerfi/dependencies/lib/","@summerfi/dutch-auction/=node_modules/@summerfi/dutch-auction/src/","@summerfi/earn-gov-contracts/=node_modules/@summerfi/earn-gov-contracts/src/","@summerfi/math-utils/contracts/=node_modules/@summerfi/math-utils/contracts/","@summerfi/percentage-solidity/contracts/=node_modules/@summerfi/percentage-solidity/contracts/","@summerfi/protocol-interfaces/=node_modules/@summerfi/protocol-interfaces/src/","@summerfi/rewards-contracts/=node_modules/@summerfi/rewards-contracts/src/","@summerfi/voting-decay/=node_modules/@summerfi/voting-decay/src/","ds-test/=lib/metamorpho/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/metamorpho/lib/erc4626-tests/","forge-std/=node_modules/@summerfi/dependencies/lib/forge-std/src/","hardhat/=node_modules/hardhat/","metamorpho/=node_modules/@summerfi/dependencies/lib/metamorpho/src/","morpho-blue-irm/=lib/metamorpho/lib/morpho-blue-irm/src/","morpho-blue/=node_modules/@summerfi/dependencies/lib/metamorpho/lib/morpho-blue/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","pendle-core-v2-public/=lib/pendle-core-v2-public/contracts/","prb-math/=lib/prb-math/src/","solidity-bytes-utils/=node_modules/solidity-bytes-utils/","solmate/=lib/metamorpho/lib/morpho-blue-irm/lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/utils/exchangeRateProvider/CurveExchangeRateProvider.sol":"CurveExchangeRateProvider"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@summerfi/percentage-solidity/contracts/Percentage.sol":{"keccak256":"0x7c3cd1d63bbf27068d2670b2f56802f74cec5af98b0d5bf8fb380ec03ce0d74f","urls":["bzz-raw://21c797aa6bb45e3b06b368cc520c682dea0d60be9f7e99011cec5b8130946760","dweb:/ipfs/QmQN8LDhwMa4EC8VRZKae6eBH7Q9kkhKmfNyszGGQUiaXa"],"license":"MIT"},"node_modules/@summerfi/percentage-solidity/contracts/PercentageUtils.sol":{"keccak256":"0xdc217b41f13467d67ddaafb381ae9002e956ca2dc8cd1c94082b6e8a1a0e548f","urls":["bzz-raw://fee2ea6c9883053b41c257294f0a2a058b1a37ee746b5c1952e3edcf2229f417","dweb:/ipfs/QmQjPKRr9nvruuePMMgCzy9SN8ava2tRFxMjH1KraLy5Ra"],"license":"MIT"},"src/interfaces/curve/ICurveSwap.sol":{"keccak256":"0xf0ddec4b46dbba43b37a13b8ce87e9c3456975ed6ba2df78dce8e45280ad4300","urls":["bzz-raw://9b446da9fdc2325af738d5cc4486ec1bb5364ef35114fa551dd4cd356c4ff6b2","dweb:/ipfs/QmQaN3KjzyhrZN2wxcPLE8rLsMMseyGEsRFh67snej68N5"],"license":"MIT"},"src/utils/exchangeRateProvider/CurveExchangeRateProvider.sol":{"keccak256":"0x48cda7eb60153b3dbe0c604a95142cc4b86fdb72a019ca64e257eb54346e5915","urls":["bzz-raw://ffe60ec30ce2fbf0dfd6b0d2d663f339d64a53a470079040ddcb8690b49b4e0a","dweb:/ipfs/QmPGtQQwMKHfMzLHUj8DqufL9bcxsF8MckUyGkFxbhYPaM"],"license":"BUSL-1.1"},"src/utils/exchangeRateProvider/ExchangeRateProviderBase.sol":{"keccak256":"0x3f818ab9cd1dd1f665611ddd04ae22c310118f2c30adb7a5361909362ad10276","urls":["bzz-raw://4c1cf4a880271b941f900c5fa124586376a91ff9adb287511e3869073bc463b9","dweb:/ipfs/QmNWbMQVVGCJMgP3SFhNDPYjdiYiua9oNuTu8QTwiaTnAK"],"license":"BUSL-1.1"}},"version":1},"id":276}