name: CI - Build and Integration Test
on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main
      - dev

jobs:
  build:
    name: Build and Integration Test
    timeout-minutes: 30
    runs-on: ubuntu-latest
    env:
      CONFIG_URL: ${{ secrets.CONFIG_URL }}
      CONFIG_URL_RAYS: ${{ secrets.CONFIG_URL_RAYS }}
      BORROW_DB_READ_CONNECTION_STRING: ${{ secrets.BORROW_DB_READ_CONNECTION_STRING }}
      CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
      CONTENTFUL_PREVIEW_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_PREVIEW_ACCESS_TOKEN }}
      CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
      MIXPANEL_KEY: ${{ secrets.MIXPANEL_KEY }}
      NEXT_PUBLIC_MIXPANEL_KEY: ${{ secrets.NEXT_PUBLIC_MIXPANEL_KEY }}
      SUBGRAPH_BASE: ${{ secrets.SUBGRAPH_BASE }}

    steps:
      - name: Setup workflow
        uses: ./.github/parts/setup

      - name: Setup VPN
        uses: ./.github/parts/vpn

      - name: Setup Apps Cache (1/3)
        uses: ./.github/app-cache/earn-protocol

      - name: Setup Apps Cache (2/3)
        uses: ./.github/app-cache/earn-protocol-landing-page

      - name: Setup Apps Cache (3/3)
        uses: ./.github/app-cache/rays-dashboard

      - name: Install dependencies
        run: pnpm install

        # there was build and prebuild step here, but it was removed
        # because integration tests are dependent on the build step

      - name: Test
        run: pnpm test:integration
        env:
          ONE_INCH_API_KEY: ${{ secrets.ONE_INCH_API_KEY }}
          ONE_INCH_API_VERSION: ${{ secrets.ONE_INCH_API_VERSION }}
          ONE_INCH_API_URL: ${{ secrets.ONE_INCH_API_URL }}
          ONE_INCH_API_SPOT_KEY: ${{ secrets.ONE_INCH_API_SPOT_KEY }}
          ONE_INCH_API_SPOT_VERSION: ${{ secrets.ONE_INCH_API_SPOT_VERSION }}
          ONE_INCH_API_SPOT_URL: ${{ secrets.ONE_INCH_API_SPOT_URL }}
          ONE_INCH_ALLOWED_SWAP_PROTOCOLS: ${{ secrets.ONE_INCH_ALLOWED_SWAP_PROTOCOLS }}
          ONE_INCH_SWAP_CHAIN_IDS: ${{ secrets.ONE_INCH_SWAP_CHAIN_IDS }}
          MAINNET_RPC_URL: ${{ secrets.MAINNET_RPC_URL }}

      - name: Coverage
        run: pnpm coverage:total

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
