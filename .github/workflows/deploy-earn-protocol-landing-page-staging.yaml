name: Deploy Static Earn Protocol Landing Page Staging
on:
  workflow_dispatch:
  push:
    branches:
      - dev

jobs:
  build-earn-protocol-landing-page:
    name: Build and deploy Earn Protocol LP
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
    environment: staging
    env:
      AWS_REGION: eu-central-1
      ENVIRONMENT_TAG: dev
      SERVICE_NAME: summer-fi-earn-lp-service-dev
      CLUSTER_NAME: summer-fi-earn-lp-dev
      CONFIG_URL: ${{ secrets.CONFIG_URL }}
      CONFIG_URL_EARN: ${{ secrets.CONFIG_URL_EARN }}
      CONFIG_URL_RAYS: ${{ secrets.CONFIG_URL_RAYS }}
      EARN_MIXPANEL_KEY: ${{ secrets.EARN_MIXPANEL_KEY }}
      FUNCTIONS_API_URL: ${{ secrets.FUNCTIONS_API_URL }}
      NEXT_PUBLIC_EARN_MIXPANEL_KEY: ${{ secrets.NEXT_PUBLIC_EARN_MIXPANEL_KEY }}
      SUBGRAPH_BASE: ${{ secrets.SUBGRAPH_BASE }}
      NEXT_TELEMETRY_DISABLED: ${{ secrets.NEXT_TELEMETRY_DISABLED }}
      FORECAST_API_URL: ${{ secrets.FORECAST_API_URL }}
      SDK_API_URL: ${{ secrets.SDK_API_URL }}
      NEWSLETTER_API_KEY: ${{ secrets.NEWSLETTER_API_KEY }}
      NEWSLETTER_PUBLICATION_ID: ${{ secrets.NEWSLETTER_PUBLICATION_ID }}
      NEWSLETTER_ENDPOINT: ${{ secrets.NEWSLETTER_ENDPOINT }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Set up turbo cache
        uses: rharkor/caching-for-turbo@v1.5

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 8.14.1

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Setup Earn Protocol LP App Next.js Cache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/apps/earn-protocol-landing-page/.next/cache
          key:
            ${{ runner.os }}-earn-protocol-landing-page-app-${{ hashFiles('pnpm-lock.yaml') }}-${{
            hashFiles('apps/earn-protocol-landing-page/**/*.ts',
            'apps/earn-protocol-landing-page/**/*.tsx') }}
          restore-keys:
            ${{ runner.os }}-earn-protocol-landing-page-app-${{ hashFiles('pnpm-lock.yaml') }}-

      - name: Extract commit hash
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "NEXT_PUBLIC_SHA=$calculatedSha" >> $GITHUB_ENV

      - name: Install dependencies
        run: pnpm install

      - name: Prebuild
        run: pnpm prebuild

      - name: Build
        run: pnpm build-earn-frontend-landing

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     role-to-assume: ${{ secrets.BUILD_DEPLOY_OIDC_ROLE_STAGING }}
      #     aws-region: ${{ env.AWS_REGION }}

      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1
