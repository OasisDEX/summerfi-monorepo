name: Deploy Earn Protocol Landing Page Staging
on:
  workflow_dispatch:
  push:
    branches:
      - dev

jobs:
  changes:
    name: Check for earn protocol changes
    runs-on: ubuntu-22.04
    if: ${{ github.event_name == 'push' }}
    permissions:
      pull-requests: read
    outputs:
      build-earn-protocol-landing-page: ${{ steps.filter.outputs.build-earn-protocol-landing-page }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            build-earn-protocol-landing-page:
              - 'apps/earn-protocol-landing-page/**'
              - 'packages/app-db/**'
              - 'packages/app-types/**'
              - 'packages/app-earn-ui/**'
              - 'packages/app-utils/**'
              - 'packages/serverless-shared/**'
              - 'sdk/sdk-client/**'
              - 'sdk/sdk-client-react/**'
              - '.github/workflows/deploy-earn-protocol-landing-page-staging.yaml'
  build-earn-protocol-landing-page:
    name: Build and deploy Earn Protocol LP
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
    environment: staging
    needs: changes
    if: ${{ needs.changes.outputs.build-earn-protocol-landing-page == 'true' }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Set up turbo cache
        uses: rharkor/caching-for-turbo@v1.5

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 8.14.1

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Setup Earn Protocol LP App Next.js Cache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/apps/earn-protocol-landing-page/.next/cache
          key:
            ${{ runner.os }}-earn-protocol-landing-page-app-${{ hashFiles('pnpm-lock.yaml') }}-${{
            hashFiles('apps/earn-protocol-landing-page/**/*.ts',
            'apps/earn-protocol-landing-page/**/*.tsx') }}
          restore-keys:
            ${{ runner.os }}-earn-protocol-landing-page-app-${{ hashFiles('pnpm-lock.yaml') }}-

      - name: Extract commit hash
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "NEXT_PUBLIC_SHA=$calculatedSha" >> $GITHUB_ENV

      - name: Install dependencies
        run: pnpm install

      - name: Prebuild
        run: pnpm prebuild

      - name: Build
        run: pnpm build-earn-frontend-landing

      - name: Copy the landing page to AWS S3 bucket ðŸª£
        uses: prewk/s3-cp-action@v2
        with:
          aws_access_key_id: ${{ secrets.LP_AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.LP_AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.LP_AWS_REGION }}
          source: ${{ secrets.LP_SOURCE_CONFIGURATION_FILE_PATH }}
          dest: 's3://${{ secrets.LP_AWS_BUCKET_NAME }}/'
          flags: --acl public-read --recursive
