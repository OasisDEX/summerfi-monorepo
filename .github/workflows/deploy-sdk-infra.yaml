name: "Deploy SDK Infra"

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment environment"
        required: true
        default: "staging"
        type: choice
        options:
          - staging
          - production

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
jobs:
  deploy:
    name: Deploy to ${{ github.event.inputs.environment }}
    environment: ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    env:
      COINGECKO_API_URL: ${{ secrets.COINGECKO_API_URL }}
      COINGECKO_API_VERSION: ${{ secrets.COINGECKO_API_VERSION }}
      COINGECKO_API_KEY: ${{ secrets.COINGECKO_API_KEY }}
      COINGECKO_API_AUTH_HEADER: ${{ secrets.COINGECKO_API_AUTH_HEADER }}
      COINGECKO_SUPPORTED_CHAIN_IDS: ${{ secrets.COINGECKO_SUPPORTED_CHAIN_IDS }}
      ONE_INCH_API_URL: ${{ secrets.ONE_INCH_API_URL }}
      ONE_INCH_API_VERSION: ${{ secrets.ONE_INCH_API_VERSION }}
      ONE_INCH_API_KEY: ${{ secrets.ONE_INCH_API_KEY }}
      ONE_INCH_API_AUTH_HEADER: ${{ secrets.ONE_INCH_API_AUTH_HEADER }}
      ONE_INCH_SWAP_CHAIN_IDS: ${{ secrets.ONE_INCH_SWAP_CHAIN_IDS }}
      ONE_INCH_EXCLUDED_SWAP_PROTOCOLS: ${{ vars.ONE_INCH_EXCLUDED_SWAP_PROTOCOLS }}
      ONE_INCH_API_SPOT_URL: ${{ secrets.ONE_INCH_API_SPOT_URL }}
      ONE_INCH_API_SPOT_VERSION: ${{ secrets.ONE_INCH_API_SPOT_VERSION }}
      ONE_INCH_API_SPOT_KEY: ${{ secrets.ONE_INCH_API_SPOT_KEY }}
      ONE_INCH_API_SPOT_AUTH_HEADER: ${{ secrets.ONE_INCH_API_SPOT_AUTH_HEADER }}
      SUBGRAPH_BASE: ${{ vars.SUBGRAPH_BASE }}
      SUBGRAPH_BASE_PROD: ${{ vars.SUBGRAPH_BASE_PROD }}
      SUMMER_HUB_CHAIN_ID: ${{ vars.SDK_HUB_CHAIN_ID }}
      SUMMER_DEPLOYED_CHAINS_ID: ${{ vars.SUMMER_DEPLOYED_CHAINS_ID }}
      SUMMER_DEPLOYED_CHAINS_ID_INSTI: ${{ vars.SUMMER_DEPLOYED_CHAINS_ID_INSTI }}
      SUMMER_DEPLOYMENT_CONFIG: ${{ vars.SUMMER_DEPLOYMENT_CONFIG }}
      FUNCTIONS_API_URL: ${{ vars.FUNCTIONS_API_URL }}
      SDK_DEBUG_ENABLED: ${{ vars.SDK_DEBUG_ENABLED }}
      SDK_LOGGING_ENABLED: ${{ vars.SDK_LOGGING_ENABLED }}
      SDK_RPC_GATEWAY: ${{ vars.RPC_GATEWAY }}
      SDK_DEPLOYED_VERSIONS_MAP: ${{ vars.SDK_DEPLOYED_VERSIONS_MAP }}
      SDK_DISTRIBUTIONS_BASE_URL: ${{ vars.SDK_DISTRIBUTIONS_BASE_URL }}
      SDK_DISTRIBUTIONS_FILES: ${{ vars.SDK_DISTRIBUTIONS_FILES }}
      SDK_NAMED_REFERRALS_FILE: ${{ vars.SDK_NAMED_REFERRALS_FILE }}
      SDK_SUBGRAPH_CONFIG: ${{ vars.SDK_SUBGRAPH_CONFIG }}
      SDK_SUBGRAPH_CONFIG_INSTI: ${{ vars.SDK_SUBGRAPH_CONFIG_INSTI }}

    steps:
      - name: Send start notification to Discord
        uses: Ilshidur/action-discord@0.3.2
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_SDK_DEPLOY }}
          DISCORD_EMBEDS: |
            [{
              "title":"Link to GitHub Action: ${{github.run_id}}",
              "url":"https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}"
            }]
        with:
          args: |
            ${{ github.event.inputs.environment == 'production' && 'PRODUCTION' || 'STAGING' }}: SDK_INFRA deployment `${{ github.run_id }}` started 🚀 (from branch `${{ github.ref_name }}` by [${{ github.triggering_actor }}](https://github.com/${{ github.triggering_actor }})).
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.DEPLOY_OIDC_ROLE_LAMBDA }}
          aws-region: ${{ secrets.AWS_LAMBDAS_REGION }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up turbo cache
        uses: rharkor/caching-for-turbo@v2.2.0
        with:
          max-age: 1mo
          max-size: 10gb
          cache-prefix: turbogha_
          provider: s3
          s3-bucket: staging-turbo-monorepo
          s3-region: eu-central-1
          s3-prefix: monorepo-cache/
          s3-endpoint: https://s3.amazonaws.com
          s3-access-key-id: ${{ secrets.TURBOREPO_S3_BUCKET_ACCESS_KEY_ID }}
          s3-secret-access-key: ${{ secrets.TURBOREPO_S3_BUCKET_SECRET_ACCESS_KEY }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Install dependencies
        run: pnpm prebuild:sdk

      - name: Deploy SDK
        working-directory: sdk
        run: |
          npx sst deploy --stage=${{ github.event.inputs.environment }}

      - name: Send success notification to Discord
        uses: Ilshidur/action-discord@0.3.2
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_SDK_DEPLOY }}
        with:
          args: |
            ${{ github.event.inputs.environment == 'production' && 'PRODUCTION' || 'STAGING' }}: SDK_INFRA deployment successful 🎉 - `${{ github.run_id }}`
      - name: Send failure notification to Discord
        if: failure()
        uses: Ilshidur/action-discord@0.3.2
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_SDK_DEPLOY }}
        with:
          args: |
            ${{ github.event.inputs.environment == 'production' && 'PRODUCTION' || 'STAGING' }}: SDK_INFRA deployment failed ❌ - `${{ github.run_id }}`
      - name: Send cancellation notification to Discord
        if: cancelled()
        uses: Ilshidur/action-discord@0.3.2
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_SDK_DEPLOY }}
        with:
          args: |
            ${{ github.event.inputs.environment == 'production' && 'PRODUCTION' || 'STAGING' }}: SDK_INFRA deployment cancelled 🚫 - `${{ github.run_id }}`

      - name: Trigger e2e tests in e2e-tests repository
        if: ${{ github.event.inputs.environment == 'staging' }}
        env:
          E2E_TESTS_PAT: ${{ secrets.E2E_TESTS_PAT }}
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ env.E2E_TESTS_PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/OasisDEX/e2e-tests/actions/workflows/ci_e2e_tests.yml/dispatches \
            -d "{\"ref\":\"main\", \"inputs\":{\"run_id\":\"${{ github.run_id }}\", \"repository\":\"${{ github.repository }}\"}}"
          echo 'See test results in https://github.com/OasisDEX/e2e-tests/actions/workflows/ci_e2e_tests.yml --> Job with RUN_ID ${{ github.run_id }} in the logs.'
